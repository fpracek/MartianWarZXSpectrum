# file opened: martian.asm
   1  0000                      DEVICE ZXSPECTRUM48
   2  0000                      SLDOPT COMMENT WPMEM, LOGPOINT, ASSERTION
   3  0000
   4  0000                      ORG #8000               ; Loader address (0x8000)
   5  8000
   6  8000              ;========================================================================
   7  8000              ;  BIOS SUBROUTINES
   8  8000              ;========================================================================
   9  8000
  10  8000              ;========================================================================
  11  8000              ; START OF PROGRAM
  12  8000              ;========================================================================
  13  8000
  14  8000              Start:
  15  8000
  16  8000 CD 77 8D             CALL LoadTiles            ; Load tiles into RAM
  17  8003
  18  8003
  19  8003
  20  8003 3E 09                LD A, 9
  21  8005 21 5C 98             LD HL, Humans
  22  8008 77                   LD (HL), A
  23  8009 3E 09                LD A, 9
  24  800B 21 5D 98             LD HL, Martians
  25  800E 77                   LD (HL), A
  26  800F
  27  800F              ;------------------------------------------------------------------------
  28  800F              ;  Show game presentation
  29  800F              ;------------------------------------------------------------------------
  30  800F              ShowPresentation:
  31  800F CD 60 8C             CALL ClearScreen        ; Clear the screen and set attributes
  32  8012 16 00                LD D,0
  33  8014 1E 0A                LD E, 10
  34  8016 21 CC 94     	ld      HL, TEXT_MARTIAN_WAR
  35  8019 CD 12 8E             call PrintString
  36  801C
  37  801C 16 01                LD D,1
  38  801E 1E 0A                LD E, 10
  39  8020 21 D8 94     	ld      HL, TEXT_MARTIAN_WAR_UNDERLINE
  40  8023 CD 12 8E             call PrintString
  41  8026
  42  8026 16 03                LD D,3
  43  8028 1E 01                LD E, 1
  44  802A 21 E4 94     	ld HL, TEXT_PRESENTATION_3_1
  45  802D CD 12 8E             call PrintString
  46  8030
  47  8030 16 04                LD D,4
  48  8032 1E 01                LD E, 1
  49  8034 21 02 95     	ld HL, TEXT_PRESENTATION_4_1
  50  8037 CD 12 8E             call PrintString
  51  803A
  52  803A 16 06                LD D,6
  53  803C 1E 01                LD E, 1
  54  803E 21 0C 95     	ld HL, TEXT_PRESENTATION_6_1
  55  8041 CD 12 8E             call PrintString
  56  8044
  57  8044 16 07        	LD D,7
  58  8046 1E 01                LD E, 1
  59  8048 21 28 95     	ld HL, TEXT_PRESENTATION_7_1
  60  804B CD 12 8E             call PrintString
  61  804E
  62  804E 16 08                LD D,8
  63  8050 1E 01                LD E, 1
  64  8052 21 46 95     	ld HL, TEXT_PRESENTATION_8_1
  65  8055 CD 12 8E             call PrintString
  66  8058
  67  8058 16 09                LD D,9
  68  805A 1E 01                LD E, 1
  69  805C 21 63 95     	ld HL, TEXT_PRESENTATION_9_1
  70  805F CD 12 8E             call PrintString
  71  8062
  72  8062 16 0A                LD D,10
  73  8064 1E 01                LD E, 1
  74  8066 21 7D 95     	ld HL, TEXT_PRESENTATION_10_1
  75  8069 CD 12 8E             call PrintString
  76  806C
  77  806C 16 0B                LD D,11
  78  806E 1E 01                LD E, 1
  79  8070 21 9B 95     	ld HL, TEXT_PRESENTATION_11_1
  80  8073 CD 12 8E             call PrintString
  81  8076
  82  8076 16 0C                LD D,12
  83  8078 1E 01                LD E, 1
  84  807A 21 B9 95     	ld HL, TEXT_PRESENTATION_12_1
  85  807D CD 12 8E             call PrintString
  86  8080
  87  8080 16 0D                LD D,13
  88  8082 1E 01                LD E, 1
  89  8084 21 D2 95     	ld HL, TEXT_PRESENTATION_13_1
  90  8087 CD 12 8E             call PrintString
  91  808A
  92  808A 16 0E                LD D,14
  93  808C 1E 01                LD E, 1
  94  808E 21 ED 95     	ld HL, TEXT_PRESENTATION_14_1
  95  8091 CD 12 8E             call PrintString
  96  8094
  97  8094 16 0F                LD D,15
  98  8096 1E 01                LD E, 1
  99  8098 21 04 96     	ld HL, TEXT_PRESENTATION_15_1
 100  809B CD 12 8E             call PrintString
 101  809E
 102  809E 16 10                LD D,16
 103  80A0 1E 01                LD E, 1
 104  80A2 21 21 96     	ld HL, TEXT_PRESENTATION_16_1
 105  80A5 CD 12 8E             call PrintString
 106  80A8
 107  80A8 16 11                LD D,17
 108  80AA 1E 01                LD E, 1
 109  80AC 21 3F 96     	ld HL, TEXT_PRESENTATION_17_1
 110  80AF CD 12 8E             call PrintString
 111  80B2
 112  80B2 16 12                LD D,18
 113  80B4 1E 01                LD E, 1
 114  80B6 21 5B 96     	ld HL, TEXT_PRESENTATION_18_1
 115  80B9 CD 12 8E             call PrintString
 116  80BC
 117  80BC 16 13                LD D,19
 118  80BE 1E 01                LD E, 1
 119  80C0 21 79 96     	ld HL, TEXT_PRESENTATION_19_1
 120  80C3 CD 12 8E             call PrintString
 121  80C6
 122  80C6 16 15                LD D,21
 123  80C8 1E 03                LD E, 3
 124  80CA 21 89 96     	ld HL, TEXT_PRESENTATION_21_3
 125  80CD CD 12 8E             call PrintString
 126  80D0
 127  80D0 16 17                LD D,23
 128  80D2 1E 05                LD E, 5
 129  80D4 21 A2 96     	ld HL, TEXT_FAUSTO_PRACEK
 130  80D7 CD 12 8E             call PrintString
 131  80DA
 132  80DA CD 29 8B             CALL WaitUntilEnterIsPressed
 133  80DD
 134  80DD
 135  80DD              ;-------------------------------------------------------------------------
 136  80DD              ; Level selection
 137  80DD              ;-------------------------------------------------------------------------
 138  80DD              LevelSelection:
 139  80DD
 140  80DD
 141  80DD
 142  80DD CD 60 8C             CALL ClearScreen        ; Clear the screen and set attributes
 143  80E0
 144  80E0 16 00                LD D,0
 145  80E2 1E 0A                LD E, 10
 146  80E4 21 CC 94     	ld      HL, TEXT_MARTIAN_WAR
 147  80E7 CD 12 8E             call PrintString
 148  80EA
 149  80EA 16 01                LD      D,1
 150  80EC 1E 0A                LD      E, 10
 151  80EE 21 D8 94     	ld      HL, TEXT_MARTIAN_WAR_UNDERLINE
 152  80F1 CD 12 8E             call    PrintString
 153  80F4
 154  80F4 21 B7 96     	ld	hl, TXT_LEVELS
 155  80F7 1E 00        	ld	e, 0
 156  80F9 16 07        	ld	d, 7
 157  80FB CD 12 8E     	call    PrintString
 158  80FE
 159  80FE 21 D8 96     	ld	hl, TXT_LEVEL_1
 160  8101 1E 05        	ld	e, 5
 161  8103 16 09        	ld	d, 9
 162  8105 CD 12 8E     	call    PrintString
 163  8108
 164  8108 21 E7 96     	ld      hl, TXT_LEVEL_2
 165  810B 1E 05        	ld	e, 5
 166  810D 16 0A        	ld	d, 10
 167  810F CD 12 8E     	call    PrintString
 168  8112
 169  8112 21 FA 96     	ld      hl, TXT_LEVEL_3
 170  8115 1E 05        	ld	e, 5
 171  8117 16 0B        	ld	d, 11
 172  8119 CD 12 8E     	call    PrintString
 173  811C
 174  811C 21 09 97             ld      hl, TXT_KEYS
 175  811F 1E 00        	ld	e, 0
 176  8121 16 0F        	ld	d, 15
 177  8123 CD 12 8E     	call    PrintString
 178  8126
 179  8126 21 26 97             ld      hl, TXT_KEY_4
 180  8129 1E 05        	ld	e, 5
 181  812B 16 11        	ld	d, 17
 182  812D CD 12 8E     	call    PrintString
 183  8130
 184  8130 21 3B 97             ld      hl, TXT_KEY_5
 185  8133 1E 05        	ld	e, 5
 186  8135 16 12        	ld	d, 18
 187  8137 CD 12 8E     	call    PrintString
 188  813A
 189  813A 21 48 97             ld      hl, TXT_KEY_6
 190  813D 1E 05        	ld	e, 5
 191  813F 16 13        	ld	d, 19
 192  8141 CD 12 8E     	call    PrintString
 193  8144
 194  8144 21 5E 97             ld      hl, TXT_KEY_SPACE
 195  8147 1E 05        	ld	e, 5
 196  8149 16 14        	ld	d, 20
 197  814B CD 12 8E     	call    PrintString
 198  814E
 199  814E              LevelSelectionLoop:
 200  814E CD 12 91             call ResetMartianInfo
 201  8151 CD 0B 8B             CALL ReadKeyboard
 202  8154 FE 31                CP 49
 203  8156 CA 66 81             JP Z, LevelSelectionLevel1
 204  8159 FE 32                CP 50
 205  815B CA 86 81             JP Z, LevelSelectionLevel2
 206  815E FE 33                CP 51
 207  8160 CA A6 81             JP Z, LevelSelectionLevel3
 208  8163 C3 4E 81             JP LevelSelectionLoop
 209  8166              LevelSelectionLevel1:
 210  8166 3E 01                LD A, 1
 211  8168 21 DD 80             LD HL, LevelSelection
 212  816B 77                   LD (HL), A
 213  816C 3E 0C                LD A, 12
 214  816E 21 5D 98             LD HL, Martians
 215  8171 77                   LD (HL), A
 216  8172 21 84 98             LD hl, MartianShipsInfo+23              ; Martian ship speed
 217  8175 36 04                ld (hl), 4
 218  8177 21 6D 98             ld hl, MartianShipsInfo
 219  817A 3E 14                ld a, 20                                ; Set martian bullet frequency ratio
 220  817C 77                   ld (hl), a
 221  817D 21 67 98             ld hl, HumanWeaponHideLevelTimer
 222  8180 3E 0F                ld a, 15
 223  8182 77                   ld (hl), a
 224  8183 C3 C3 81             JP GameStart
 225  8186              LevelSelectionLevel2:
 226  8186 3E 02                LD A, 2
 227  8188 21 DD 80             LD HL, LevelSelection
 228  818B 77                   LD (HL), A
 229  818C 3E 0F                LD A, 15
 230  818E 21 5D 98             LD HL, Martians
 231  8191 77                   LD (HL), A
 232  8192 21 84 98             LD hl, MartianShipsInfo+23              ; Martian ship speed
 233  8195 36 03                ld (hl), 3
 234  8197 21 6D 98             ld hl, MartianShipsInfo
 235  819A 3E 08                ld a, 8                                 ; Set martian bullet frequency ratio
 236  819C 77                   ld (hl), a
 237  819D 21 67 98             ld hl, HumanWeaponHideLevelTimer
 238  81A0 3E 0F                ld a, 15
 239  81A2 77                   ld (hl), a
 240  81A3 C3 C3 81             JP GameStart
 241  81A6              LevelSelectionLevel3:
 242  81A6 3E 03                LD A, 3
 243  81A8 21 DD 80             LD HL, LevelSelection
 244  81AB 77                   LD (HL), A
 245  81AC 3E 13                LD A, 19
 246  81AE 21 5D 98             LD HL, Martians
 247  81B1 77                   LD (HL), A
 248  81B2 21 84 98             LD hl, MartianShipsInfo+23              ; Martian ship speed
 249  81B5 36 01                ld (hl), 1
 250  81B7 21 6D 98             ld hl, MartianShipsInfo
 251  81BA 3E 14                ld a, 20                                ; Set martian bullet frequency ratio
 252  81BC 77                   ld (hl), a
 253  81BD 21 67 98             ld hl, HumanWeaponHideLevelTimer
 254  81C0 3E 1E                ld a, 30
 255  81C2 77                   ld (hl), a
 256  81C3              ;------------------------------------------------------------------------
 257  81C3              ; Game start
 258  81C3              ;------------------------------------------------------------------------
 259  81C3              GameStart:
 260  81C3 3E 0F                LD A, 15
 261  81C5 21 5C 98             LD HL, Humans
 262  81C8 77                   LD (HL), A
 263  81C9 CD A0 8C             CALL ShowGameField
 264  81CC CD 69 8B             CALL UpdateInfo
 265  81CF
 266  81CF
 267  81CF CD 29 8C             CALL ShowRunningHumans
 268  81D2
 269  81D2
 270  81D2
 271  81D2 3E 0F                LD A, 15
 272  81D4 21 63 98             LD HL, HumanWeaponPosition
 273  81D7 77                   LD (HL), A
 274  81D8 CD C4 8A             CALL ShowHumanWeapon
 275  81DB 21 68 98             LD HL, HumanWeaponBulletYPosition
 276  81DE 3E 00                LD A, 0
 277  81E0 77                   LD (HL), A
 278  81E1 21 6C 98             ld hl, MartianShipCollisionIndex
 279  81E4 3E 0A                ld a, 10
 280  81E6 77                   ld (hl), a                                      ; Reset martian index to remove (10 = no martian to remove)
 281  81E7 21 4F 99             ld hl, SpriteCollisionStaticHumanPosition
 282  81EA AF                   xor a
 283  81EB 77                   ld (hl), a                                      ; Reset static human position to remove (0 = no human to remove)
 284  81EC 21 4E 99             ld	hl, CurrentMartianBullet
 285  81EF 36 00        	ld	(hl), 0		                        ; Reset martian bullets counter
 286  81F1 CD 21 91             call ResetHumanWeaponHideTimer
 287  81F4 CD F9 90             call ResetMartianBulletsPositions
 288  81F7              ;------------------------------------------------------------------------
 289  81F7              ; Main game loop
 290  81F7              ;------------------------------------------------------------------------
 291  81F7              GameLoop:
 292  81F7 C3 5E 84             JP CheckGameStatus
 293  81FA CD 81 90             call MartianBulletFireEvaluation
 294  81FD              GameLoopAfterStatus:
 295  81FD CD 81 85             CALL RemoveMartianShipAfterCollision
 296  8200 CD 45 85             CALL RemoveStaticHumanAfterCollision
 297  8203 CD 32 85             CALL CheckHumanWeaponHideTimer
 298  8206 CD 0B 8B             CALL ReadKeyboard
 299  8209 FE 20                CP 32
 300  820B CA 19 83             JP Z, GameLoopHumanWeaponFire
 301  820E FE 34                CP 52
 302  8210 CA 82 83             JP Z, GameLoopHumanWeaponDirectionLeft
 303  8213 FE 35                CP 53
 304  8215 CA 9B 83             JP Z, GameLoopHumanWeaponStop
 305  8218 FE 36                CP 54
 306  821A CA 92 83             JP Z, GameLoopHumanWeaponDirectionRight
 307  821D              GameLoopNoFire:
 308  821D CD 4D 89             call NewMartianShipShowingEvaluation
 309  8220 CD C5 86             call MartianShipsMove
 310  8223              GameLoopHumanWeaponMovementManagement:
 311  8223 CD F5 8E             CALL GameMainLoopDelay
 312  8226 21 63 98             LD HL, HumanWeaponPosition
 313  8229 7E                   LD A, (HL)              ; Get current human weapon position
 314  822A 5F                   LD E, A
 315  822B 21 64 98             LD HL, HumanWeaponDirection
 316  822E 7E                   LD A, (HL)              ; Get current human weapon direction
 317  822F FE 01                CP 1
 318  8231 CA F7 82             JP Z, GameLoopHumanWeaponMoveLeft
 319  8234 FE 02                CP 2
 320  8236 CA 08 83             JP Z, GameLoopHumanWeaponMoveRight
 321  8239
 322  8239              GameLoopHumanWeaponBulletManagement:
 323  8239 21 68 98             LD HL, HumanWeaponBulletYPosition
 324  823C 7E                   LD A, (HL)
 325  823D FE 00                CP 0
 326  823F C2 4B 82             JP NZ, GameLoopHumanBulletMove
 327  8242              GameLoopMartiansBulletsManagement:
 328  8242 CD 81 90             call MartianBulletFireEvaluation
 329  8245 CD 1F 90             call MoveMartianBullets
 330  8248
 331  8248 C3 F7 81             JP GameLoop
 332  824B              GameLoopHumanBulletMove:
 333  824B 21 68 98             LD HL, HumanWeaponBulletYPosition
 334  824E 7E                   LD A, (HL)
 335  824F 3D                   DEC A
 336  8250 FE 01                CP 1
 337  8252 CA 56 82             JP Z, GameLoopHumanBulletMove1PosDecremented
 338  8255 3D                   DEC A
 339  8256              GameLoopHumanBulletMove1PosDecremented:
 340  8256 77                   LD (HL), A
 341  8257 57                   LD D, A
 342  8258 21 69 98             LD HL, HumansWeaponBulletMaxTop
 343  825B BE                   CP (HL)
 344  825C CA A8 82             JP Z, GameLoopHumanRemoveBullet
 345  825F 3C                   INC a
 346  8260 BE                   CP (HL)
 347  8261 CA A8 82             JP Z, GameLoopHumanRemoveBullet
 348  8264 21 65 98             LD HL, HumanWeaponBulletXPosition
 349  8267 7E                   LD A, (HL)
 350  8268 5F                   LD E, A
 351  8269 3E BD                LD A, SPRT_HUMAN_BULLET
 352  826B CD C1 8D             CALL PrintRamChar
 353  826E 3C                   INC A
 354  826F 1C                   INC E
 355  8270 CD C1 8D             call PrintRamChar
 356  8273 7A                   LD A, D
 357  8274 FE 10                CP 16
 358  8276 CA 42 82             JP Z, GameLoopMartiansBulletsManagement
 359  8279
 360  8279 3C                   INC A
 361  827A 57                   LD D, A
 362  827B 3E 20                LD A, 32
 363  827D CD C1 8D             CALL PrintRamChar
 364  8280 1D                   DEC E
 365  8281 3E 20                LD A, 32
 366  8283 CD C1 8D             CALL PrintRamChar
 367  8286 14                   INC D
 368  8287 3E 20                LD A, 32
 369  8289 CD C1 8D             CALL PrintRamChar
 370  828C 1C                   INC E
 371  828D 3E 20                LD A, 32
 372  828F CD C1 8D             CALL PrintRamChar
 373  8292 3E 61                ld      a, TILE_BORDER_VERTICAL
 374  8294 1E 14                ld      e, 20
 375  8296 16 01                ld      d, 1
 376  8298 CD C1 8D             call    PrintRamChar
 377  829B 14                   inc     d
 378  829C CD C1 8D             call    PrintRamChar
 379  829F 3E 64                ld      a, TILE_BORDER_BOTTOM_LEFT_CORNER
 380  82A1 14                   inc     d
 381  82A2 CD C1 8D             call    PrintRamChar
 382  82A5 C3 42 82             JP GameLoopMartiansBulletsManagement
 383  82A8              GameLoopHumanRemoveBullet:
 384  82A8 21 68 98             LD HL, HumanWeaponBulletYPosition
 385  82AB 7E                   LD A, (HL)
 386  82AC 57                   LD D, A
 387  82AD 3E 00                LD A, 0
 388  82AF 77                   LD (HL), A
 389  82B0 21 65 98             LD HL, HumanWeaponBulletXPosition
 390  82B3 7E                   LD A, (HL)
 391  82B4 5F                   LD E, A
 392  82B5 14                   INC D
 393  82B6 21 69 98             LD HL, HumansWeaponBulletMaxTop
 394  82B9 7E                   LD A, (HL)
 395  82BA FE 01                CP 1
 396  82BC CA C8 82             JP Z, GameLoopHumanRemoveBulletContinue
 397  82BF 3E 20                LD A, 32
 398  82C1 CD C1 8D             CALL PrintRamChar
 399  82C4 1C                   INC E
 400  82C5 CD C1 8D             call PrintRamChar
 401  82C8              GameLoopHumanRemoveBulletContinue:
 402  82C8 14                   INC D
 403  82C9 3E 20                LD A, 32
 404  82CB CD C1 8D             CALL PrintRamChar
 405  82CE 1C                   INC E
 406  82CF 3E 20                LD A, 32
 407  82D1 CD C1 8D             CALL PrintRamChar
 408  82D4 1D                   DEC E
 409  82D5 1D                   DEC E
 410  82D6 3E 20                LD A, 32
 411  82D8 CD C1 8D             CALL PrintRamChar
 412  82DB 3E 61                ld      a, TILE_BORDER_VERTICAL
 413  82DD 1E 14                ld      e, 20
 414  82DF 16 01                ld      d, 1
 415  82E1 CD C1 8D             call    PrintRamChar
 416  82E4 14                   inc     d
 417  82E5 CD C1 8D             call    PrintRamChar
 418  82E8 3E 64                ld      a, TILE_BORDER_BOTTOM_LEFT_CORNER
 419  82EA 14                   inc     d
 420  82EB CD C1 8D             call    PrintRamChar
 421  82EE CD 69 8B             call    UpdateInfo
 422  82F1 CD A3 8C             call    ShowGameFieldWithoutClear
 423  82F4
 424  82F4 C3 42 82     	jp	GameLoopMartiansBulletsManagement
 425  82F7
 426  82F7
 427  82F7              GameLoopHumanWeaponMoveLeft:
 428  82F7 1D                   DEC E
 429  82F8 7B                   LD A, E
 430  82F9 FE 01                CP 1
 431  82FB CA 8B 83             JP Z, GameLoopHumanWeaponDirectionRightChange
 432  82FE 21 63 98             LD HL, HumanWeaponPosition
 433  8301 73                   LD (HL), E
 434  8302 CD C4 8A             CALL ShowHumanWeapon
 435  8305 C3 39 82             JP GameLoopHumanWeaponBulletManagement
 436  8308              GameLoopHumanWeaponMoveRight:
 437  8308 1C                   INC E
 438  8309 7B                   LD A, E
 439  830A FE 1E                CP 30
 440  830C CA 82 83             JP Z, GameLoopHumanWeaponDirectionLeft
 441  830F 21 63 98             LD HL, HumanWeaponPosition
 442  8312 73                   LD (HL), E
 443  8313 CD C4 8A             CALL ShowHumanWeapon
 444  8316 C3 39 82             JP GameLoopHumanWeaponBulletManagement
 445  8319              GameLoopHumanWeaponFire:
 446  8319
 447  8319 21 68 98             LD HL, HumanWeaponBulletYPosition
 448  831C 7E                   LD A, (HL)
 449  831D FE 00                CP 0
 450  831F C2 F7 81             JP NZ, GameLoop
 451  8322 21 66 98             ld hl, HumanWeaponHideTimer
 452  8325 7E                   ld a,(hl)
 453  8326 FE 00                cp 0
 454  8328 C2 1D 82             JP NZ, GameLoopNoFire
 455  832B 21 69 98             LD HL, HumansWeaponBulletMaxTop
 456  832E 3E 00                LD A, 0
 457  8330 77                   LD (HL), A
 458  8331 21 68 98             LD HL, HumanWeaponBulletYPosition
 459  8334 3E 12                LD A, 18
 460  8336 77                   LD (HL), A        ; Set bullet Y position
 461  8337 21 63 98             LD HL, HumanWeaponPosition
 462  833A 7E                   LD A, (HL)
 463  833B 21 65 98             LD HL, HumanWeaponBulletXPosition
 464  833E 77                   LD (HL), A        ; Set bullet X position
 465  833F FE 14                CP 20
 466  8341 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 467  8344 FE 15                CP 21
 468  8346 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 469  8349 FE 16                CP 22
 470  834B CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 471  834E FE 17                CP 23
 472  8350 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 473  8353 FE 18                CP 24
 474  8355 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 475  8358 FE 19                CP 25
 476  835A CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 477  835D FE 1A                CP 26
 478  835F CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 479  8362 FE 1B                CP 27
 480  8364 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 481  8367 FE 1C                CP 28
 482  8369 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 483  836C FE 1D                CP 29
 484  836E CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 485  8371 FE 1E                CP 30
 486  8373 CA 79 83             JP Z, GameLoopHumanWeaponFireLowerTop
 487  8376              GameLoopHumanWeaponFireContinue:
 488  8376 C3 23 82             JP GameLoopHumanWeaponMovementManagement
 489  8379              GameLoopHumanWeaponFireLowerTop:
 490  8379 21 69 98             LD HL, HumansWeaponBulletMaxTop
 491  837C 3E 02                LD A, 2
 492  837E 77                   LD (HL), A        ; Set max top bullet limit
 493  837F C3 76 83             JP GameLoopHumanWeaponFireContinue
 494  8382              GameLoopHumanWeaponDirectionLeft:
 495  8382 21 64 98             ld HL,HumanWeaponDirection
 496  8385 3E 01                LD A,1
 497  8387 77                   LD (HL),A
 498  8388 C3 23 82             JP GameLoopHumanWeaponMovementManagement
 499  838B
 500  838B              GameLoopHumanWeaponDirectionRightChange:
 501  838B 21 63 98             LD HL, HumanWeaponPosition
 502  838E 77                   LD (HL), A
 503  838F CD C4 8A             CALL ShowHumanWeapon
 504  8392              GameLoopHumanWeaponDirectionRight:
 505  8392
 506  8392 21 64 98             ld HL,HumanWeaponDirection
 507  8395 3E 02                LD A,2
 508  8397 77                   LD (HL),A
 509  8398 C3 39 82             JP GameLoopHumanWeaponBulletManagement
 510  839B              GameLoopHumanWeaponStop:
 511  839B 21 64 98             ld HL,HumanWeaponDirection
 512  839E 3E 00                LD A,0
 513  83A0 77                   LD (HL),A
 514  83A1 C3 23 82             JP GameLoopHumanWeaponMovementManagement
 515  83A4              ;========================================================================
 516  83A4              ;  ROUTINES
 517  83A4              ;========================================================================
 518  83A4
 519  83A4              ; ==============================================
 520  83A4              ; Rnd16
 521  83A4              ; ----------------------------------------------
 522  83A4              ; Generates a 16-bit pseudo-random number in HL
 523  83A4              ; using a linear-feedback shift register (LFSR).
 524  83A4              ; On return:
 525  83A4              ;   HL = new pseudo-random value
 526  83A4              ; The new seed is also stored back into RandomSeed.
 527  83A4              ; ==============================================
 528  83A4              Rnd16:
 529  83A4                ; 1) Load current seed from memory into HL
 530  83A4 2A 52 99       LD HL,(RandomSeed16)
 531  83A7
 532  83A7                ; 2) Compute feedback bit as XOR of bits 15, 13, 12, 10 of the old seed.
 533  83A7                ;    bit 15 = H bit 7
 534  83A7                ;    bit 13 = H bit 5
 535  83A7                ;    bit 12 = H bit 4
 536  83A7                ;    bit 10 = H bit 2
 537  83A7
 538  83A7 3E 00          LD A,0
 539  83A9 44             LD B,H        ; We'll check specific bits in B
 540  83AA
 541  83AA                ; Check bit 7 (old bit15)
 542  83AA CB 78          BIT 7,B
 543  83AC 20 02          JR NZ,Bit7is1
 544  83AE              Bit7is0:
 545  83AE 18 02          JR CheckBit5
 546  83B0              Bit7is1:
 547  83B0 EE 01          XOR 1         ; A = A XOR 1
 548  83B2              CheckBit5:
 549  83B2 CB 68          BIT 5,B       ; old bit13
 550  83B4 20 02          JR NZ,Bit5is1
 551  83B6              Bit5is0:
 552  83B6 18 02          JR CheckBit4
 553  83B8              Bit5is1:
 554  83B8 EE 01          XOR 1
 555  83BA              CheckBit4:
 556  83BA CB 60          BIT 4,B       ; old bit12
 557  83BC 20 02          JR NZ,Bit4is1
 558  83BE              Bit4is0:
 559  83BE 18 02          JR CheckBit2
 560  83C0              Bit4is1:
 561  83C0 EE 01          XOR 1
 562  83C2              CheckBit2:
 563  83C2 CB 50          BIT 2,B       ; old bit10
 564  83C4 20 02          JR NZ,Bit2is1
 565  83C6              Bit2is0:
 566  83C6 18 02          JR FeedbackDone
 567  83C8              Bit2is1:
 568  83C8 EE 01          XOR 1
 569  83CA              FeedbackDone:
 570  83CA                ; Now A = 0 or 1, which is the new feedback bit
 571  83CA
 572  83CA                ; 3) Shift HL left by 1 bit
 573  83CA                ;    - The leftmost bit (bit15) is lost
 574  83CA                ;    - The carry from L's bit7 goes into H's bit0
 575  83CA CB 25          SLA L
 576  83CC CB 14          RL H
 577  83CE
 578  83CE                ; 4) Force bit 0 of L to the feedback bit in A
 579  83CE 4F             LD C,A        ; Save feedback in C
 580  83CF 7D             LD A,L
 581  83D0 E6 FE          AND 0FEh      ; Clear bit0
 582  83D2 B1             OR  C         ; Set it if feedback=1
 583  83D3 6F             LD L,A
 584  83D4
 585  83D4                ; 5) Store updated HL back into memory as the new seed
 586  83D4 22 52 99       LD (RandomSeed16),HL
 587  83D7
 588  83D7                ; 6) Return with the new pseudo-random number in HL
 589  83D7 C9             RET
 590  83D8
 591  83D8              ; =================================================
 592  83D8              ; GetMartianShipPosOnLose
 593  83D8              ; -------------------------------------------------
 594  83D8              ; Returns in:
 595  83D8              ;   A = x (column)
 596  83D8              ;   B = y (row)
 597  83D8              ;
 598  83D8              ; Valid positions:
 599  83D8              ;   - Top zone:     y=1..3,   x=1..18
 600  83D8              ;   - Middle zone:  y=4..8,   x=1..29
 601  83D8              ;   - Final zone:   y=15..20, x=1..29
 602  83D8              ;
 603  83D8              ; Exclusions:
 604  83D8              ;   - row 0, 9..14, 21..23
 605  83D8              ;   - col 0, 30, 31
 606  83D8              ;   - in top zone, columns 19..31 esclusi
 607  83D8              ;   - HL must be < 373 => scartiamo se >= 373
 608  83D8              ; =================================================
 609  83D8
 610  83D8              GetMartianShipPosOnLose:
 611  83D8                ; 1) Loop until HL < 373
 612  83D8              GetRandomValue:
 613  83D8 CD A4 83       CALL Rnd16             ; HL = 16-bit random number
 614  83DB 11 75 01       LD DE,373
 615  83DE CD 1E 84       CALL CompareHLwithDE   ; Compare HL with DE (373)
 616  83E1 30 F5          JR NC,GetRandomValue   ; If HL >= 373, discard and regenerate
 617  83E3
 618  83E3                ; Now HL < 373
 619  83E3                ; 2) Check sub-zones
 620  83E3
 621  83E3                ; --> Top zone threshold: 0..53 (54 positions)
 622  83E3 7C             LD A,H
 623  83E4 B5             OR L                   ; Combine HL in flags
 624  83E5 11 36 00       LD DE,54
 625  83E8 CD 1E 84       CALL CompareHLwithDE
 626  83EB 38 28          JR C,InTopZone         ; If HL < 54, go top zone
 627  83ED
 628  83ED                ; --> Middle zone threshold: next 145 positions => 54..198
 629  83ED 11 C7 00       LD DE,199             ; 54 + 145 = 199
 630  83F0 CD 1E 84       CALL CompareHLwithDE
 631  83F3 38 10          JR C,InZoneA          ; If HL < 199, go zone A (rows 4..8)
 632  83F5
 633  83F5              ; --> Otherwise, zone B (rows 15..20)
 634  83F5 11 C7 00       LD DE,199
 635  83F8 B7             OR A
 636  83F9 ED 52          SBC HL,DE             ; HL in [0..(174-1)] = 0..173
 637  83FB                ; rows 15..20 => 6 righe
 638  83FB                ; columns 1..29 => 29 colonne
 639  83FB
 640  83FB CD 42 84       CALL Divide16BitBy29  ; B=Quotient, C=Remainder
 641  83FE                ; row
 642  83FE 78             LD A,B
 643  83FF C6 0F          ADD A,15
 644  8401 47             LD B,A
 645  8402                ; col
 646  8402 79             LD A,C
 647  8403 3C             INC A
 648  8404 C9             RET
 649  8405
 650  8405              ;==================================================
 651  8405              ; InZoneA:
 652  8405              ; HL in [54..198]
 653  8405              ; => adjust: HL -= 54 => range [0..(145-1)] = [0..144]
 654  8405              ; rows 4..8 => 5 righe, columns 1..29 => 29 colonne
 655  8405              ;==================================================
 656  8405              InZoneA:
 657  8405 11 36 00       LD DE,54
 658  8408 B7             OR A
 659  8409 ED 52          SBC HL,DE
 660  840B
 661  840B CD 42 84       CALL Divide16BitBy29   ; B=Quotient, C=Remainder
 662  840E                ; row
 663  840E 78             LD A,B
 664  840F C6 04          ADD A,4
 665  8411 47             LD B,A
 666  8412                ; col
 667  8412 79             LD A,C
 668  8413 3C             INC A
 669  8414 C9             RET
 670  8415
 671  8415              ;==================================================
 672  8415              ; InTopZone:
 673  8415              ; HL in [0..53]
 674  8415              ; => 3 righe (1..3), 18 colonne (1..18)
 675  8415              ;==================================================
 676  8415              InTopZone:
 677  8415 CD 26 84       CALL Divide16BitBy18   ; B=Quotient, C=Remainder
 678  8418                ; row
 679  8418 78             LD A,B
 680  8419 3C             INC A                  ; => y = B + 1 => 1..3
 681  841A 47             LD B,A
 682  841B                ; col
 683  841B 79             LD A,C
 684  841C 3C             INC A                  ; => x = C + 1 => 1..18
 685  841D C9             RET
 686  841E
 687  841E
 688  841E              ;==================================================
 689  841E              ; CompareHLwithDE
 690  841E              ;--------------------------------------------------
 691  841E              ; Compares HL with DE:
 692  841E              ;  - Carry set if HL < DE
 693  841E              ;  - Zero set if HL = DE
 694  841E              ;==================================================
 695  841E              CompareHLwithDE:
 696  841E 7C             LD A,H
 697  841F BA             CP D
 698  8420 20 03          JR NZ,CheckHighDone
 699  8422 7D             LD A,L
 700  8423 BB             CP E
 701  8424 C9             RET
 702  8425              CheckHighDone:
 703  8425 C9             RET
 704  8426
 705  8426
 706  8426              ;==================================================
 707  8426              ; Divide16BitBy18
 708  8426              ;--------------------------------------------------
 709  8426              ; HL / 18 -> quotient in B, remainder in C
 710  8426              ;==================================================
 711  8426              Divide16BitBy18:
 712  8426 06 00          LD B,0
 713  8428              Div18Loop:
 714  8428 7C             LD A,H
 715  8429 B7             OR A
 716  842A 28 09          JR Z,CheckLow18
 717  842C
 718  842C              Sub18:
 719  842C 11 12 00       LD DE,18
 720  842F B7             OR A
 721  8430 ED 52          SBC HL,DE
 722  8432 04             INC B
 723  8433 18 F3          JR Div18Loop
 724  8435
 725  8435              CheckLow18:
 726  8435 7D             LD A,L
 727  8436 FE 12          CP 18
 728  8438 38 02          JR C,EndDiv18
 729  843A 18 F0          JR Sub18
 730  843C
 731  843C              EndDiv18:
 732  843C 4D             LD C,L
 733  843D 3E 00          LD A,0
 734  843F 67             LD H,A
 735  8440 6F             LD L,A
 736  8441 C9             RET
 737  8442
 738  8442
 739  8442              ;==================================================
 740  8442              ; Divide16BitBy29
 741  8442              ;--------------------------------------------------
 742  8442              ; HL / 29 -> quotient in B, remainder in C
 743  8442              ;==================================================
 744  8442              Divide16BitBy29:
 745  8442 06 00          LD B,0
 746  8444              Div29Loop:
 747  8444 7C             LD A,H
 748  8445 B7             OR A
 749  8446 28 09          JR Z,CheckLow29
 750  8448
 751  8448              Sub29:
 752  8448 11 1D 00       LD DE,29
 753  844B B7             OR A
 754  844C ED 52          SBC HL,DE
 755  844E 04             INC B
 756  844F 18 F3          JR Div29Loop
 757  8451
 758  8451              CheckLow29:
 759  8451 7D             LD A,L
 760  8452 FE 1D          CP 29
 761  8454 38 02          JR C,EndDiv29
 762  8456 18 F0          JR Sub29
 763  8458
 764  8458              EndDiv29:
 765  8458 4D             LD C,L
 766  8459 3E 00          LD A,0
 767  845B 67             LD H,A
 768  845C 6F             LD L,A
 769  845D C9             RET
 770  845E
 771  845E
 772  845E
 773  845E
 774  845E
 775  845E
 776  845E
 777  845E
 778  845E              ;------------------------------------------------------------------------
 779  845E              ; Check game status
 780  845E              ;------------------------------------------------------------------------
 781  845E              CheckGameStatus:
 782  845E 21 5D 98             LD HL, Martians
 783  8461 7E                   LD A, (HL)
 784  8462 FE 00                CP 0
 785  8464 CA 73 84             JP Z, GameOverWin
 786  8467 21 5C 98             LD HL, Humans
 787  846A 7E                   LD A, (HL)
 788  846B FE 00                CP 0
 789  846D CA BB 84             JP Z, GameOverLose
 790  8470 C3 FD 81             JP GameLoopAfterStatus
 791  8473
 792  8473              ;------------------------------------------------------------------------
 793  8473              ; Game over win
 794  8473              ;------------------------------------------------------------------------
 795  8473              GameOverWin:
 796  8473 CD 98 86             call HideHumanWeapon
 797  8476
 798  8476 21 D8 97             ld      hl, TXT_WIN_1
 799  8479 1E 08        	ld	e, 8
 800  847B 16 0A        	ld	d, 10
 801  847D CD 12 8E     	call    PrintString
 802  8480
 803  8480 21 E8 97             ld      hl, TXT_WIN_2
 804  8483 1E 01        	ld	e, 1
 805  8485 16 0C        	ld	d, 12
 806  8487 CD 12 8E     	call    PrintString
 807  848A
 808  848A 21 07 98             ld      hl, TXT_WIN_3
 809  848D 1E 07        	ld	e, 7
 810  848F 16 0D        	ld	d, 13
 811  8491 CD 12 8E     	call    PrintString
 812  8494
 813  8494 21 BB 97             ld      hl, TXT_PLAY_AGAIN
 814  8497 1E 02        	ld	e, 2
 815  8499 16 10        	ld	d, 16
 816  849B CD 12 8E     	call    PrintString
 817  849E CD A3 8C             call ShowGameFieldWithoutClear
 818  84A1
 819  84A1 1E 01                LD   E, 1               ; Initialize E to 1
 820  84A3
 821  84A3              LoopNumbers:
 822  84A3
 823  84A3                      ; Check if E is odd or even
 824  84A3 7B                   LD   A, E
 825  84A4 E6 01                AND  1                  ; If bit 0 is 1 => odd, if 0 => even
 826  84A6 28 0A                JR   Z, SkipNumber      ; If even, skip the call part
 827  84A8
 828  84A8                      ; Set D=20 and call GetMatrixValue
 829  84A8 16 14                LD   D, 20
 830  84AA CD A9 86             CALL GetMatrixValue     ; Return value in A
 831  84AD
 832  84AD                      ; If A == SPRT_HUMAN_STATIC, then call ShowJumpingHuman
 833  84AD FE 71                CP   SPRT_HUMAN_STATIC
 834  84AF CC 01 8F             CALL Z, ShowJumpingHuman
 835  84B2
 836  84B2              SkipNumber:
 837  84B2                      ; Increment E
 838  84B2 1C                   INC  E
 839  84B3 FE 1E                CP   30                 ; If E == 30, we're past 29
 840  84B5 20 EC                JR   NZ, LoopNumbers    ; If not 30, continue the loop
 841  84B7
 842  84B7                      ; If E reached 30, reset to 1 and restart the loop
 843  84B7 1E 01                LD   E, 1
 844  84B9 18 E8                JR   LoopNumbers
 845  84BB
 846  84BB
 847  84BB
 848  84BB
 849  84BB
 850  84BB
 851  84BB
 852  84BB              ;------------------------------------------------------------------------
 853  84BB              ; Game over lose
 854  84BB              ;------------------------------------------------------------------------
 855  84BB              GameOverLose:
 856  84BB 21 52 99             ld hl, RandomSeed16
 857  84BE 06 0A                ld b, 10
 858  84C0 0E FA                ld c, 250
 859  84C2 71 23 70 2B          ld (hl), bc
 860  84C6 CD 98 86             call HideHumanWeapon
 861  84C9
 862  84C9 21 75 97             ld      hl, TXT_LOSE_1
 863  84CC 1E 0B        	ld	e, 11
 864  84CE 16 0A        	ld	d, 10
 865  84D0 CD 12 8E     	call    PrintString
 866  84D3
 867  84D3 21 7F 97             ld      hl, TXT_LOSE_2
 868  84D6 1E 01        	ld	e, 1
 869  84D8 16 0C        	ld	d, 12
 870  84DA CD 12 8E     	call    PrintString
 871  84DD
 872  84DD 21 9E 97             ld      hl, TXT_LOSE_3
 873  84E0 1E 02        	ld	e, 2
 874  84E2 16 0D        	ld	d, 13
 875  84E4 CD 12 8E     	call    PrintString
 876  84E7
 877  84E7 21 BB 97             ld      hl, TXT_PLAY_AGAIN
 878  84EA 1E 02        	ld	e, 2
 879  84EC 16 16        	ld	d, 22
 880  84EE CD 12 8E     	call    PrintString
 881  84F1
 882  84F1 16 01                ld   d,1
 883  84F3 1E 01                ld   e, 1
 884  84F5 3E AD                ld   a, SPRT_MARTIAN_SHIP_1_A
 885  84F7 CD B6 8D             call Draw16x8Tile
 886  84FA              GameOverLoseLoop:
 887  84FA CD A3 8C             call ShowGameFieldWithoutClear
 888  84FD CD F5 8E             call GameMainLoopDelay
 889  8500 CD D8 83             call GetMartianShipPosOnLose
 890  8503 50                   ld   d,b
 891  8504 5F                   ld   e,a
 892  8505 CD B6 8A             call GetNewRandomNumber
 893  8508 FE 4B                cp   75
 894  850A DA 17 85             jp   c, GameOverLoseLoopShip1
 895  850D FE 96                cp   150
 896  850F DA 1C 85             jp   c, GameOverLoseLoopShip2
 897  8512
 898  8512 3E B5                ld   a, SPRT_MARTIAN_SHIP_3_A
 899  8514 C3 1E 85             jp   GameOverLoseLoopContinue
 900  8517              GameOverLoseLoopShip1:
 901  8517 3E AD                ld   a, SPRT_MARTIAN_SHIP_1_A
 902  8519 C3 1E 85             jp   GameOverLoseLoopContinue
 903  851C              GameOverLoseLoopShip2:
 904  851C 3E B1                ld   a, SPRT_MARTIAN_SHIP_2_A
 905  851E              GameOverLoseLoopContinue:
 906  851E CD B6 8D             call Draw16x8Tile
 907  8521 CD 0B 8B             CALL ReadKeyboard
 908  8524 FE 23                CP 35
 909  8526 CA 2C 85             JP Z, GameOverLoseLoopEnd
 910  8529 C3 FA 84             jp GameOverLoseLoop
 911  852C              GameOverLoseLoopEnd:
 912  852C CD 60 8C             call ClearScreen
 913  852F C3 DD 80             JP LevelSelection
 914  8532
 915  8532              ;------------------------------------------------------------------------
 916  8532              ;  Check human weapon hide timer
 917  8532              ;------------------------------------------------------------------------
 918  8532              CheckHumanWeaponHideTimer:
 919  8532 21 66 98             LD HL, HumanWeaponHideTimer
 920  8535 7E                   LD a, (HL)
 921  8536 FE 00                cp 0
 922  8538 C2 3C 85             jp nz, CheckHumanWeaponHideTimerContinue
 923  853B C9                   ret
 924  853C              CheckHumanWeaponHideTimerContinue:
 925  853C 3D                   DEC a
 926  853D 77                   LD (HL), a
 927  853E FE 00                cp 0
 928  8540 C0                   ret nz
 929  8541 CD C4 8A             call ShowHumanWeapon
 930  8544 C9                   ret
 931  8545
 932  8545
 933  8545              ;------------------------------------------------------------------------
 934  8545              ; Remove static human after collision
 935  8545              ;------------------------------------------------------------------------
 936  8545              RemoveStaticHumanAfterCollision:
 937  8545 21 4F 99             LD HL, SpriteCollisionStaticHumanPosition
 938  8548 7E                   LD A, (HL)
 939  8549 FE 00                CP 0
 940  854B C8                   RET Z
 941  854C 21 4F 99             LD HL, SpriteCollisionStaticHumanPosition
 942  854F 16 14                LD D, 20
 943  8551 5E                   LD E, (HL)
 944  8552 36 00                LD (HL), 0      ; Reset remove static human position
 945  8554 3E 20                LD A, 32
 946  8556 CD C1 8D             CALL PrintRamChar
 947  8559 1C                   INC E
 948  855A 3E 20                LD A, 32
 949  855C CD C1 8D             CALL PrintRamChar
 950  855F 14                   INC D
 951  8560 3E 20                LD A, 32
 952  8562 CD C1 8D             CALL PrintRamChar
 953  8565 1D                   DEC E
 954  8566 3E 20                LD A, 32
 955  8568 CD C1 8D             CALL PrintRamChar
 956  856B 14                   INC D
 957  856C 3E 20                LD A, 32
 958  856E CD C1 8D             CALL PrintRamChar
 959  8571 1C                   INC E
 960  8572 3E 20                LD A, 32
 961  8574 CD C1 8D             CALL PrintRamChar
 962  8577 21 5C 98             LD HL, Humans
 963  857A 7E                   LD A, (HL)
 964  857B 3D                   DEC A
 965  857C 77                   LD (HL), A              ; Decrease humans counter
 966  857D CD 69 8B             CALL UpdateInfo
 967  8580 C9                   ret
 968  8581              ;------------------------------------------------------------------------
 969  8581              ; Remove martian ship after collision
 970  8581              ;------------------------------------------------------------------------
 971  8581              RemoveMartianShipAfterCollision:
 972  8581
 973  8581 21 6C 98             LD      HL, MartianShipCollisionIndex
 974  8584 7E                   LD      A, (HL)
 975  8585 FE 0A                CP      10
 976  8587 C8                   ret     z
 977  8588 47                   ld      b,a
 978  8589 3E 0A                ld      a, 10
 979  858B 77                   LD      (HL), A                         ; reset MartianShipCollisionIndex (10=no martian to remove)
 980  858C 78                   LD      a, b
 981  858D 21 73 98             LD      HL, MartianShipsInfo+6
 982  8590 CD B0 8A             call    AddAToHL
 983  8593 7E                   ld      a,(HL)                          ; Get current martian Y position
 984  8594 57                   ld      d,a
 985  8595 AF                   xor     a
 986  8596 77                   LD      (HL), A                         ; Reset martian Y position
 987  8597
 988  8597 78                   ld      a, b
 989  8598 21 6F 98             LD      HL, MartianShipsInfo+2
 990  859B CD B0 8A             call    AddAToHL
 991  859E 7E                   ld      a,(HL)                          ; Get current martian X position
 992  859F 5F                   ld      e,a
 993  85A0 AF                   xor     a
 994  85A1 77                   LD      (HL), A                         ; Reset martian X position
 995  85A2
 996  85A2
 997  85A2 21 83 98             LD      HL, MartianShipsInfo+22
 998  85A5 78                   LD      A, b
 999  85A6 77                   LD      (HL), A                         ; Set current martian index
1000  85A7
1001  85A7
1002  85A7 21 7B 98     	ld	hl, MartianShipsInfo+14
1003  85AA 78                   ld      a, b
1004  85AB CD B0 8A     	call	AddAToHL
1005  85AE 36 00        	ld	(hl), 0				; Reset flag change direction
1006  85B0
1007  85B0 CD 97 88             call    MartianShipRemove
1008  85B3
1009  85B3 21 65 98             ld      HL, HumanWeaponBulletXPosition
1010  85B6 7E                   ld      A, (HL)
1011  85B7 5F                   ld      E, A
1012  85B8 AF                   xor     A
1013  85B9 77                   ld      (HL), A                          ; Reset bullet X position
1014  85BA 21 68 98             ld      HL, HumanWeaponBulletYPosition
1015  85BD 7E                   ld      A, (HL)
1016  85BE 57                   ld      D, A
1017  85BF AF                   xor     A
1018  85C0 77                   ld      (HL), A                          ; Reset bullet Y position
1019  85C1 3E 20                ld      A, 32
1020  85C3 CD C1 8D             call    PrintRamChar                     ; Clear bullet 1/2
1021  85C6 1C                   inc     E
1022  85C7 3E 20                ld      a, 32
1023  85C9 CD C1 8D             call    PrintRamChar                     ; Clear bullet 2/2
1024  85CC 21 5D 98             LD      HL, Martians
1025  85CF 7E                   LD      A, (HL)
1026  85D0 3D                   DEC     A
1027  85D1 77                   LD      (HL), A
1028  85D2 CD 69 8B             CALL    UpdateInfo
1029  85D5
1030  85D5 C9                   ret
1031  85D6              ;-----------------------------------------------
1032  85D6              ; SetValue
1033  85D6              ; Set A value at [C][B] location
1034  85D6              ;
1035  85D6              ; Input:
1036  85D6              ;   E = column (0..31)
1037  85D6              ;   D = row    (0..23)
1038  85D6              ;   A = valore da memorizzare
1039  85D6              ; Output: -
1040  85D6              ;-----------------------------------------------
1041  85D6              SetMatrixValue:
1042  85D6 F5                   push af
1043  85D7 C5                   push bc
1044  85D8 D5                   push de
1045  85D9 E5                   push hl
1046  85DA 43                   ld   b, e
1047  85DB 4A                   ld   c, d
1048  85DC                      ; Save A value into E
1049  85DC F5                   push af
1050  85DD
1051  85DD                      ; Offset calculation = (C * 32) + B
1052  85DD 79                   ld   a,c            ; A = row
1053  85DE
1054  85DE 26 00                ld   h,0
1055  85E0 6F                   ld   l,a            ; HL = row
1056  85E1 29                   add  hl,hl          ; HL = row * 2
1057  85E2 29                   add  hl,hl          ; HL = row * 4
1058  85E3 29                   add  hl,hl          ; HL = row * 8
1059  85E4 29                   add  hl,hl          ; HL = row * 16
1060  85E5 29                   add  hl,hl          ; HL = row * 32
1061  85E6
1062  85E6 16 00                ld   d,0            ; Set DE = B
1063  85E8 58                   ld   e,b
1064  85E9 19                   add  hl,de          ; HL = (riga * 32) + column
1065  85EA
1066  85EA                      ; Base matrix added
1067  85EA 11 10 A4             ld   de,RAM_GAME_MATRIX_ADDRESS
1068  85ED 19                   add  hl,de          ; HL = memory address
1069  85EE F1                   pop af
1070  85EF 5F                   ld   e, a           ; New value saved into E
1071  85F0 7E                   ld   a, (hl)        ; Old value saved into A
1072  85F1 FE 20                cp 32
1073  85F3 C4 1F 86             call nz, SpritesCollision
1074  85F6 7B                   ld  a, e
1075  85F7 77                   ld   (hl),a         ; write E value in memory
1076  85F8 E1                   pop hl
1077  85F9 D1                   pop de
1078  85FA C1                   pop bc
1079  85FB F1                   pop af
1080  85FC C9                   ret
1081  85FD              ;-----------------------------------------------
1082  85FD              ; Get martian index by its row position
1083  85FD              ; A: Row position
1084  85FD              ; Return martian index in A
1085  85FD              ;-----------------------------------------------
1086  85FD              GetMartianIndexByRow:
1087  85FD E5                   push hl
1088  85FE C5                   push bc
1089  85FF 47                   ld b, a
1090  8600 0E 00                ld c, 0
1091  8602 AF                   xor a
1092  8603              GetMartianIndexByRowLoop:
1093  8603 FE 04                cp 4
1094  8605 CA 1B 86             jp z, GetMartianIndexByRowEnd
1095  8608 F5                   push af
1096  8609 21 73 98             ld hl, MartianShipsInfo+6
1097  860C CD B0 8A             call AddAToHL
1098  860F 7E                   ld a, (hl)
1099  8610 B8                   cp b
1100  8611 CA 19 86             jp z, GetMartianIndexByRowIndexFound
1101  8614 F1                   pop af
1102  8615 3C                   inc a
1103  8616 C3 03 86             jp GetMartianIndexByRowLoop
1104  8619              GetMartianIndexByRowIndexFound:
1105  8619 F1                   pop af
1106  861A 4F                   ld c, a
1107  861B              GetMartianIndexByRowEnd:
1108  861B 79                   ld a, c
1109  861C C1                   pop bc
1110  861D E1                   pop hl
1111  861E C9                   ret
1112  861F              ;-----------------------------------------------
1113  861F              ; Sprites collision
1114  861F              ; E: New value
1115  861F              ; A: Old value
1116  861F              ; C: Collision row
1117  861F              ; B: Collision column
1118  861F              ;-----------------------------------------------
1119  861F              SpritesCollision:
1120  861F E5                   push hl
1121  8620 57                   ld d, a
1122  8621                      ;ld hl, MartianShipCollisionIndex
1123  8621                      ;ld a, 10
1124  8621                      ;ld (hl), a                              ; Reset martian index to remove (10 = no martian to remove)
1125  8621 7B                   ld a, e
1126  8622 FE BD                cp SPRT_HUMAN_BULLET
1127  8624 CA 39 86             jp z, SpritesCollisionHumanBullet
1128  8627 FE BE                cp SPRT_HUMAN_BULLET+1
1129  8629 CA 39 86             jp z, SpritesCollisionHumanBullet
1130  862C FE C1                cp SPRT_MARTIAN_BULLET
1131  862E CA 4C 86             jp z, SpritesCollisionMartianBullet
1132  8631 FE C2                cp SPRT_MARTIAN_BULLET+1
1133  8633 CA 4C 86             jp z, SpritesCollisionMartianBullet
1134  8636 C3 96 86             jp SpritesCollisionEnd
1135  8639              SpritesCollisionHumanBullet:
1136  8639 7A                   ld a, d
1137  863A FE AD                CP   SPRT_MARTIAN_SHIP_1_A
1138  863C 38 58                JR   C, SpritesCollisionHumanBulletNoMartianShip
1139  863E FE B8                CP   (SPRT_MARTIAN_SHIP_3_B + 1)
1140  8640 30 54                JR   NC, SpritesCollisionHumanBulletNoMartianShip
1141  8642 79                   ld    a,c
1142  8643 CD FD 85             call GetMartianIndexByRow
1143  8646 21 6C 98             ld hl, MartianShipCollisionIndex
1144  8649 77                   ld (hl), a       ; Save martian index
1145  864A 18 4A                JR   SpritesCollisionEnd
1146  864C              SpritesCollisionMartianBullet:
1147  864C 7A                   ld   a, d
1148  864D FE 71                CP   SPRT_HUMAN_STATIC
1149  864F 20 1A                JR   NZ, SpritesCollisionMartianBulletHumanWeapon
1150  8651 78                   ld   a, b
1151  8652 21 4F 99             ld   HL, SpriteCollisionStaticHumanPosition    ; Save human static position
1152  8655 77                   ld   (HL), a
1153  8656
1154  8656 21 4E 99             ld  hl, CurrentMartianBullet
1155  8659 7E                   ld  a, (hl)                                     ; Save current martian bullet id
1156  865A 21 86 98             ld  hl, MartianBullets
1157  865D CD B0 8A             call AddAToHL
1158  8660 36 00                ld (hl),0                                       ; Reset current bullet X position
1159  8662 3E 64                ld a, 100
1160  8664 CD B0 8A             call AddAToHL
1161  8667 36 00                ld (hl),0                                       ; Reset current bullet Y position
1162  8669
1163  8669 18 2B                JR   SpritesCollisionEnd
1164  866B
1165  866B              SpritesCollisionMartianBulletHumanWeapon:
1166  866B 79                   ld   a, c
1167  866C FE 12                CP   18
1168  866E 20 26                JR   NZ, SpritesCollisionEnd
1169  8670 CD 98 86             call HideHumanWeapon
1170  8673 21 67 98             ld hl, HumanWeaponHideLevelTimer
1171  8676 7E                   ld a, (hl)
1172  8677 21 66 98             ld hl, HumanWeaponHideTimer                     ; Set timer to hide human weapon
1173  867A 77                   ld (hl), a
1174  867B 21 64 98             ld HL,HumanWeaponDirection
1175  867E 3E 00                LD A,0
1176  8680 77                   LD (HL),A                                       ; Stop human weapon movement
1177  8681 21 4E 99             ld  hl, CurrentMartianBullet
1178  8684 7E                   ld  a, (hl)                                     ; Save current martian bullet id
1179  8685 21 86 98             ld  hl, MartianBullets
1180  8688 CD B0 8A             call AddAToHL
1181  868B 36 00                ld (hl),0                                       ; Reset current bullet X position
1182  868D 3E 64                ld a, 100
1183  868F CD B0 8A             call AddAToHL
1184  8692 36 00                ld (hl),0                                       ; Reset current bullet Y position
1185  8694
1186  8694 18 00                JR   SpritesCollisionEnd
1187  8696              SpritesCollisionHumanBulletNoMartianShip:
1188  8696
1189  8696              SpritesCollisionEnd:
1190  8696 E1                   pop hl
1191  8697 C9                   ret
1192  8698              ;------------------------------------------------------------------------
1193  8698              ; Hide human weapon
1194  8698              ;------------------------------------------------------------------------
1195  8698              HideHumanWeapon:
1196  8698 21 63 98             ld   hl, HumanWeaponPosition
1197  869B 7E                   ld   a, (hl)
1198  869C 5F                   ld   e, a
1199  869D 16 12                ld   d, 18
1200  869F 3E 20                ld   a, 32
1201  86A1 CD C1 8D             call PrintRamChar
1202  86A4 1C                   inc  e
1203  86A5 CD C1 8D             call PrintRamChar
1204  86A8 C9                   RET
1205  86A9              ;-----------------------------------------------
1206  86A9              ; GetMatrixValue
1207  86A9              ; Get value from (GameMatrix + (C*32 + B)) and put it into A
1208  86A9              ;
1209  86A9              ; Input:
1210  86A9              ;   E = column (0..31)
1211  86A9              ;   D = row    (0..23)
1212  86A9              ; Output:
1213  86A9              ;   A = read value
1214  86A9              ;-----------------------------------------------
1215  86A9              GetMatrixValue:
1216  86A9
1217  86A9 C5                   push bc
1218  86AA D5                   push de
1219  86AB E5                   push hl
1220  86AC
1221  86AC 43                   ld   b, e
1222  86AD 4A                   ld   c, d
1223  86AE
1224  86AE                      ; Offset calculation= (C * 32) + B
1225  86AE 79                   ld   a,c
1226  86AF 26 00                ld   h,0
1227  86B1 6F                   ld   l,a
1228  86B2 29                   add  hl,hl
1229  86B3 29                   add  hl,hl
1230  86B4 29                   add  hl,hl
1231  86B5 29                   add  hl,hl
1232  86B6 29                   add  hl,hl          ; HL = row * 32
1233  86B7
1234  86B7 78                   ld   a,b
1235  86B8 16 00                ld   d,0
1236  86BA 5F                   ld   e,a
1237  86BB 19                   add  hl,de         ; HL = (riga * 32) + colonna
1238  86BC
1239  86BC 11 10 A4             ld   de,RAM_GAME_MATRIX_ADDRESS
1240  86BF 19                   add  hl,de          ; HL = memory address
1241  86C0
1242  86C0 7E                   ld   a,(hl)         ; Put value into A
1243  86C1
1244  86C1 E1                   pop hl
1245  86C2 D1                   pop de
1246  86C3 C1                   pop bc
1247  86C4
1248  86C4 C9                   ret
1249  86C5
1250  86C5              ;------------------------------------------------------------------------
1251  86C5              ; Martian ships management
1252  86C5              ;------------------------------------------------------------------------
1253  86C5              MartianShipsMove:
1254  86C5 21 85 98      	ld	hl, MartianShipsInfo+24
1255  86C8 7E           	ld	a, (hl) 								; Get martians ships speed counter
1256  86C9 3C           	inc	a									; Increment martian speed counter
1257  86CA 77           	ld	(hl), a									; Save new martian speed counter
1258  86CB 21 84 98     	ld	hl, MartianShipsInfo+23							; Get martian ship speed
1259  86CE BE           	cp	(hl)
1260  86CF C0           	ret	nz									; No time to move
1261  86D0 21 85 98     	ld	hl, MartianShipsInfo+24
1262  86D3 36 00        	ld	(hl), 0 								; Reset martians ships speed counter
1263  86D5 21 83 98     	ld	hl, MartianShipsInfo+22
1264  86D8 36 00        	ld	(hl), 0									; Reset martians ship index
1265  86DA AF           	xor	a									; reset A registry
1266  86DB              MartianShipsMoveLoop:
1267  86DB FE 04        	cp	4
1268  86DD C8           	ret	z									; No more ships to move
1269  86DE 21 73 98     	ld 	hl, MartianShipsInfo+6
1270  86E1 CD B0 8A     	call	AddAToHL
1271  86E4 46           	ld	b,(hl)									; Get Y position
1272  86E5 78           	ld	a,b
1273  86E6 FE 00        	cp	0
1274  86E8 CA 37 87     	jp	z, MartianShipsMoveNext
1275  86EB 21 83 98     	ld	hl, MartianShipsInfo+22
1276  86EE 7E           	ld	a, (hl)									; Get martians ship index
1277  86EF 21 7B 98     	ld 	hl, MartianShipsInfo+14
1278  86F2 CD B0 8A     	call	AddAToHL
1279  86F5 7E           	ld	a,(hl)									; Get if direction is changhed
1280  86F6 FE 00        	cp	0
1281  86F8 CC 7B 87     	call	z, MartianShipsMoveChangeDirectionVerify
1282  86FB 21 83 98     	ld	hl, MartianShipsInfo+22
1283  86FE 7E           	ld	a, (hl)									; Get martians ship index
1284  86FF 21 6F 98     	ld 	hl, MartianShipsInfo+2
1285  8702 CD B0 8A     	call	AddAToHL
1286  8705 4E           	ld	c,(hl)									; Get X position
1287  8706 21 83 98     	ld	hl, MartianShipsInfo+22
1288  8709 7E           	ld	a, (hl)									; Get martians ship index
1289  870A 21 77 98     	ld 	hl, MartianShipsInfo+10
1290  870D CD B0 8A     	call	AddAToHL
1291  8710 56           	ld	d,(hl)									; Get current direction
1292  8711 21 83 98     	ld	hl, MartianShipsInfo+22
1293  8714 7E           	ld	a, (hl)									; Get martians ship index
1294  8715 CD D5 87     	call	MartianShipsMoveExecute							; move ship
1295  8718
1296  8718 CD 1E 89     	call	MartianShipUpdatePositionInfo						; Put new coordinates into info array
1297  871B
1298  871B 21 83 98     	ld	hl, MartianShipsInfo+22
1299  871E 7E           	ld	a, (hl)									; Get martians ship index
1300  871F 21 7F 98     	ld	hl, MartianShipsInfo+18
1301  8722 CD B0 8A     	call	AddAToHL
1302  8725 56           	ld	d, (hl)									; Get martians ship type
1303  8726
1304  8726 CD 40 87     	call	MartianShipsMoveChangeType						; change ship type
1305  8729
1306  8729 21 83 98     	ld	hl, MartianShipsInfo+22
1307  872C 7E           	ld	a, (hl)									; Get martians ship index
1308  872D 21 7F 98     	ld	hl, MartianShipsInfo+18
1309  8730 CD B0 8A     	call	AddAToHL
1310  8733 72           	ld	(hl), d									; Set martians ship type
1311  8734
1312  8734
1313  8734 CD 04 88     	call	PutMartianShipOnScreen
1314  8737              MartianShipsMoveNext:
1315  8737 21 83 98     	ld	hl, MartianShipsInfo+22
1316  873A 7E           	ld	a, (hl)								        ; Get martians ship index
1317  873B 3C           	inc 	a
1318  873C 77           	ld	(hl), a								        ; Save new martians ship index
1319  873D C3 DB 86     	jp	MartianShipsMoveLoop
1320  8740              MartianShipsMoveChangeType:
1321  8740 21 83 98     	ld	hl, MartianShipsInfo+22
1322  8743 7E           	ld	a, (hl)								        ; Get martians ship index
1323  8744 21 7F 98     	ld	hl, MartianShipsInfo+18
1324  8747 CD B0 8A     	call	AddAToHL
1325  874A 7E           	ld	a, (hl)									; Get martian ship type from array index found
1326  874B FE AD        	cp	SPRT_MARTIAN_SHIP_1_A
1327  874D CA 6C 87     	jp	z, MartianShipsMoveChangeType_1_B
1328  8750 FE AF        	cp	SPRT_MARTIAN_SHIP_1_B
1329  8752 CA 69 87     	jp	z, MartianShipsMoveChangeType_1_A
1330  8755 FE B1        	cp	SPRT_MARTIAN_SHIP_2_A
1331  8757 CA 72 87     	jp	z, MartianShipsMoveChangeType_2_B
1332  875A FE B3        	cp	SPRT_MARTIAN_SHIP_2_B
1333  875C CA 6F 87     	jp	z, MartianShipsMoveChangeType_2_A
1334  875F FE B5        	cp	SPRT_MARTIAN_SHIP_3_A
1335  8761 CA 78 87     	jp	z, MartianShipsMoveChangeType_3_B
1336  8764 FE B7        	cp	SPRT_MARTIAN_SHIP_3_B
1337  8766 CA 75 87     	jp	z, MartianShipsMoveChangeType_3_A
1338  8769
1339  8769              MartianShipsMoveChangeType_1_A:
1340  8769 16 AD        	ld		d, SPRT_MARTIAN_SHIP_1_A
1341  876B C9           	ret
1342  876C              MartianShipsMoveChangeType_1_B:
1343  876C 16 AF        	ld		d, SPRT_MARTIAN_SHIP_1_B
1344  876E C9           	ret
1345  876F              MartianShipsMoveChangeType_2_A:
1346  876F 16 B1        	ld		d, SPRT_MARTIAN_SHIP_2_A
1347  8771 C9           	ret
1348  8772              MartianShipsMoveChangeType_2_B:
1349  8772 16 B3        	ld		d, SPRT_MARTIAN_SHIP_2_B
1350  8774 C9           	ret
1351  8775              MartianShipsMoveChangeType_3_A:
1352  8775 16 B5        	ld		d, SPRT_MARTIAN_SHIP_3_A
1353  8777 C9           	ret
1354  8778              MartianShipsMoveChangeType_3_B:
1355  8778 16 B7        	ld		d, SPRT_MARTIAN_SHIP_3_B
1356  877A C9           	ret
1357  877B              MartianShipsMoveChangeDirectionVerify:
1358  877B 79           	ld	a, c
1359  877C FE 06        	cp	6
1360  877E CA 91 87     	jp	z,MartianShipsMoveChangeDirectionPreEvaluation
1361  8781 FE 0C        	cp	12
1362  8783 CA 91 87     	jp	z,MartianShipsMoveChangeDirectionPreEvaluation
1363  8786 FE 13        	cp	19
1364  8788 CA 91 87     	jp	z,MartianShipsMoveChangeDirectionPreEvaluation
1365  878B FE 19        	cp	25
1366  878D CA 91 87     	jp	z,MartianShipsMoveChangeDirectionPreEvaluation
1367  8790 C9           	ret
1368  8791              MartianShipsMoveChangeDirectionPreEvaluation:
1369  8791 78           	ld	a, b
1370  8792 FE 14        	cp	20
1371  8794 C8           	ret	z
1372  8795              MartianShipsMoveChangeDirectionEvaluation:
1373  8795 CD B6 8A     	call	GetNewRandomNumber
1374  8798 FE 32        	cp	50
1375  879A D0           	ret	nc
1376  879B 21 83 98     	ld	hl, MartianShipsInfo+22
1377  879E 7E           	ld	a, (hl)									; Get martians ship index
1378  879F 21 7B 98     	ld 	hl, MartianShipsInfo+14
1379  87A2 CD B0 8A     	call	AddAToHL
1380  87A5 36 01        	ld	(hl),1									; Update flag direction changed
1381  87A7 21 83 98     	ld	hl, MartianShipsInfo+22
1382  87AA 7E           	ld	a, (hl)									; Get martians ship index
1383  87AB 21 77 98     	ld 	hl, MartianShipsInfo+10
1384  87AE CD B0 8A     	call	AddAToHL
1385  87B1 7E           	ld	a,(hl)									; Get actual direction
1386  87B2 FE 01        	cp	1
1387  87B4 CC BB 87     	call	z, MartianShipsMoveChangeDirectionLeft
1388  87B7 C4 C8 87     	call	nz, MartianShipsMoveChangeDirectionRight
1389  87BA C9           	ret
1390  87BB              MartianShipsMoveChangeDirectionLeft:
1391  87BB 21 83 98     	ld	hl, MartianShipsInfo+22
1392  87BE 7E           	ld	a, (hl)									; Get martians ship index
1393  87BF 21 77 98     	ld 	hl, MartianShipsInfo+10
1394  87C2 CD B0 8A     	call	AddAToHL
1395  87C5 36 02        	ld	(hl), 2								        ; Update martian ship direction
1396  87C7 C9           	ret
1397  87C8              MartianShipsMoveChangeDirectionRight:
1398  87C8 21 83 98     	ld	hl, MartianShipsInfo+22
1399  87CB 7E           	ld	a, (hl)									; Get martians ship index
1400  87CC 21 77 98     	ld 	hl, MartianShipsInfo+10
1401  87CF CD B0 8A     	call	AddAToHL
1402  87D2 36 01        	ld	(hl), 1									; Update martian ship direction
1403  87D4 C9           	ret
1404  87D5
1405  87D5              MartianShipsMoveExecute:
1406  87D5 7A           	ld	a,d
1407  87D6 FE 02        	cp	2
1408  87D8 CA E3 87     	jp	z, MartianShipsMoveExecuteToRight
1409  87DB              MartianShipsMoveExecuteToLeft:
1410  87DB 0D           	dec	c									; Decrement X position
1411  87DC 79           	ld	a,c
1412  87DD FE 00        	cp	0
1413  87DF CA FA 87     	jp	z, MartianShipsMoveExecuteRemove					; Remove ship because it is on left limit
1414  87E2 C9           	ret
1415  87E3              MartianShipsMoveExecuteToRight:
1416  87E3 16 1D        	ld	d,29									; Right limit X position to check
1417  87E5 78           	ld	a,b
1418  87E6 FE 01        	cp	1
1419  87E8 CC F7 87     	call	z, MartianShipsMoveExecuteToRightChange			                ; If Y position is 1 the X right limit become 18
1420  87EB FE 02                cp	2
1421  87ED CC F7 87     	call	z, MartianShipsMoveExecuteToRightChange			                ; If Y position is 2 the X right limit become 18
1422  87F0 79           	ld	a,c
1423  87F1 BA           	cp	d
1424  87F2 CA FA 87     	jp	z, MartianShipsMoveExecuteRemove		                        ; Remove ship because it is on right limit
1425  87F5 0C           	inc	c								        ; Increase X position
1426  87F6 C9           	ret
1427  87F7              MartianShipsMoveExecuteToRightChange:
1428  87F7 16 12        	ld		d, 18
1429  87F9 C9           	ret
1430  87FA              MartianShipsMoveExecuteRemove:
1431  87FA C5                   push bc
1432  87FB D1                   pop de
1433  87FC CD 97 88     	call	MartianShipRemove
1434  87FF 0E 00        	ld		c,0
1435  8801 06 00        	ld		b,0
1436  8803 C9           	ret
1437  8804
1438  8804              ;------------------------------------------------------------------------
1439  8804              ; Print martian ship
1440  8804              ; C: X position
1441  8804              ; B: Y position
1442  8804              ; D: First character code
1443  8804              ;------------------------------------------------------------------------
1444  8804              PutMartianShipOnScreen:
1445  8804
1446  8804 E5           	push	hl									; Backup HL registry to stack
1447  8805 D5           	push	de									; Backup DE registry to stack
1448  8806 C5           	push	bc									; Backup BC registry to stack
1449  8807 C5                   push    bc
1450  8808 D5                   push    de
1451  8809 C1                   pop     bc
1452  880A D1                   pop     de
1453  880B 7A                   ld      a, d
1454  880C FE 01                cp      1
1455  880E CA 19 88             jp      z, PutMartianShipOnScreenClearLine
1456  8811 FE 02                cp      2
1457  8813 CA 19 88             jp      z, PutMartianShipOnScreenClearLine
1458  8816 C3 28 88             jp      PutMartianShipOnScreenGo
1459  8819              PutMartianShipOnScreenClearLine:
1460  8819 7B                   ld      a, e
1461  881A FE 12                cp      18
1462  881C CA 28 88             jp      z, PutMartianShipOnScreenGo
1463  881F
1464  881F
1465  881F D5                   push    de
1466  8820 1E 12                ld      e, 18
1467  8822 3E 20                ld      a, 32
1468  8824 CD C1 8D             call    PrintRamChar
1469  8827 D1                   pop     de
1470  8828              PutMartianShipOnScreenGo:
1471  8828 21 6A 98             ld      hl,  MartianShipMaxRight
1472  882B 3E 10                ld      a, 16
1473  882D 77                   ld      (HL), a
1474  882E 7A                   ld      a, d
1475  882F FE 01                cp      1
1476  8831 CA 3B 88             jp      z, PutMartianShipOnScreenContinue
1477  8834 FE 02                cp      2
1478  8836 CA 3B 88             jp      z, PutMartianShipOnScreenContinue
1479  8839 36 1D                ld      (hl), 29
1480  883B              PutMartianShipOnScreenContinue:
1481  883B 4B           	ld      c,e
1482  883C
1483  883C 7B           	ld	a, e
1484  883D FE 00        	cp	0
1485  883F CA 93 88     	jp	z, PutMartianShipOnScreenEnd								; Invalid X position
1486  8842 7A           	ld	a, d
1487  8843 FE 00        	cp	0
1488  8845 CA 93 88     	jp	z, PutMartianShipOnScreenEnd								; Invalid Y position
1489  8848 7B                   ld      a, e
1490  8849 FE 01                cp      1
1491  884B CA 55 88             jp      z, PutMartianShipOnScreenNoClearBefore
1492  884E 1D                   dec     e
1493  884F 3E 20        	ld	a, 32											; Clear space before (TOP)
1494  8851 CD C1 8D     	call	PrintRamChar
1495  8854 1C                   inc     e
1496  8855              PutMartianShipOnScreenNoClearBefore:
1497  8855 21 6A 98             ld      hl, MartianShipMaxRight
1498  8858 7E                   ld      a, (HL)
1499  8859 7B                   ld	a, e
1500  885A BE                   cp      (HL)
1501  885B CA 67 88             jp      z, PutMartianShipOnScreenNoClearAfter
1502  885E 1C                   inc     e
1503  885F 1C                   inc     e
1504  8860 3E 20                ld	a, 32											; Clear space after (TOP)
1505  8862 CD C1 8D     	call	PrintRamChar
1506  8865 1D                   dec     e
1507  8866 1D                   dec     e
1508  8867              PutMartianShipOnScreenNoClearAfter:
1509  8867
1510  8867 7A                   ld	a, d
1511  8868 FE 01                cp      1
1512  886A C2 7C 88             jp      nz, PutMartianShipOnScreenPrint
1513  886D 7B                   ld      a, e
1514  886E FE 18                cp      24
1515  8870 C2 7C 88             jp      nz, PutMartianShipOnScreenPrint
1516  8873 1C                   inc     e
1517  8874 1C                   inc     e
1518  8875 3E 20                ld	a, 32											; Clear space after on first row (TOP)
1519  8877 CD C1 8D     	call	PrintRamChar
1520  887A 1D                   dec     e
1521  887B 1D                   dec     e
1522  887C              PutMartianShipOnScreenPrint:
1523  887C 78                   ld a, b
1524  887D CD B6 8D             call Draw16x8Tile
1525  8880 3E 61                ld      a, TILE_BORDER_VERTICAL
1526  8882 1E 14                ld      e, 20
1527  8884 16 01                ld      d, 1
1528  8886 CD C1 8D             call    PrintRamChar
1529  8889 14                   inc     d
1530  888A CD C1 8D             call    PrintRamChar
1531  888D 3E 64                ld      a, TILE_BORDER_BOTTOM_LEFT_CORNER
1532  888F 14                   inc     d
1533  8890 CD C1 8D             call    PrintRamChar
1534  8893              PutMartianShipOnScreenEnd:
1535  8893
1536  8893 C1           	pop		bc														; Restore HL registry from stack
1537  8894 D1           	pop		de														; Restore DE registry from stack
1538  8895 E1           	pop		hl														; Restore BC registry from stack
1539  8896 C9           	ret
1540  8897              ;------------------------------------------------------------------------
1541  8897              ; Remove martian ship from screen
1542  8897              ; D: Character Y position
1543  8897              ; E: Character X position
1544  8897              ;------------------------------------------------------------------------
1545  8897              MartianShipRemove:
1546  8897 D5           	push	DE
1547  8898 7B                   ld      a, e
1548  8899 FE 1D                cp      29
1549  889B CA A4 88             jp      z, MartianShipRemoveContinue
1550  889E FE 12                cp      18
1551  88A0 CA A4 88             jp      z, MartianShipRemoveContinue
1552  88A3 1C           	inc	e
1553  88A4              MartianShipRemoveContinue:
1554  88A4 3E 20        	ld	a, 32
1555  88A6 CD C1 8D     	call	PrintRamChar
1556  88A9 1C           	inc	e
1557  88AA 3E 20        	ld	a, 32
1558  88AC CD C1 8D             call	PrintRamChar
1559  88AF 21 6E 98     	ld	hl, MartianShipsInfo+1
1560  88B2 7E           	ld	a, (hl)
1561  88B3 3D           	dec	a
1562  88B4 77           	ld	(hl), a													; Decrement amount of showed ships
1563  88B5 21 83 98     	ld	hl, MartianShipsInfo+22
1564  88B8 7E           	ld	a, (hl)													; Get martians ship index
1565  88B9 21 7B 98     	ld	hl, MartianShipsInfo+14
1566  88BC CD B0 8A     	call	AddAToHL
1567  88BF 36 00        	ld	(hl), 0													; Reset flag change direction
1568  88C1 D1           	pop 	DE
1569  88C2 CD C6 88             call   ClearRowFromMartianShip
1570  88C5 C9           	ret
1571  88C6              ;------------------------------------------------------------------------
1572  88C6              ; Clear row from martian ship
1573  88C6              ; D: Row index
1574  88C6              ;------------------------------------------------------------------------
1575  88C6              ClearRowFromMartianShip:
1576  88C6 FE 12                cp 18
1577  88C8 C8                   ret z
1578  88C9 FE 13                cp 19
1579  88CB C8                   ret z
1580  88CC FE 14                cp 20
1581  88CE C8                   ret z
1582  88CF FE 15                cp 21
1583  88D1 C8                   ret z
1584  88D2 FE 16                cp 22
1585  88D4 C8                   ret z
1586  88D5 FE 17                cp 23
1587  88D7 C8                   ret z
1588  88D8 D5                   push de
1589  88D9 C5                   push bc
1590  88DA F5                   push af
1591  88DB 06 12                ld b, 18
1592  88DD 7A                   ld a, d
1593  88DE FE 01                CP 1
1594  88E0 CA EF 88             JP Z, ClearRowFromMartianShipContinue
1595  88E3 FE 02                CP 2
1596  88E5 CA EF 88             JP Z, ClearRowFromMartianShipContinue
1597  88E8 FE 03                CP 3
1598  88EA CA EF 88             JP Z, ClearRowFromMartianShipContinue
1599  88ED 06 1F                ld b, 31
1600  88EF              ClearRowFromMartianShipContinue:
1601  88EF 3E 01                ld a,1
1602  88F1              ClearRowFromMartianShipLoop:
1603  88F1 F5                   push af
1604  88F2 5F                   ld e,a
1605  88F3 CD A9 86             call GetMatrixValue
1606  88F6 FE 20                cp 32
1607  88F8 CA 14 89             jp Z, ClearRowFromMartianShipLoopNext
1608  88FB FE BD                cp SPRT_HUMAN_BULLET
1609  88FD CA 14 89             jp Z, ClearRowFromMartianShipLoopNext
1610  8900 FE BE                cp SPRT_HUMAN_BULLET+1
1611  8902 CA 14 89             jp Z, ClearRowFromMartianShipLoopNext
1612  8905 FE C1                cp SPRT_MARTIAN_BULLET
1613  8907 CA 14 89             jp Z, ClearRowFromMartianShipLoopNext
1614  890A FE C2                cp SPRT_MARTIAN_BULLET+1
1615  890C CA 14 89             jp Z, ClearRowFromMartianShipLoopNext
1616  890F 3E 20                ld a, 32
1617  8911 CD C1 8D             call PrintRamChar
1618  8914              ClearRowFromMartianShipLoopNext:
1619  8914 F1                   pop af
1620  8915 3C                   inc a
1621  8916 B8                   cp b
1622  8917 C2 F1 88             jp NZ, ClearRowFromMartianShipLoop
1623  891A F1                   pop af
1624  891B C1                   pop bc
1625  891C D1                   pop de
1626  891D C9                   ret
1627  891E              ;------------------------------------------------------------------------
1628  891E              ; Update martian ship position info
1629  891E              ; A: Array index
1630  891E              ; B: Position Y
1631  891E              ; C: Position X
1632  891E              ;------------------------------------------------------------------------
1633  891E              MartianShipUpdatePositionInfo:
1634  891E 21 83 98     	ld	hl, MartianShipsInfo+22
1635  8921 7E           	ld	a, (hl)					; Get martians ship index
1636  8922 21 73 98     	ld 	hl, MartianShipsInfo+6
1637  8925 CD B0 8A     	call	AddAToHL
1638  8928 70           	ld	(hl), b
1639  8929 21 83 98     	ld	hl, MartianShipsInfo+22
1640  892C 7E           	ld	a, (hl)					; Set Y position
1641  892D 21 6F 98     	ld 	hl, MartianShipsInfo+2
1642  8930 CD B0 8A     	call	AddAToHL
1643  8933 71           	ld	(hl), c				        ; Set X position
1644  8934 C9           	ret
1645  8935
1646  8935              ;------------------------------------------------------------------------
1647  8935              ; Get firts free martian ship array index
1648  8935              ;------------------------------------------------------------------------
1649  8935              GetFirstFreeMartianShipArrayIndex:
1650  8935 E5           	push	hl														; Backup HL registry to stack
1651  8936 3E 00        	ld		a,0
1652  8938              GetFirstFreeMartianShipArrayIndexLoop:
1653  8938 F5           	push	af														; Put AF registry to stack for save the counter
1654  8939 21 6F 98     	ld	hl, MartianShipsInfo+2
1655  893C CD B0 8A     	call	AddAToHL
1656  893F 7E           	ld	a,(hl)
1657  8940 FE 00        	cp	0
1658  8942 CA 4A 89     	jp	z, GetFirstFreeMartianShipArrayIndexLoopEnd
1659  8945 F1           	pop	af														; Restore AF for to retrieve the counter
1660  8946 3C           	inc	a
1661  8947 C3 38 89     	jp	GetFirstFreeMartianShipArrayIndexLoop
1662  894A              GetFirstFreeMartianShipArrayIndexLoopEnd:
1663  894A F1           	pop		af														; Restore AF for to retrieve the counter
1664  894B E1           	pop		hl														; Restore HL registry from stack
1665  894C C9           	ret
1666  894D
1667  894D               ;------------------------------------------------------------------------
1668  894D               ; New martian ship showing evaluation
1669  894D              ;------------------------------------------------------------------------
1670  894D              NewMartianShipShowingEvaluation:
1671  894D 21 6E 98     	ld	hl, MartianShipsInfo+1				        ; Get number of martians ships displayed
1672  8950 7E           	ld	a, (hl)
1673  8951
1674  8951 21 5D 98     	ld	hl, Martians
1675  8954 BE           	cp	(hl)
1676  8955
1677  8955 D0           	ret	nc						        ; return because remain martians ships are less
1678  8956 ED 5F        	ld	a,r
1679  8958 FE 06        	cp	6
1680  895A D0           	ret	nc					                ; No new martian ship needed to display
1681  895B
1682  895B CD 35 89     	call 	GetFirstFreeMartianShipArrayIndex
1683  895E
1684  895E 0E 1D        	ld	c, 29							; New martian ship start position
1685  8960 16 01        	ld	d, 1							; New martian ship start direction from right
1686  8962 CD B6 8A     	call	GetNewRandomNumber
1687  8965 FE 7D        	cp	125
1688  8967 D4 38 8A     	call	nc, NewMartianShipShowingEvaluationFromLeft		; Change new martian ship start position and direction
1689  896A
1690  896A CD 35 89     	call 	GetFirstFreeMartianShipArrayIndex			; Get free array index
1691  896D F5           	push	af							; Save array index found
1692  896E 21 77 98     	ld	hl, MartianShipsInfo+10
1693  8971 CD B0 8A     	call	AddAToHL
1694  8974 72           	ld	(hl),d							; Put direction into array index found
1695  8975 F1           	pop	af							; Restore array index found
1696  8976 F5           	push	af							; Save array index found
1697  8977 16 00        	ld	d, 0
1698  8979 CD B6 8A     	call	GetNewRandomNumber					; Type of martians ship to show determination
1699  897C FE FF        	cp	255
1700  897E DC 3D 8A     	call	c, NewMartianShipShowingEvaluationShip_1
1701  8981 FE 96        	cp	150
1702  8983 DC 40 8A     	call	c, NewMartianShipShowingEvaluationShip_2
1703  8986 FE 50        	cp	80
1704  8988 DC 43 8A     	call	c, NewMartianShipShowingEvaluationShip_3
1705  898B F1           	pop	af							; Restore array index found
1706  898C F5           	push	af							; Save array index found
1707  898D 21 7F 98     	ld	hl, MartianShipsInfo+18
1708  8990 CD B0 8A     	call	AddAToHL
1709  8993 72           	ld	(hl), d						        ; Put martian ship type into array index found
1710  8994
1711  8994 CD B6 8A     	call	GetNewRandomNumber 					; Y position of martians ship to show determination
1712  8997 06 01        	ld	b,1
1713  8999 FE C8        	cp	200
1714  899B DC 46 8A     	call	c, NewMartianShipShowingEvaluationRow_2			; Row 2 selected
1715  899E FE 96        	cp	150
1716  89A0 DC 4F 8A     	call	c, NewMartianShipShowingEvaluationRow_4			; Row 3 selected
1717  89A3 FE 64        	cp	100
1718  89A5 DC 52 8A     	call	c, NewMartianShipShowingEvaluationRow_5			; Row 4 selected
1719  89A8 FE 32        	cp	50
1720  89AA DC 55 8A     	call	c, NewMartianShipShowingEvaluationRow_6		        ; Row 6 selected
1721  89AD
1722  89AD 78                   ld      a, b
1723  89AE FE 01                cp      1
1724  89B0 C2 BB 89             jp      nz, NewMartianShipShowingEvaluationPosHor
1725  89B3 79                   ld      a, c
1726  89B4 FE 1D                cp      29
1727  89B6 C2 BB 89             jp      nz, NewMartianShipShowingEvaluationPosHor
1728  89B9 0E 12                ld      c, 18
1729  89BB              NewMartianShipShowingEvaluationPosHor:
1730  89BB F1           	pop	af							; Restore array index found
1731  89BC F5           	push	af							; Save array index found
1732  89BD 21 77 98     	ld	hl, MartianShipsInfo+10
1733  89C0 CD B0 8A     	call	AddAToHL
1734  89C3 56           	ld	d,(hl)							; Get direction from array index found (because if row is busy and new proposed row changed to 2 the start position will be from left)
1735  89C4 F1           	pop	af							; Restore array index found
1736  89C5 F5           	push	af							; Save array index found
1737  89C6
1738  89C6 CD 58 8A     	call	NewMartianShipShowingEvaluationPosVer			; Change Y position if it's busy from another ship
1739  89C9
1740  89C9 78           	ld	a, b
1741  89CA FE 01        	cp	1
1742  89CC CA E6 89     	jp	z, NewMartianShipShowingValidRow
1743  89CF FE 02        	cp	2
1744  89D1 CA E6 89     	jp	z, NewMartianShipShowingValidRow
1745  89D4 FE 04        	cp	4
1746  89D6 CA E6 89     	jp	z, NewMartianShipShowingValidRow
1747  89D9 FE 05        	cp	5
1748  89DB CA E6 89     	jp	z, NewMartianShipShowingValidRow
1749  89DE FE 06        	cp	6
1750  89E0 CA E6 89     	jp	z, NewMartianShipShowingValidRow
1751  89E3 C3 AE 8A     	jp	NewMartianShipShowingNotValidRow			; No valid row for martian ship
1752  89E6              NewMartianShipShowingValidRow:
1753  89E6 F1           	pop	af							; Restore array index found
1754  89E7 F5                   push    af
1755  89E8 78                   ld      a, b
1756  89E9 FE 01                cp      1
1757  89EB CA FB 89             jp      z, NewMartianShipShowingValidRowContinue
1758  89EE FE 02                cp      2
1759  89F0 CA FB 89             jp      z, NewMartianShipShowingValidRowContinue
1760  89F3 79                   ld      a, c
1761  89F4 FE 12                cp      18
1762  89F6 C2 FB 89             jp      nz, NewMartianShipShowingValidRowContinue
1763  89F9 0E 1D                ld      c, 29
1764  89FB
1765  89FB              NewMartianShipShowingValidRowContinue:
1766  89FB F1                   pop     af
1767  89FC F5           	push	af							; Save array index found
1768  89FD 21 6F 98     	ld	hl, MartianShipsInfo+2
1769  8A00 CD B0 8A     	call	AddAToHL
1770  8A03 71           	ld	(hl), c						        ; Put X position into array index found
1771  8A04 F1           	pop	af						        ; Restore array index found
1772  8A05 F5           	push	af							; Save array index found
1773  8A06 21 73 98     	ld	hl, MartianShipsInfo+6
1774  8A09 CD B0 8A     	call	AddAToHL
1775  8A0C 70           	ld	(hl), b							; Put Y position into array index found
1776  8A0D F1           	pop	af							; Restore array index found
1777  8A0E F5           	push	af							; Save array index found
1778  8A0F 21 77 98     	ld	hl, MartianShipsInfo+10
1779  8A12 CD B0 8A     	call	AddAToHL
1780  8A15 79                   ld      a, c
1781  8A16 FE 12                cp      18
1782  8A18 C2 23 8A             jp      nz, NewMartianShipShowingValidRowContinue2
1783  8A1B 78                   ld      a, b
1784  8A1C FE 02                CP      2
1785  8A1E C2 23 8A             jp      nz, NewMartianShipShowingValidRowContinue2
1786  8A21 16 01                ld      d, 1
1787  8A23              NewMartianShipShowingValidRowContinue2:
1788  8A23 72           	ld	(hl), d							; Put direction from array index found
1789  8A24 F1           	pop	af							; Restore array index found
1790  8A25 F5           	push	af							; Save array index found
1791  8A26 21 7F 98     	ld	hl, MartianShipsInfo+18
1792  8A29 CD B0 8A     	call	AddAToHL
1793  8A2C 56           	ld	d, (hl)							; Get martian ship type from array index found
1794  8A2D F1           	pop	af							; Restore array index found
1795  8A2E CD 04 88     	call	PutMartianShipOnScreen
1796  8A31 21 6E 98     	ld	hl, MartianShipsInfo+1
1797  8A34 7E           	ld	a, (hl)							; Get number of martians ships on screen
1798  8A35 3C           	inc	a							; Increment number of martians ships on screen
1799  8A36 77           	ld	(hl), a							; Save new number of martians ships on screen
1800  8A37 C9           	ret
1801  8A38              NewMartianShipShowingEvaluationFromLeft
1802  8A38 0E 01        	ld	c, 1							; New martian ship start position
1803  8A3A 16 02        	ld	d, 2							; New martian ship start direction from left
1804  8A3C C9           	ret
1805  8A3D              NewMartianShipShowingEvaluationShip_1:
1806  8A3D 16 AD        	ld d, SPRT_MARTIAN_SHIP_1_A
1807  8A3F C9           	ret
1808  8A40              NewMartianShipShowingEvaluationShip_2:
1809  8A40 16 B1        	ld d, SPRT_MARTIAN_SHIP_2_A
1810  8A42 C9           	ret
1811  8A43              NewMartianShipShowingEvaluationShip_3:
1812  8A43 16 B5        	ld d, SPRT_MARTIAN_SHIP_3_A
1813  8A45 C9           	ret
1814  8A46              NewMartianShipShowingEvaluationRow_2:
1815  8A46 06 02        	ld b, 2
1816  8A48 79                   ld a, c
1817  8A49 FE 1D                cp 29
1818  8A4B C0                   ret nz
1819  8A4C 0E 12                ld c, 18
1820  8A4E C9           	ret
1821  8A4F              NewMartianShipShowingEvaluationRow_4:
1822  8A4F 06 04        	ld		b, 4
1823  8A51 C9           	ret
1824  8A52              NewMartianShipShowingEvaluationRow_5:
1825  8A52 06 05        	ld		b, 5
1826  8A54 C9           	ret
1827  8A55              NewMartianShipShowingEvaluationRow_6:
1828  8A55 06 06        	ld		b, 6
1829  8A57 C9           	ret
1830  8A58              NewMartianShipShowingEvaluationPosVer:
1831  8A58 3E 00        	ld		a,	0
1832  8A5A              NewMartianShipShowingEvaluationPosVerLoop:
1833  8A5A FE 04        	cp	4
1834  8A5C CA 8E 8A     	jp	z,NewMartianShipShowingEvaluationPosVerRow2		; Proposed Y position is free
1835  8A5F F5           	push	af							; Backup conter to stack
1836  8A60 21 73 98     	ld	hl, MartianShipsInfo+6
1837  8A63 CD B0 8A     	call	AddAToHL
1838  8A66 7E           	ld	a, (hl)
1839  8A67 B8           	cp	b
1840  8A68 CA 70 8A     	jp	z, NewMartianShipShowingEvaluationPosVerBusy		; Proposed Y position is busy
1841  8A6B F1           	pop	af							; Restore counter from stack
1842  8A6C 3C           	inc	a
1843  8A6D C3 5A 8A     	jp 	NewMartianShipShowingEvaluationPosVerLoop
1844  8A70              NewMartianShipShowingEvaluationPosVerBusy:
1845  8A70 F1           	pop		af						; Restore counter from stack
1846  8A71 3E 00        	ld		a, 0
1847  8A73              NewMartianShipShowingEvaluationPosVerBusyLoop:
1848  8A73 F5           	push	af						        ; Backup conter to stack
1849  8A74 5F           	ld	e, a
1850  8A75 21 73 98     	ld	hl, MartianShipsInfo+6
1851  8A78 CD B0 8A     	call	AddAToHL
1852  8A7B 7E           	ld	a, (hl)
1853  8A7C FE 00        	cp	0
1854  8A7E CA 86 8A     	jp	z, NewMartianShipShowingEvaluationPosVerBusyEnd	        ; Avaible free Y position found
1855  8A81 F1           	pop	af							; Restore counter from stack
1856  8A82 3C           	inc	a
1857  8A83 C3 73 8A     	jp 	NewMartianShipShowingEvaluationPosVerBusyLoop
1858  8A86              NewMartianShipShowingEvaluationPosVerBusyEnd:
1859  8A86 43           	ld	b, e
1860  8A87 F1           	pop	af							; Restore counter from stack
1861  8A88 3E 02        	ld	a, 2
1862  8A8A B8           	cp	b
1863  8A8B C0           	ret	nz							; if not new proposed Y position is equals 2 then it's valid
1864  8A8C 16 02        	ld	d, 2							; Force direction for row 2 from left
1865  8A8E              NewMartianShipShowingEvaluationPosVerRow2:
1866  8A8E 78           	ld	a, b
1867  8A8F FE 01                cp	1
1868  8A91 CA 9A 8A     	jp	z, NewMartianShipShowingEvaluationPosVerIs12Rows
1869  8A94 FE 02        	cp	2
1870  8A96 CA 9A 8A             jp	z, NewMartianShipShowingEvaluationPosVerIs12Rows
1871  8A99 C9           	ret								; If not Y is 1 or 2 each X position is ok
1872  8A9A              NewMartianShipShowingEvaluationPosVerIs12Rows:
1873  8A9A
1874  8A9A 79           	ld	a, c
1875  8A9B FE 01        	cp	1
1876  8A9D C8           	ret	z							; If not Y is 1 or 2 and X=1 position is ok
1877  8A9E 0E 12        	ld	c, 18							; Set X position on row 2 for direction from right
1878  8AA0 21 83 98     	LD      HL, MartianShipsInfo+22
1879  8AA3 7E                   LD      A,(HL)                         ; Get current martian index
1880  8AA4
1881  8AA4
1882  8AA4 21 77 98     	ld	hl, MartianShipsInfo+10
1883  8AA7 78                   ld      a, b
1884  8AA8 CD B0 8A     	call	AddAToHL
1885  8AAB 36 02        	ld	(hl), 2				; Set direction from right
1886  8AAD C9                   ret
1887  8AAE              NewMartianShipShowingNotValidRow:
1888  8AAE F1           	pop		af
1889  8AAF C9           	ret
1890  8AB0
1891  8AB0
1892  8AB0              ;------------------------------------------------------------------------
1893  8AB0              ; Add A registry value to HL registry value
1894  8AB0              ;------------------------------------------------------------------------
1895  8AB0              AddAToHL:
1896  8AB0 85           	add   a, l
1897  8AB1 6F           	ld    l, a
1898  8AB2 8C           	adc   a, h
1899  8AB3 95           	sub   l
1900  8AB4 67           	ld    h, a
1901  8AB5 C9           	ret
1902  8AB6              ;------------------------------------------------------------------------
1903  8AB6              ; Get a new random number
1904  8AB6              ; Return the value in A registry
1905  8AB6              ;------------------------------------------------------------------------
1906  8AB6              GetNewRandomNumber:
1907  8AB6 C5           	push	bc
1908  8AB7 3A 6B 98     	ld		a,(RandomSeed)
1909  8ABA 47           	ld		b, a
1910  8ABB 87           	add		a, a
1911  8ABC 87           	add		a, a
1912  8ABD 80           	add		a, b
1913  8ABE 3C           	inc		a
1914  8ABF 32 6B 98     	ld		(RandomSeed),a
1915  8AC2 C1           	pop	bc
1916  8AC3 C9           	ret
1917  8AC4              ;------------------------------------------------------------------------
1918  8AC4              ; Show human weapon
1919  8AC4              ;------------------------------------------------------------------------
1920  8AC4              ShowHumanWeapon:
1921  8AC4 E5                   PUSH HL
1922  8AC5 21 66 98              LD HL, HumanWeaponHideTimer
1923  8AC8 36 00                LD (HL),0
1924  8ACA 21 63 98             LD HL, HumanWeaponPosition
1925  8ACD 7E                   LD A, (HL)
1926  8ACE 5F                   LD E, A
1927  8ACF 16 12                LD D, 18
1928  8AD1 3E BF                LD A, SPRT_HUMAN_WEAPON
1929  8AD3 CD B6 8D             CALL Draw16x8Tile
1930  8AD6 21 63 98             LD HL, HumanWeaponPosition
1931  8AD9 7E                   LD A, (HL)
1932  8ADA FE 01                CP 1
1933  8ADC C2 EA 8A             JP NZ, ShowHumanWeaponClearLeft
1934  8ADF              ShowHumanWeaponClearContinue:
1935  8ADF 21 63 98             LD HL, HumanWeaponPosition
1936  8AE2 7E                   LD A, (HL)
1937  8AE3 FE 1D                CP 29
1938  8AE5 C2 FA 8A             JP NZ, ShowHumanWeaponClearRight
1939  8AE8              ShowHumanWeaponEnd:
1940  8AE8 E1                   POP HL
1941  8AE9 C9                   RET
1942  8AEA              ShowHumanWeaponClearLeft:
1943  8AEA 21 63 98             LD HL, HumanWeaponPosition
1944  8AED 7E                   LD A, (HL)
1945  8AEE 3D                   DEC A
1946  8AEF 5F                   LD E,A
1947  8AF0 16 12                LD D, 18
1948  8AF2 3E 20                LD A, 32
1949  8AF4 CD C1 8D             CALL PrintRamChar
1950  8AF7 C3 DF 8A             JP ShowHumanWeaponClearContinue
1951  8AFA              ShowHumanWeaponClearRight:
1952  8AFA 21 63 98             LD HL, HumanWeaponPosition
1953  8AFD 7E                   LD A, (HL)
1954  8AFE 3C                   INC A
1955  8AFF 3C                   INC A
1956  8B00 5F                   LD E,A
1957  8B01 16 12                LD D, 18
1958  8B03 3E 20                LD A, 32
1959  8B05 CD C1 8D             CALL PrintRamChar
1960  8B08 C3 E8 8A             JP ShowHumanWeaponEnd
1961  8B0B
1962  8B0B              ;------------------------------------------------------------------------
1963  8B0B              ; Read the keyboard
1964  8B0B              ; Returns: A = ASCII code of key pressed
1965  8B0B              ;------------------------------------------------------------------------
1966  8B0B              ReadKeyboard:
1967  8B0B 21 19 98                     LD HL,KEYBOARD_MAP              ; Point HL at the keyboard list
1968  8B0E 16 08                        LD D,8                                  ; This is the number of ports (rows) to check
1969  8B10 0E FE                        LD C,#FE                            ; C is always FEh for reading keyboard ports
1970  8B12              ReadKeyboard0:
1971  8B12 46                           LD B,(HL)                               ; Get the keyboard port address from table
1972  8B13 23                           INC HL                                  ; Increment to list of keys
1973  8B14 ED 78                        IN A,(C)                                ; Read the row of keys in
1974  8B16 E6 1F                        AND #1F                                     ; We are only interested in the first five bits
1975  8B18 1E 05                        LD E,5                                  ; This is the number of keys in the row
1976  8B1A              ReadKeyboard1:
1977  8B1A CB 3F                        SRL A                                   ; Shift A right; bit 0 sets carry bit
1978  8B1C 30 09                        JR NC,ReadKeyboard2   ; If the bit is 0, we've found our key
1979  8B1E 23                           INC HL                                  ; Go to next table address
1980  8B1F 1D                           DEC E                                   ; Decrement key loop counter
1981  8B20 20 F8                        JR NZ,ReadKeyboard1   ; Loop around until this row finished
1982  8B22 15                           DEC D                                   ; Decrement row loop counter
1983  8B23 20 ED                        JR NZ,ReadKeyboard0   ; Loop around until we are done
1984  8B25 A7                           AND A                                   ; Clear A (no key found)
1985  8B26 C9                           RET
1986  8B27              ReadKeyboard2:
1987  8B27 7E                           LD A,(HL)                               ; We've found a key at this point; fetch the character code!
1988  8B28 C9                           RET
1989  8B29
1990  8B29
1991  8B29
1992  8B29
1993  8B29              ;------------------------------------------------------------------------
1994  8B29              ; Wait until ENTER is pressed
1995  8B29              ;------------------------------------------------------------------------
1996  8B29              WaitUntilEnterIsPressed:
1997  8B29 CD 0B 8B             CALL ReadKeyboard
1998  8B2C FE 23                CP 35
1999  8B2E C8                   RET Z
2000  8B2F 18 F8                JR WaitUntilEnterIsPressed
2001  8B31
2002  8B31              ; -----------------------------------------------------
2003  8B31              ; Labels for the detected keys
2004  8B31              ; -----------------------------------------------------
2005  8B31              CheckButtonPressedKey1:
2006  8B31 3E 01            LD   A, 1
2007  8B33 3E F8            LD   A, #F8
2008  8B35 ED 79            OUT  (C), A
2009  8B37 C9               RET
2010  8B38
2011  8B38              CheckButtonPressedKey2:
2012  8B38 3E 02            LD   A, 2
2013  8B3A 3E F8            LD   A, #F8
2014  8B3C ED 79            OUT  (C), A
2015  8B3E C9               RET
2016  8B3F              CheckButtonPressedKey3:
2017  8B3F 3E 03            LD   A, 3
2018  8B41 3E F8            LD   A, #F8
2019  8B43 ED 79            OUT  (C), A
2020  8B45 C9               RET
2021  8B46
2022  8B46              CheckButtonPressedKey4:
2023  8B46 3E 04            LD   A, 4
2024  8B48 3E F8            LD   A, #F8
2025  8B4A ED 79            OUT  (C), A
2026  8B4C C9               RET
2027  8B4D
2028  8B4D              CheckButtonPressedKey5:
2029  8B4D 3E 05            LD   A, 5
2030  8B4F 3E F8            LD   A, #F8
2031  8B51 ED 79            OUT  (C), A
2032  8B53 C9               RET
2033  8B54
2034  8B54              CheckButtonPressedKey6:
2035  8B54 3E 06            LD   A, 6
2036  8B56 3E F8            LD   A, #F8
2037  8B58 ED 79            OUT  (C), A
2038  8B5A C9               RET
2039  8B5B
2040  8B5B              CheckButtonPressedKeyEnter:
2041  8B5B 3E 07            LD   A, 7
2042  8B5D 3E F8            LD   A, #F8
2043  8B5F ED 79            OUT  (C), A
2044  8B61 C9               RET
2045  8B62
2046  8B62              CheckButtonPressedKeySpace:
2047  8B62 3E 00            LD   A, 0
2048  8B64 3E F8            LD   A, #F8
2049  8B66 ED 79            OUT  (C), A
2050  8B68 C9               RET
2051  8B69
2052  8B69
2053  8B69
2054  8B69              ;------------------------------------------------------------------------
2055  8B69              ; Update info
2056  8B69              ;------------------------------------------------------------------------
2057  8B69              UpdateInfo:
2058  8B69 CD E9 8B             CALL RefreshHumansCounter
2059  8B6C CD 70 8B             CALL RefreshMartiansCounter
2060  8B6F C9                   RET
2061  8B70
2062  8B70              ;------------------------------------------------------------------------
2063  8B70              ; Refresh martians counter
2064  8B70              ;------------------------------------------------------------------------
2065  8B70              RefreshMartiansCounter:
2066  8B70 E5           	push	hl														; Backup HL registry to stack
2067  8B71 D5           	push	de														; Backup DE registry to stack
2068  8B72 C5           	push	bc														; Backup BC registry to stack
2069  8B73 F5           	push	af														; Backup AF registry to stack
2070  8B74 21 5D 98     	ld	hl, Martians
2071  8B77 E5           	push	hl
2072  8B78 7E           	ld	a,(hl)
2073  8B79 FE 0A        	cp	10
2074  8B7B DA D0 8B             jp      c, RefreshMartiansCounterLess10
2075  8B7E FE 14        	cp	20
2076  8B80 DA AF 8B     	jp      c, RefreshMartiansCounterLess20
2077  8B83 E1           	pop	hl
2078  8B84 7E           	ld	a,(hl)
2079  8B85 3D           	dec	a
2080  8B86 3D           	dec	a
2081  8B87 3D           	dec	a
2082  8B88 3D           	dec	a
2083  8B89 3D           	dec	a
2084  8B8A 3D           	dec	a
2085  8B8B 3D           	dec	a
2086  8B8C 3D           	dec	a
2087  8B8D 3D           	dec	a
2088  8B8E 3D           	dec	a
2089  8B8F 3D           	dec	a
2090  8B90 3D           	dec	a
2091  8B91 3D           	dec	a
2092  8B92 3D           	dec	a
2093  8B93 3D           	dec	a
2094  8B94 3D           	dec	a
2095  8B95 3D           	dec	a
2096  8B96 3D           	dec	a
2097  8B97 3D           	dec	a
2098  8B98 3D           	dec	a
2099  8B99 83 C6 30     	add	e, 48
2100  8B9C 16 02        	ld    	d, 2
2101  8B9E 0E 1F        	ld    	c, 31
2102  8BA0 CD EB 8D     	call    PrintRomChar
2103  8BA3 16 02        	ld    	d, 2
2104  8BA5 1E 1E        	ld    	e, 30
2105  8BA7 3E 32        	ld    	a, 50
2106  8BA9 CD EB 8D     	call    PrintRomChar
2107  8BAC C3 E4 8B     	jp	RefreshMartiansCounterEnd
2108  8BAF              RefreshMartiansCounterLess20:
2109  8BAF E1           	pop	hl
2110  8BB0 7E           	ld	a,(hl)
2111  8BB1 3D           	dec	a
2112  8BB2 3D           	dec	a
2113  8BB3 3D           	dec	a
2114  8BB4 3D           	dec	a
2115  8BB5 3D           	dec	a
2116  8BB6 3D           	dec	a
2117  8BB7 3D           	dec	a
2118  8BB8 3D           	dec	a
2119  8BB9 3D           	dec	a
2120  8BBA 3D           	dec	a
2121  8BBB C6 30        	add	a, 48
2122  8BBD 16 02        	ld    	d, 2
2123  8BBF 1E 1F        	ld    	e, 31
2124  8BC1 CD EB 8D     	call    PrintRomChar
2125  8BC4 16 02        	ld    	d, 2
2126  8BC6 1E 1E        	ld    	e, 30
2127  8BC8 3E 31        	ld    	a, 49
2128  8BCA CD EB 8D     	call    PrintRomChar
2129  8BCD C3 E4 8B     	jp	RefreshMartiansCounterEnd
2130  8BD0              RefreshMartiansCounterLess10:
2131  8BD0 16 02        	ld    	d, 2
2132  8BD2 1E 1E        	ld    	e, 30
2133  8BD4 3E 20        	ld    	a, 32
2134  8BD6 CD EB 8D     	call  	PrintRomChar
2135  8BD9 E1           	pop 	hl
2136  8BDA 7E           	ld	a,(hl)
2137  8BDB C6 30        	add	a, 48
2138  8BDD 16 02        	ld	d, 2
2139  8BDF 1E 1F        	ld    	e, 31
2140  8BE1 CD EB 8D     	call    PrintRomChar
2141  8BE4              RefreshMartiansCounterEnd:
2142  8BE4 F1           	pop		af														; Restore AF registry from stack
2143  8BE5 C1           	pop		bc														; Restore BC registry from stack
2144  8BE6 D1           	pop		de														; Restore DE registry from stack
2145  8BE7 E1           	pop		hl														; Restore HL registry from stack
2146  8BE8 C9           	ret
2147  8BE9
2148  8BE9              ;------------------------------------------------------------------------
2149  8BE9              ; Refresh humans counter
2150  8BE9              ;------------------------------------------------------------------------
2151  8BE9              RefreshHumansCounter:
2152  8BE9 E5           	push	hl														; Backup HL registry to stack
2153  8BEA D5           	push	de														; Backup DE registry to stack
2154  8BEB C5           	push	bc														; Backup BC registry to stack
2155  8BEC F5           	push	af														; Backup AF registry to stack
2156  8BED 21 5C 98     	ld	hl, Humans
2157  8BF0 E5           	push	hl
2158  8BF1 7E           	ld	a,(hl)
2159  8BF2 FE 0A        	cp	10
2160  8BF4 DA 10 8C             jp      c, RefreshHumansCounterLess10
2161  8BF7 E1           	pop	hl
2162  8BF8 7E           	ld	a,(hl)
2163  8BF9 D6 0A        	sub 	10
2164  8BFB C6 30        	add	a, 48
2165  8BFD 16 01        	ld    	d, 1
2166  8BFF 1E 1F        	ld    	e, 31
2167  8C01 CD EB 8D     	call  	PrintRomChar
2168  8C04 16 01        	ld    	d, 1
2169  8C06 1E 1E        	ld    	e, 30
2170  8C08 3E 31        	ld    	a, 49
2171  8C0A CD EB 8D     	call    PrintRomChar
2172  8C0D C3 24 8C     	jp	RefreshHumansCounterEnd
2173  8C10              RefreshHumansCounterLess10:
2174  8C10 16 01        	ld    	d, 1
2175  8C12 1E 1E        	ld    	e, 30
2176  8C14 3E 20        	ld    	a, 32
2177  8C16 CD EB 8D     	call    PrintRomChar
2178  8C19 E1           	pop 	hl
2179  8C1A 7E           	ld	a,(hl)
2180  8C1B C6 30        	add	a, 48
2181  8C1D 1E 1F        	ld	e, 31
2182  8C1F 16 01        	ld    	d, 1
2183  8C21 CD EB 8D     	call    PrintRomChar
2184  8C24              RefreshHumansCounterEnd:
2185  8C24 F1           	pop		af														; Restore AF registry from stack
2186  8C25 C1           	pop		bc														; Restore BC registry from stack
2187  8C26 D1           	pop		de														; Restore DE registry from stack
2188  8C27 E1           	pop		hl														; Restore HL registry from stack
2189  8C28 C9           	ret
2190  8C29              ShowRunningHumans:
2191  8C29
2192  8C29 21 5A 98             LD HL, HumansLastStaticPosLeft
2193  8C2C 36 0F                LD (HL), 15                     ; Target left running human position
2194  8C2E 21 5B 98             LD HL, HumansLastStaticPosRight
2195  8C31 36 11                LD (HL), 17                     ; Target right running human position
2196  8C33 21 59 98             LD HL, HumansToDisplay
2197  8C36 36 10                LD (HL), 16                     ; Amount of humans to display
2198  8C38              ShowRunningHumansLoop:
2199  8C38 21 59 98             LD HL, HumansToDisplay
2200  8C3B 7E                   LD A, (HL)
2201  8C3C 3D                   DEC A
2202  8C3D FE 00                CP 0
2203  8C3F C8                   RET Z
2204  8C40 77                   LD (HL), A
2205  8C41 CB 47                BIT 0, A
2206  8C43 C2 53 8C             JP NZ, ShowRunningHumansLoopLeft
2207  8C46 CD 91 8E             CALL ShowRightRunningHumans
2208  8C49 21 5B 98             LD HL, HumansLastStaticPosRight
2209  8C4C 7E                   LD A, (HL)
2210  8C4D 3C                   INC A
2211  8C4E 3C                   INC A
2212  8C4F 77                   LD (HL), A
2213  8C50 C3 38 8C             JP ShowRunningHumansLoop
2214  8C53              ShowRunningHumansLoopLeft
2215  8C53 CD 2C 8E             CALL ShowLeftRunningHumans
2216  8C56 21 5A 98             LD HL, HumansLastStaticPosLeft
2217  8C59 7E                   LD A, (HL)
2218  8C5A 3D                   DEC A
2219  8C5B 3D                   DEC A
2220  8C5C 77                   LD (HL), A
2221  8C5D C3 38 8C             JP ShowRunningHumansLoop
2222  8C60              ;------------------------------------------------------------------------
2223  8C60              ; Clear the screen and set attributes
2224  8C60              ;------------------------------------------------------------------------
2225  8C60              ClearScreen:
2226  8C60 21 00 40             ld hl, 16384        ;pixels
2227  8C63 11 01 40             ld de, 16385        ;pixels + 1
2228  8C66 01 FF 17             ld bc, 6143         ;pixels area length - 1
2229  8C69 36 00                ld (hl), 0          ;set first byte to '0'
2230  8C6B ED B0                ldir                ;copy bytes
2231  8C6D 3E 44                LD a, %000000 <<3 | %000100 | %1000000
2232  8C6F 21 00 58             LD hl, ATTR_BASE               ; start at attribute start
2233  8C72 11 01 58             LD de, ATTR_BASE + 1           ; copy to next address in attributes
2234  8C75 01 FF 02             LD bc, 768 - 1    ; 'loop' attribute size minus 1 times
2235  8C78 77                   LD (hl), a                      ; initialize the first attribute
2236  8C79 ED B0                LDIR                            ; fill the attributes
2237  8C7B 3E 00                LD   A, 0       ; A = 0 (bit [2:0] = 0 => Nero)
2238  8C7D D3 FE                OUT  (0xFE), A  ; scrive 0 nella porta 0xFE
2239  8C7F CD 85 8D             call ClearGameMatrix
2240  8C82 AF                   xor a         ; start from row 0
2241  8C83              ClearScreenRowLoop:
2242  8C83 FE 18                cp 24
2243  8C85 C8                   ret z
2244  8C86 57                   ld d, a
2245  8C87 F5                   push af
2246  8C88 AF                   xor a      ; start from column 0
2247  8C89              ClearScreenColLoop:
2248  8C89 FE 20                cp 32
2249  8C8B CA 9A 8C             jp z, ClearScreenColLoopEnd
2250  8C8E 5F                   ld e, a
2251  8C8F F5                   push af
2252  8C90 3E 20                ld a,32
2253  8C92 CD C1 8D             call PrintRamChar
2254  8C95 F1                   pop af
2255  8C96 3C                   inc a
2256  8C97 C3 89 8C             jp ClearScreenColLoop
2257  8C9A              ClearScreenColLoopEnd:
2258  8C9A F1                   pop af
2259  8C9B 3C                   inc a
2260  8C9C C3 83 8C             jp ClearScreenRowLoop
2261  8C9F C9                   RET
2262  8CA0              ;------------------------------------------------------------------------
2263  8CA0              ; Show game field
2264  8CA0              ;------------------------------------------------------------------------
2265  8CA0              ShowGameField:
2266  8CA0 CD 60 8C     	call	ClearScreen
2267  8CA3              ShowGameFieldWithoutClear:
2268  8CA3 1E 13        	ld	e, 19
2269  8CA5 16 00        	ld    	d, 0
2270  8CA7              ShowGameFieldUpperLineLoop
2271  8CA7 3E 62        	ld    	a, TILE_BORDER_HORIZONTAL
2272  8CA9 CD C1 8D     	call  	PrintRamChar
2273  8CAC 1D                   dec     e
2274  8CAD 7B           	ld	a, e
2275  8CAE FE 00        	cp	0
2276  8CB0 CA B6 8C     	jp	z, ShowGameFieldBottomLine
2277  8CB3 C3 A7 8C     	jp	ShowGameFieldUpperLineLoop
2278  8CB6              ShowGameFieldBottomLine:
2279  8CB6 1E 1E        	ld      e, 30
2280  8CB8 16 17        	ld	d, 23
2281  8CBA              ShowGameFieldBottomLineLoop:
2282  8CBA 3E 62        	ld    	a, TILE_BORDER_HORIZONTAL
2283  8CBC CD C1 8D     	call  	PrintRamChar
2284  8CBF 1D           	dec	e
2285  8CC0 7B           	ld	a, e
2286  8CC1 FE 00        	cp	0
2287  8CC3 CA C9 8C     	jp	z, ShowGameFieldRightLine
2288  8CC6 C3 BA 8C     	jp	ShowGameFieldBottomLineLoop
2289  8CC9              ShowGameFieldRightLine:
2290  8CC9 1E 1F                ld	e, 31
2291  8CCB 16 16                ld    	d, 22
2292  8CCD              ShowGameFieldRightLineLoop
2293  8CCD 3E 61                ld    	a, TILE_BORDER_VERTICAL
2294  8CCF CD C1 8D             call  	PrintRamChar
2295  8CD2 15                   dec     d
2296  8CD3 7A                   ld	a, d
2297  8CD4 FE 03                cp	3
2298  8CD6 CA DC 8C             jp	z, ShowGameFieldLeftLine
2299  8CD9 C3 CD 8C             jp	ShowGameFieldRightLineLoop
2300  8CDC              ShowGameFieldLeftLine:
2301  8CDC 1E 00                ld      e, 0
2302  8CDE 16 16                ld	d, 22
2303  8CE0              ShowGameFieldLeftLineLoop:
2304  8CE0 3E 61                ld    	a, TILE_BORDER_VERTICAL
2305  8CE2 CD C1 8D             call  	PrintRamChar
2306  8CE5 15                   dec	d
2307  8CE6 7A                   ld	a, d
2308  8CE7 FE 00                cp	0
2309  8CE9 CA EF 8C             jp	z, ShowGameFieldCorners
2310  8CEC C3 E0 8C             jp	ShowGameFieldLeftLineLoop
2311  8CEF              ShowGameFieldCorners:
2312  8CEF 3E 60                ld      a, TILE_BORDER_TOP_LEFT_CORNER
2313  8CF1 1E 00                ld      e, 0
2314  8CF3 16 00                ld      d, 0
2315  8CF5 CD C1 8D             call    PrintRamChar
2316  8CF8 3E 63                ld      a, TILE_BORDER_TOP_RIGHT_CORNER
2317  8CFA 1E 14                ld      e, 20
2318  8CFC 16 00                ld      d, 0
2319  8CFE CD C1 8D             call    PrintRamChar
2320  8D01 3E 64                ld      a, TILE_BORDER_BOTTOM_LEFT_CORNER
2321  8D03 1E 00                ld      e, 0
2322  8D05 16 17                ld      d, 23
2323  8D07 CD C1 8D             call    PrintRamChar
2324  8D0A 3E 65                ld      a, TILE_BORDER_BOTTOM_RIGHT_CORNER
2325  8D0C 1E 1F                ld      e, 31
2326  8D0E 16 17                ld      d, 23
2327  8D10 CD C1 8D             call    PrintRamChar
2328  8D13 3E 61                ld      a, TILE_BORDER_VERTICAL
2329  8D15 1E 14                ld      e, 20
2330  8D17 16 01                ld      d, 1
2331  8D19 CD C1 8D             call    PrintRamChar
2332  8D1C 14                   inc     d
2333  8D1D CD C1 8D             call    PrintRamChar
2334  8D20 3E 64                ld      a, TILE_BORDER_BOTTOM_LEFT_CORNER
2335  8D22 14                   inc     d
2336  8D23 CD C1 8D             call    PrintRamChar
2337  8D26 1C                   inc     e
2338  8D27 3E 62                ld      a, TILE_BORDER_HORIZONTAL
2339  8D29 CD C1 8D             call    PrintRamChar
2340  8D2C 1C                   inc     e
2341  8D2D CD C1 8D             call    PrintRamChar
2342  8D30 1C                   inc     e
2343  8D31 CD C1 8D             call    PrintRamChar
2344  8D34 1C                   inc     e
2345  8D35 CD C1 8D             call    PrintRamChar
2346  8D38 1C                   inc     e
2347  8D39 CD C1 8D             call    PrintRamChar
2348  8D3C 1C                   inc     e
2349  8D3D CD C1 8D             call    PrintRamChar
2350  8D40 1C                   inc     e
2351  8D41 CD C1 8D             call    PrintRamChar
2352  8D44 1C                   inc     e
2353  8D45 CD C1 8D             call    PrintRamChar
2354  8D48 1C                   inc     e
2355  8D49 CD C1 8D             call    PrintRamChar
2356  8D4C 1C                   inc     e
2357  8D4D CD C1 8D             call    PrintRamChar
2358  8D50 1C                   inc     e
2359  8D51 3E 63                ld      a, TILE_BORDER_TOP_RIGHT_CORNER
2360  8D53 CD C1 8D             call    PrintRamChar
2361  8D56 3E 61                ld      a, TILE_BORDER_VERTICAL
2362  8D58
2363  8D58 1E 15                ld      e, 21
2364  8D5A 16 00                ld      d, 0
2365  8D5C 21 CC 94             ld      HL, TEXT_MARTIAN_WAR
2366  8D5F CD 12 8E             call PrintString
2367  8D62
2368  8D62 1E 15                ld      e, 21
2369  8D64 16 01                ld      d, 1
2370  8D66 21 49 98             ld     HL, TEXT_HUMANS
2371  8D69 CD 12 8E             call PrintString
2372  8D6C
2373  8D6C 1E 15                ld      e, 21
2374  8D6E 16 02                ld      d, 2
2375  8D70 21 50 98             ld     HL, TEXT_MARTIANS
2376  8D73 CD 12 8E             call PrintString
2377  8D76
2378  8D76 C9                   ret
2379  8D77              ;------------------------------------------------------------------------
2380  8D77              ; Load tiles into RAM
2381  8D77              ;------------------------------------------------------------------------
2382  8D77              LoadTiles:
2383  8D77 F3                   DI                      ; Interrupts disabled
2384  8D78 11 40 9F             LD   DE, RAM_CHAR_SET_ADDRESS + (96*8)
2385  8D7B 21 B4 91             LD   HL, TilesDef
2386  8D7E 01 18 03             LD   BC, 792
2387  8D81 ED B0                LDIR
2388  8D83 FB                   EI                      ; Interrupts enabled
2389  8D84 C9                   RET
2390  8D85
2391  8D85              ;------------------------------------------------------------------------
2392  8D85              ; Clear GameMatrix
2393  8D85              ;------------------------------------------------------------------------
2394  8D85              ClearGameMatrix:
2395  8D85 21 10 A4             LD   HL, RAM_GAME_MATRIX_ADDRESS
2396  8D88 01 00 03             LD   BC, 768
2397  8D8B 3E 20                ld   a, 32
2398  8D8D
2399  8D8D              ClearGameMatrixLoop:
2400  8D8D 77                   LD   (HL), A
2401  8D8E 23                   INC  HL
2402  8D8F 0B                   DEC  BC
2403  8D90 78                   LD   A, B
2404  8D91 B1                   OR   C
2405  8D92 20 F9                JR   NZ, ClearGameMatrixLoop
2406  8D94 C9                   ret
2407  8D95              ;------------------------------------------------------------------------
2408  8D95              ; Draw a 16x32 tile
2409  8D95              ; D: Y position
2410  8D95              ; E: X position
2411  8D95              ; A: First tile number
2412  8D95              ;------------------------------------------------------------------------
2413  8D95              Draw16x32Tile:
2414  8D95 D5                   PUSH DE
2415  8D96 CD C1 8D             CALL PrintRamChar         ; Print top-left tile
2416  8D99 3C                   INC A
2417  8D9A 1C                   INC E
2418  8D9B CD C1 8D             CALL PrintRamChar         ; Print top-right tile
2419  8D9E 3C                   INC A
2420  8D9F 14                   INC D
2421  8DA0 1D                   DEC E
2422  8DA1 CD C1 8D             CALL PrintRamChar         ; Print middle-left tile
2423  8DA4 3C                   INC A
2424  8DA5 1C                   INC E
2425  8DA6 CD C1 8D             CALL PrintRamChar         ; Print middle-right tile
2426  8DA9 3C                   INC A
2427  8DAA 14                   INC D
2428  8DAB 1D                   DEC E
2429  8DAC CD C1 8D             CALL PrintRamChar         ; Print bottom-left tile
2430  8DAF 3C                   INC A
2431  8DB0 1C                   INC E
2432  8DB1 CD C1 8D             CALL PrintRamChar         ; Print bottom-right tile
2433  8DB4 D1                   POP DE
2434  8DB5 C9                   RET
2435  8DB6              ;------------------------------------------------------------------------
2436  8DB6              ; Draw a 16x8 tile
2437  8DB6              ; D: Y position
2438  8DB6              ; E: X position
2439  8DB6              ; A: First tile number
2440  8DB6              ;------------------------------------------------------------------------
2441  8DB6              Draw16x8Tile:
2442  8DB6 D5                   PUSH DE
2443  8DB7 CD C1 8D             CALL PrintRamChar         ; Print top-left tile
2444  8DBA 3C                   INC A
2445  8DBB 1C                   INC E
2446  8DBC CD C1 8D             CALL PrintRamChar         ; Print top-right tile
2447  8DBF D1                   POP DE
2448  8DC0 C9                   RET
2449  8DC1              ;------------------------------------------------------------------------
2450  8DC1              ; Print a single RAM character out to a screen address
2451  8DC1              ;  A: Character to print
2452  8DC1              ;  D: Character Y position
2453  8DC1              ;  E: Character X position
2454  8DC1              ;------------------------------------------------------------------------
2455  8DC1              PrintRamChar:
2456  8DC1 C5                   PUSH BC
2457  8DC2 D5                   PUSH DE                 ; Save the character position
2458  8DC3 F5                   PUSH AF                 ; Save the character code
2459  8DC4 E5                   PUSH HL                 ; Save the character set address
2460  8DC5
2461  8DC5
2462  8DC5 CD D6 85             call SetMatrixValue
2463  8DC8
2464  8DC8 21 40 9C             LD HL, RAM_CHAR_SET_ADDRESS       ; Character set bitmap data in ROM
2465  8DCB 06 00                LD B,0                  ; BC = character code
2466  8DCD 4F                   LD C, A
2467  8DCE CB 21                SLA C                   ; Multiply by 8 by shifting
2468  8DD0 CB 10                RL B
2469  8DD2 CB 21                SLA C
2470  8DD4 CB 10                RL B
2471  8DD6 CB 21                SLA C
2472  8DD8 CB 10                RL B
2473  8DDA 09                   ADD HL, BC              ; And add to HL to get first byte of character
2474  8DDB CD 1C 8E             CALL Get_Char_Address   ; Get screen position in DE
2475  8DDE 06 08                LD B,8                  ; Loop counter - 8 bytes per character
2476  8DE0              PrintRamCharL1:
2477  8DE0 7E                   LD A,(HL)               ; Get the byte from the ROM into A
2478  8DE1 12                   LD (DE),A               ; Stick A onto the screen
2479  8DE2 23                   INC HL                  ; Goto next byte of character
2480  8DE3 14                   INC D                   ; Goto next line on screen
2481  8DE4 10 FA                DJNZ PrintRamCharL1      ; Loop around whilst it is Not Zero (NZ)
2482  8DE6 E1                   POP HL                  ; Restore the character set address
2483  8DE7 F1                   POP AF                  ; Restore the character code
2484  8DE8 D1                   POP DE                  ; Restore the character position
2485  8DE9 C1                   POP BC
2486  8DEA C9                   RET
2487  8DEB              ;------------------------------------------------------------------------
2488  8DEB              ; Print a single ROM character out to a screen address
2489  8DEB              ;  A: Character to print
2490  8DEB              ;  D: Character Y position
2491  8DEB              ;  E: Character X position
2492  8DEB              ;------------------------------------------------------------------------
2493  8DEB              PrintRomChar:
2494  8DEB D5                   PUSH DE                 ; Save the character position
2495  8DEC F5                   PUSH AF                 ; Save the character code
2496  8DED E5                   PUSH HL                 ; Save the character set address
2497  8DEE 21 00 3D             LD HL, ROM_CHAR_SET_ADDRESS       ; Character set bitmap data in ROM
2498  8DF1 06 00                LD B,0                  ; BC = character code
2499  8DF3 D6 20                SUB 32                  ; Adjust for the character set
2500  8DF5 4F                   LD C, A
2501  8DF6 CB 21                SLA C                   ; Multiply by 8 by shifting
2502  8DF8 CB 10                RL B
2503  8DFA CB 21                SLA C
2504  8DFC CB 10                RL B
2505  8DFE CB 21                SLA C
2506  8E00 CB 10                RL B
2507  8E02 09                   ADD HL, BC              ; And add to HL to get first byte of character
2508  8E03 CD 1C 8E             CALL Get_Char_Address   ; Get screen position in DE
2509  8E06 06 08                LD B,8                  ; Loop counter - 8 bytes per character
2510  8E08              PrintRomCharL1:
2511  8E08 7E                   LD A,(HL)               ; Get the byte from the ROM into A
2512  8E09 12                   LD (DE),A               ; Stick A onto the screen
2513  8E0A 23                   INC HL                  ; Goto next byte of character
2514  8E0B 14                   INC D                   ; Goto next line on screen
2515  8E0C 10 FA                DJNZ PrintRomCharL1      ; Loop around whilst it is Not Zero (NZ)
2516  8E0E E1                   POP HL                  ; Restore the character set address
2517  8E0F F1                   POP AF                  ; Restore the character code
2518  8E10 D1                   POP DE                  ; Restore the character position
2519  8E11 C9                   RET
2520  8E12              ;------------------------------------------------------------------------
2521  8E12              ; Print string
2522  8E12              ;  HL: String address
2523  8E12              ;  D: Y position
2524  8E12              ;  E: X position
2525  8E12              ;------------------------------------------------------------------------
2526  8E12              PrintString:
2527  8E12 7E                   LD   A, (HL)            ; Load address of current string position to A
2528  8E13 B7                   OR   A                  ; Flag updating in base of A value
2529  8E14 C8                   RET  Z
2530  8E15 CD EB 8D             CALL PrintRomChar
2531  8E18 1C                   inc  E
2532  8E19 23                   INC  HL                 ; Current string position address set to next element
2533  8E1A 18 F6                JR   PrintString        ; Loop repeat
2534  8E1C              ;------------------------------------------------------------------------
2535  8E1C              ; Get screen address from a character (X,Y) coordinate
2536  8E1C              ; D = Y character position (0-23)
2537  8E1C              ; E = X character position (0-31)
2538  8E1C              ; Returns screen address in DE
2539  8E1C              ;------------------------------------------------------------------------
2540  8E1C              Get_Char_Address:
2541  8E1C 7A                   LD A,D
2542  8E1D E6 07                AND %00000111
2543  8E1F 1F                   RRA
2544  8E20 1F                   RRA
2545  8E21 1F                   RRA
2546  8E22 1F                   RRA
2547  8E23 B3                   OR E
2548  8E24 5F                   LD E,A
2549  8E25 7A                   LD A,D
2550  8E26 E6 18                AND %00011000
2551  8E28 F6 40                OR %01000000
2552  8E2A 57                   LD D,A
2553  8E2B C9                   RET                             ; Returns screen address in DE
2554  8E2C
2555  8E2C
2556  8E2C
2557  8E2C
2558  8E2C
2559  8E2C
2560  8E2C              ;------------------------------------------------------------------------
2561  8E2C              ; Show left running humans
2562  8E2C              ;------------------------------------------------------------------------
2563  8E2C              ShowLeftRunningHumans:
2564  8E2C                      ; Initialize positions
2565  8E2C 1E 01                LD E, 1                 ; X position for left runner
2566  8E2E
2567  8E2E                      ; Loop until the row is filled with static humans
2568  8E2E              ShowLeftRunningHumansLoop:
2569  8E2E                      ; Draw left runner
2570  8E2E 3E 89                LD A, SPRT_HUMAN_RUNNING_LEFT_POS1
2571  8E30 16 14                LD D, 20                ; Y position (row 20)
2572  8E32 CD 95 8D             CALL Draw16x32Tile
2573  8E35 CD E9 8E             CALL Delay
2574  8E38
2575  8E38                      ; Move left runner closer to the center
2576  8E38 1C                   INC E
2577  8E39                      ; Check if left runner has reached the center or a static human
2578  8E39 21 5A 98             LD HL, HumansLastStaticPosLeft
2579  8E3C 7E                   LD A, (HL)
2580  8E3D FE 01                CP 1
2581  8E3F CA 7C 8E             JP Z, ShowLeftRunningHumansEnd
2582  8E42 7B                   LD A, E
2583  8E43 BE                   CP (HL)
2584  8E44 CA 7C 8E             JP Z, ShowLeftRunningHumansEnd
2585  8E47 3E 8F                LD A, SPRT_HUMAN_RUNNING_LEFT_POS2
2586  8E49 16 14                LD D, 20                ; Y position (row 20)
2587  8E4B CD 95 8D             CALL Draw16x32Tile
2588  8E4E CD EF 8F             CALL ClearLeftRunningHuman
2589  8E51 CD E9 8E             CALL Delay
2590  8E54
2591  8E54 CD EF 8F             CALL ClearLeftRunningHuman
2592  8E57                      ; Move left runner closer to the center
2593  8E57 1C                   INC E
2594  8E58                      ; Check if left runner has reached the center or a static human
2595  8E58 21 5A 98             LD HL, HumansLastStaticPosLeft
2596  8E5B 7B                   LD A, E
2597  8E5C BE                   CP (HL)
2598  8E5D CA 7C 8E             JP Z, ShowLeftRunningHumansEnd
2599  8E60 3E 95                LD A, SPRT_HUMAN_RUNNING_LEFT_POS3
2600  8E62 16 14                LD D, 20                ; Y position (row 20)
2601  8E64 CD 95 8D             CALL Draw16x32Tile
2602  8E67 CD EF 8F             CALL ClearLeftRunningHuman
2603  8E6A CD E9 8E             CALL Delay
2604  8E6D
2605  8E6D                      ; Move left runner closer to the center
2606  8E6D 1C                   INC E
2607  8E6E                      ; Check if left runner has reached the center or a static human
2608  8E6E 21 5A 98             LD HL, HumansLastStaticPosLeft
2609  8E71 7B                   LD A, E
2610  8E72 BE                   CP (HL)
2611  8E73 CA 7C 8E             JP Z, ShowLeftRunningHumansEnd
2612  8E76 CD EF 8F             CALL ClearLeftRunningHuman
2613  8E79 C3 2E 8E             JP ShowLeftRunningHumansLoop
2614  8E7C
2615  8E7C              ShowLeftRunningHumansEnd:
2616  8E7C                      ; Make left runner static
2617  8E7C 21 5A 98             LD HL, HumansLastStaticPosLeft
2618  8E7F 7E                   LD A, (HL)
2619  8E80 5F                   LD E, A
2620  8E81 3E 71                LD A, SPRT_HUMAN_STATIC
2621  8E83 CD 95 8D             CALL Draw16x32Tile
2622  8E86 21 5A 98             LD HL, HumansLastStaticPosLeft
2623  8E89 7E                   LD A, (HL)
2624  8E8A FE 01                CP 1
2625  8E8C C8                   RET Z
2626  8E8D CD EF 8F             CALL ClearLeftRunningHuman
2627  8E90 C9                   RET
2628  8E91
2629  8E91
2630  8E91              ;------------------------------------------------------------------------
2631  8E91              ; Show right running humans
2632  8E91              ;------------------------------------------------------------------------
2633  8E91              ShowRightRunningHumans:
2634  8E91                      ; Initialize positions
2635  8E91 1E 1D                LD E, 29                 ; X position for right runner
2636  8E93
2637  8E93
2638  8E93                      ; Loop until the row is filled with static humans
2639  8E93              ShowRightRunningHumansLoop:
2640  8E93                      ; Draw right runner
2641  8E93 21 5B 98             LD HL, HumansLastStaticPosRight
2642  8E96 7B                   LD A, E
2643  8E97 BE                   CP (HL)
2644  8E98 CA DE 8E             JP Z, ShowRightRunningHumansEnd
2645  8E9B 3E 77                LD A, SPRT_HUMAN_RUNNING_RIGHT_POS1
2646  8E9D 16 14                LD D, 20                ; Y position (row 20)
2647  8E9F CD 95 8D             CALL Draw16x32Tile
2648  8EA2 CD E9 8E             CALL Delay
2649  8EA5 CD 07 90             CALL ClearRightRunningHuman
2650  8EA8
2651  8EA8                      ; Move right runner closer to the center
2652  8EA8 1D                   DEC E
2653  8EA9                      ; Check if right runner has reached the center or a static human
2654  8EA9 21 5B 98             LD HL, HumansLastStaticPosRight
2655  8EAC 7B                   LD A, E
2656  8EAD BE                   CP (HL)
2657  8EAE CA DE 8E             JP Z, ShowRightRunningHumansEnd
2658  8EB1 3E 7D                LD A, SPRT_HUMAN_RUNNING_RIGHT_POS2
2659  8EB3 16 14                LD D, 20                ; Y position (row 20)
2660  8EB5 CD 95 8D             CALL Draw16x32Tile
2661  8EB8 CD E9 8E             CALL Delay
2662  8EBB CD 07 90             CALL ClearRightRunningHuman
2663  8EBE                      ; Move right runner closer to the center
2664  8EBE 1D                   DEC E
2665  8EBF                      ; Check if right runner has reached the center or a static human
2666  8EBF 21 5B 98             LD HL, HumansLastStaticPosRight
2667  8EC2 7B                   LD A, E
2668  8EC3 BE                   CP (HL)
2669  8EC4 CA DE 8E             JP Z, ShowRightRunningHumansEnd
2670  8EC7 3E 83                LD A, SPRT_HUMAN_RUNNING_RIGHT_POS3
2671  8EC9 16 14                LD D, 20                ; Y position (row 20)
2672  8ECB CD 95 8D             CALL Draw16x32Tile
2673  8ECE CD E9 8E             CALL Delay
2674  8ED1 CD 07 90             CALL ClearRightRunningHuman
2675  8ED4                      ; Move right runner closer to the center
2676  8ED4 1D                   DEC E
2677  8ED5                      ; Check if right runner has reached the center or a static human
2678  8ED5 7B                   LD A, E
2679  8ED6 FE 0F                CP 15
2680  8ED8 CA DE 8E             JP Z, ShowRightRunningHumansEnd
2681  8EDB
2682  8EDB C3 93 8E             JP ShowRightRunningHumansLoop
2683  8EDE
2684  8EDE              ShowRightRunningHumansEnd:
2685  8EDE                      ; Make right runner static
2686  8EDE 21 5B 98             LD HL, HumansLastStaticPosRight
2687  8EE1 7E                   LD A, (HL)
2688  8EE2 5F                   LD E, A
2689  8EE3 3E 71                LD A, SPRT_HUMAN_STATIC
2690  8EE5 CD 95 8D             CALL Draw16x32Tile
2691  8EE8
2692  8EE8 C9                   RET
2693  8EE9
2694  8EE9
2695  8EE9
2696  8EE9              ;------------------------------------------------------------------------
2697  8EE9              ; Delay routine
2698  8EE9              ;------------------------------------------------------------------------
2699  8EE9              Delay:
2700  8EE9 C5                   PUSH BC
2701  8EEA 01 00 10             LD BC, 0x1000
2702  8EED              DelayLoop:
2703  8EED
2704  8EED 0B                   DEC BC
2705  8EEE 78                   LD A, B
2706  8EEF B1                   OR C
2707  8EF0 C2 ED 8E             JP NZ, DelayLoop
2708  8EF3 C1                   POP BC
2709  8EF4 C9                   RET
2710  8EF5              ;------------------------------------------------------------------------
2711  8EF5              ; Game main loop delay routine
2712  8EF5              ;------------------------------------------------------------------------
2713  8EF5              GameMainLoopDelay:
2714  8EF5 C5                   PUSH BC
2715  8EF6 01 00 20             LD BC, 0x2000
2716  8EF9              GameMainLoopDelayLoop:
2717  8EF9
2718  8EF9 0B                   DEC BC
2719  8EFA 78                   LD A, B
2720  8EFB B1                   OR C
2721  8EFC C2 F9 8E             JP NZ, GameMainLoopDelayLoop
2722  8EFF C1                   POP BC
2723  8F00 C9                   RET
2724  8F01               ; --------------------------------------------------------------------
2725  8F01              ; Subroutine: ShowJumpingHuman
2726  8F01              ; --------------------------------------------------------------------
2727  8F01              ; Description:
2728  8F01              ;   - Simulates a character (human) jumping four times.
2729  8F01              ;   - Each jump is composed of a sequence of 6 frames displayed one
2730  8F01              ;     after another. The frames are as follows:
2731  8F01              ;        1) SPRT_JUMPING_HUMAN_1 at D=19
2732  8F01              ;        2) SPRT_JUMPING_HUMAN_2 at D=18
2733  8F01              ;        3) SPRT_JUMPING_HUMAN_3 at D=17
2734  8F01              ;        4) SPRT_JUMPING_HUMAN_2 at D=18
2735  8F01              ;        5) SPRT_JUMPING_HUMAN_1 at D=19
2736  8F01              ;        6) SPRT_HUMAN_STATIC    at D=20
2737  8F01              ;   - Between each frame, the subroutine calls GameMainLoopDelay to
2738  8F01              ;     slow down the animation. This routine destroys the value in A.
2739  8F01              ;   - Register E (horizontal coordinate) must be preserved.
2740  8F01              ;   - The routine loops 4 times (for 4 jumps) and then returns.
2741  8F01              ;
2742  8F01              ; Input:
2743  8F01              ;   - Register E: horizontal position (not modified here).
2744  8F01              ;
2745  8F01              ; Registers used:
2746  8F01              ;   - B: used as a counter for the four jumps.
2747  8F01              ;   - A: loaded with the sprite ID for each frame.
2748  8F01              ;   - D: loaded with the vertical position for each frame.
2749  8F01              ;
2750  8F01              ; Output:
2751  8F01              ;   - None. Returns after all jumps are completed.
2752  8F01              ; --------------------------------------------------------------------
2753  8F01
2754  8F01              ShowJumpingHuman:
2755  8F01 C5                   PUSH BC             ; Preserve BC if needed by the main program
2756  8F02 E5                   PUSH HL             ; Preserve HL if needed by the main program
2757  8F03 06 04                LD   B, 4           ; Set up the loop for 4 jumps
2758  8F05
2759  8F05              JumpLoop:
2760  8F05                      ; Frame 1
2761  8F05 3E 9B                LD   A, SPRT_JUMPING_HUMAN_1
2762  8F07 16 13                LD   D, 19
2763  8F09 CD 95 8D             CALL Draw16x32Tile
2764  8F0C 3E 20                LD   A, 32
2765  8F0E 14                   inc  D
2766  8F0F 14                   inc  D
2767  8F10 14                   inc  D
2768  8F11 CD C1 8D             CALL PrintRamChar
2769  8F14 1C                   inc e
2770  8F15 CD C1 8D             CALL PrintRamChar
2771  8F18 1D                   dec e
2772  8F19 15                   dec d
2773  8F1A 15                   dec d
2774  8F1B 15                   dec d
2775  8F1C CD F5 8E             CALL GameMainLoopDelay   ; Slows down the animation (destroys A)
2776  8F1F C5                   push bc
2777  8F20 D5                   push de
2778  8F21 CD 0B 8B             CALL ReadKeyboard
2779  8F24 D1                   pop de
2780  8F25 C1                   pop bc
2781  8F26 FE 23                CP 35
2782  8F28 CA E7 8F             JP Z, JumpLoopEnd
2783  8F2B
2784  8F2B                      ; Frame 2
2785  8F2B 3E A1                LD   A, SPRT_JUMPING_HUMAN_2
2786  8F2D 16 12                LD   D, 18
2787  8F2F CD 95 8D             CALL Draw16x32Tile
2788  8F32 3E 20                LD   A, 32
2789  8F34 14                   inc  D
2790  8F35 14                   inc  D
2791  8F36 14                   inc  D
2792  8F37 CD C1 8D             CALL PrintRamChar
2793  8F3A 1C                   inc e
2794  8F3B CD C1 8D             CALL PrintRamChar
2795  8F3E 1D                   dec e
2796  8F3F 15                   dec d
2797  8F40 15                   dec d
2798  8F41 15                   dec d
2799  8F42 CD F5 8E             CALL GameMainLoopDelay
2800  8F45
2801  8F45 C5                   push bc
2802  8F46 D5                   push de
2803  8F47 CD 0B 8B             CALL ReadKeyboard
2804  8F4A D1                   pop de
2805  8F4B C1                   pop bc
2806  8F4C FE 23                CP 35
2807  8F4E CA E7 8F             JP Z, JumpLoopEnd
2808  8F51
2809  8F51                      ; Frame 3
2810  8F51 3E A7                LD   A, SPRT_JUMPING_HUMAN_3
2811  8F53 16 11                LD   D, 17
2812  8F55 CD 95 8D             CALL Draw16x32Tile
2813  8F58 3E 20                LD   A, 32
2814  8F5A 14                   inc  D
2815  8F5B 14                   inc  D
2816  8F5C 14                   inc  D
2817  8F5D CD C1 8D             CALL PrintRamChar
2818  8F60 1C                   inc e
2819  8F61 CD C1 8D             CALL PrintRamChar
2820  8F64 1D                   dec e
2821  8F65 15                   dec d
2822  8F66 15                   dec d
2823  8F67 15                   dec d
2824  8F68 CD F5 8E             CALL GameMainLoopDelay
2825  8F6B
2826  8F6B C5                   push bc
2827  8F6C D5                   push de
2828  8F6D CD 0B 8B             CALL ReadKeyboard
2829  8F70 D1                   pop de
2830  8F71 C1                   pop bc
2831  8F72 FE 23                CP 35
2832  8F74 CA E7 8F             JP Z, JumpLoopEnd
2833  8F77
2834  8F77                      ; Frame 4
2835  8F77 3E A1                LD   A, SPRT_JUMPING_HUMAN_2
2836  8F79 16 12                LD   D, 18
2837  8F7B CD 95 8D             CALL Draw16x32Tile
2838  8F7E 3E 20                LD   A, 32
2839  8F80 15                   dec  D
2840  8F81 CD C1 8D             CALL PrintRamChar
2841  8F84 1C                   inc e
2842  8F85 CD C1 8D             CALL PrintRamChar
2843  8F88 14                   inc d
2844  8F89 1D                   dec e
2845  8F8A CD F5 8E             CALL GameMainLoopDelay
2846  8F8D
2847  8F8D C5                   push bc
2848  8F8E D5                   push de
2849  8F8F CD 0B 8B             CALL ReadKeyboard
2850  8F92 D1                   pop de
2851  8F93 C1                   pop bc
2852  8F94 FE 23                CP 35
2853  8F96 CA E7 8F             JP Z, JumpLoopEnd
2854  8F99
2855  8F99                      ; Frame 5
2856  8F99 3E 9B                LD   A, SPRT_JUMPING_HUMAN_1
2857  8F9B 16 13                LD   D, 19
2858  8F9D CD 95 8D             CALL Draw16x32Tile
2859  8FA0 3E 20                LD   A, 32
2860  8FA2 15                   dec  D
2861  8FA3 CD C1 8D             CALL PrintRamChar
2862  8FA6 1C                   inc e
2863  8FA7 CD C1 8D             CALL PrintRamChar
2864  8FAA 14                   inc d
2865  8FAB 1D                   dec e
2866  8FAC CD F5 8E             CALL GameMainLoopDelay
2867  8FAF
2868  8FAF C5                   push bc
2869  8FB0 D5                   push de
2870  8FB1 CD 0B 8B             CALL ReadKeyboard
2871  8FB4 D1                   pop de
2872  8FB5 C1                   pop bc
2873  8FB6 FE 23                CP 35
2874  8FB8 CA E7 8F             JP Z, JumpLoopEnd
2875  8FBB
2876  8FBB                      ; Return to the static sprite
2877  8FBB 3E 71                LD   A, SPRT_HUMAN_STATIC
2878  8FBD 16 14                LD   D, 20
2879  8FBF CD 95 8D             CALL Draw16x32Tile
2880  8FC2 3E 20                LD   A, 32
2881  8FC4 15                   dec  D
2882  8FC5 CD C1 8D             CALL PrintRamChar
2883  8FC8 1C                   inc e
2884  8FC9 CD C1 8D             CALL PrintRamChar
2885  8FCC 14                   inc d
2886  8FCD 1D                   dec e
2887  8FCE CD F5 8E             CALL GameMainLoopDelay
2888  8FD1
2889  8FD1 C5                   push bc
2890  8FD2 D5                   push de
2891  8FD3 CD 0B 8B             CALL ReadKeyboard
2892  8FD6 D1                   pop de
2893  8FD7 C1                   pop bc
2894  8FD8 FE 23                CP 35
2895  8FDA CA E7 8F             JP Z, JumpLoopEnd
2896  8FDD
2897  8FDD                      ; Decrement the jump counter and loop if not zero
2898  8FDD 05                   dec b
2899  8FDE 78                   ld a, b
2900  8FDF FE 00                cp 0
2901  8FE1 C2 05 8F             jp nz, JumpLoop
2902  8FE4
2903  8FE4 E1                   POP  HL
2904  8FE5 C1                   POP  BC
2905  8FE6 C9                   RET
2906  8FE7              JumpLoopEnd:
2907  8FE7 E1                   POP  HL
2908  8FE8 C1                   POP  BC
2909  8FE9 CD 60 8C             call ClearScreen
2910  8FEC C3 DD 80             jp LevelSelection
2911  8FEF              ;------------------------------------------------------------------------
2912  8FEF              ; Clear left running human
2913  8FEF              ;------------------------------------------------------------------------
2914  8FEF              ClearLeftRunningHuman:
2915  8FEF 1D                   DEC E
2916  8FF0 16 14                LD D, 20
2917  8FF2 3E 20                LD A, 32
2918  8FF4 CD EB 8D             CALL PrintRomChar
2919  8FF7 14                   INC D
2920  8FF8 3E 20                LD A, 32
2921  8FFA CD EB 8D             CALL PrintRomChar
2922  8FFD 14                   INC D
2923  8FFE 3E 20                LD A, 32
2924  9000 CD EB 8D             CALL PrintRomChar
2925  9003 15                   DEC D
2926  9004 15                   DEC D
2927  9005 1C                   INC E
2928  9006 C9                   RET
2929  9007              ;------------------------------------------------------------------------
2930  9007              ; Clear right running human
2931  9007              ;------------------------------------------------------------------------
2932  9007              ClearRightRunningHuman:
2933  9007 1C                   INC E
2934  9008 16 14                LD D, 20
2935  900A 3E 20                LD A, 32
2936  900C CD EB 8D             CALL PrintRomChar
2937  900F 14                   INC D
2938  9010 3E 20                LD A, 32
2939  9012 CD EB 8D             CALL PrintRomChar
2940  9015 14                   INC D
2941  9016 3E 20                LD A, 32
2942  9018 CD EB 8D             CALL PrintRomChar
2943  901B 15                   DEC D
2944  901C 15                   DEC D
2945  901D 1D                   DEC E
2946  901E C9                   RET
2947  901F
2948  901F
2949  901F
2950  901F
2951  901F
2952  901F
2953  901F              ;------------------------------------------------------------------------
2954  901F              ; Move martian Bullets on screen
2955  901F              ;------------------------------------------------------------------------
2956  901F              MoveMartianBullets:
2957  901F
2958  901F
2959  901F              MoveMartianBulletsLoops:
2960  901F 21 4E 99     	ld	hl, CurrentMartianBullet
2961  9022 7E           	ld	a, (hl)
2962  9023 FE 0F        	cp	15
2963  9025 C2 2E 90     	jp      nz, MoveMartianBulletsLoopsContinue
2964  9028 21 4E 99             ld	hl, CurrentMartianBullet
2965  902B 36 00        	ld	(hl), 0		                                        ; Reset martian bullets counter
2966  902D C9                   ret                                                             ; All martian bullets processed
2967  902E              MoveMartianBulletsLoopsContinue:
2968  902E 21 86 98     	ld	hl, MartianBullets					; Get first X element address of martian bullets array
2969  9031 CD B0 8A     	call	AddAToHL 						; Get current X element address of martian bullets array
2970  9034 4E                   ld	c, (hl)							; Get X martian bullet position
2971  9035 3E 64        	ld	a, 100							; Add 100 positions to X element address for to find Y element address
2972  9037 CD B0 8A     	call	AddAToHL
2973  903A 46                   ld	b, (hl)							; Get Y martian bullet position
2974  903B 7E           	ld	a, (hl)							; Get current Bullet Y position
2975  903C FE 00        	cp	0
2976  903E C4 4A 90     	call	nz, MoveMartianBulletsOk				; Move martians Bullet
2977  9041 21 4E 99             ld	hl, CurrentMartianBullet
2978  9044 7E           	ld	a, (hl)							; Get current Bullet array index
2979  9045 3C           	inc	a							; Increment array index
2980  9046 77           	ld	(hl), a							; Save new counter of array index position
2981  9047 C3 1F 90     	jp 	MoveMartianBulletsLoops
2982  904A              MoveMartianBulletsOk:
2983  904A
2984  904A CD 34 91     	call	RemoveMartianShipBullets				; Remove Bullet from current position
2985  904D 78           	ld	a, b
2986  904E 3C           	inc	a							; Increment Y position
2987  904F              ;       cp      21
2988  904F              ;       jp      nz, MoveMartianBulletsOkContinue
2989  904F              ;       inc     a
2990  904F              MoveMartianBulletsOkContinue:
2991  904F 77           	ld	(hl), a							; Save new Y position in array
2992  9050 FE 16        	cp	22
2993  9052 CA 5D 90     	jp	z, MoveMartianBulletsClearArray				; Clear array for no printed Bullet
2994  9055 21 4E 99     	ld	hl, CurrentMartianBullet
2995  9058 7E           	ld	a, (hl)
2996  9059 CD 4A 91     	call	PrintMartianShipBullet
2997  905C C9           	ret
2998  905D
2999  905D              MoveMartianBulletsClearArray:
3000  905D 21 4E 99     	ld	hl, CurrentMartianBullet
3001  9060 7E           	ld	a, (hl)							; Get current array index
3002  9061 21 86 98     	ld	hl, MartianBullets					; Get first X element address of Bullets array
3003  9064 CD B0 8A     	call	AddAToHL						; Get current X element address of Bullets array
3004  9067 7E                   ld      a, (hl)
3005  9068 5F                   ld      e, a
3006  9069 36 00        	ld	(hl), 0						        ; Reset X position
3007  906B 3E 64        	ld	a, 100						        ; Add 100 positions to X element address for to find Y element address
3008  906D CD B0 8A     	call	AddAToHL
3009  9070 7E                   ld      a, (hl)
3010  9071 36 00        	ld	(hl), 0							; Reset Y position
3011  9073                      ;D      B, 21
3012  9073                      ;D      C,E
3013  9073                      ;ALL RemoveMartianShipBullets
3014  9073 16 15                ld      d, 21
3015  9075 3E 20                ld      a, 32                                                   ; remove martian bullet from screen
3016  9077 CD C1 8D             call    PrintRamChar
3017  907A 1C                   inc     e
3018  907B 3E 20                ld      a, 32
3019  907D CD C1 8D             call    PrintRamChar
3020  9080 C9           	ret
3021  9081              MartianBulletFireEvaluation:
3022  9081 21 83 98     	ld	hl, MartianShipsInfo+22
3023  9084 36 FF        	ld	(hl), -1					        ; Reset martian ship counter
3024  9086              MartianBulletFireEvaluationLoop:
3025  9086 21 83 98     	ld	hl, MartianShipsInfo+22
3026  9089 7E           	ld	a, (hl)							; Get martian ship counter
3027  908A 3C           	inc	a							; Increase counter
3028  908B FE 04        	cp	4
3029  908D C8           	ret	z 							; Return after loop of all potential martians ships on screen
3030  908E 21 83 98     	ld	hl, MartianShipsInfo+22
3031  9091 77           	ld	(hl), a							; Set martian ship counter
3032  9092 21 6F 98     	ld	hl, MartianShipsInfo+2
3033  9095 CD B0 8A     	call	AddAToHL
3034  9098 7E           	ld	a, (hl)
3035  9099 FE 00        	cp	0
3036  909B CA 86 90     	jp	z, MartianBulletFireEvaluationLoop		        ; No martian ship present on screen with currend index
3037  909E CD 2A 91     	call	GenerateNewRandomMartianBulletNumber		        ; Get random number
3038  90A1 21 6D 98     	ld	hl, MartianShipsInfo				        ; Get Bullet fire ratio
3039  90A4 BE           	cp	(hl)
3040  90A5 DC AB 90     	call	c, MartianBulletFireEvaluationOk			; Fire Bullet
3041  90A8 C3 86 90     	jp	MartianBulletFireEvaluationLoop
3042  90AB              MartianBulletFireEvaluationOk:
3043  90AB 21 83 98     	ld	hl, MartianShipsInfo+22
3044  90AE 7E           	ld	a, (hl)							; Get martian ship id
3045  90AF 21 6F 98     	ld	hl, MartianShipsInfo+2
3046  90B2 CD B0 8A     	call	AddAToHL
3047  90B5 4E           	ld	c, (hl)							; Get X martian ship position
3048  90B6 21 83 98     	ld	hl, MartianShipsInfo+22
3049  90B9 7E           	ld	a, (hl)							; Get martian ship id
3050  90BA 21 73 98     	ld	hl, MartianShipsInfo+6
3051  90BD CD B0 8A     	call	AddAToHL
3052  90C0 46           	ld	b, (hl)							; Get Y martian ship position
3053  90C1 CD D8 90     	call	MartianBulletFireEvaluationFirstIndexAvaible
3054  90C4 FE 0F        	cp	15
3055  90C6 C8           	ret	z 							; No free Bullet array index found
3056  90C7 04           	inc	b							; Increase Y pos 2 times for display Bullet under the ship
3057  90C8 04           	inc	b
3058  90C9 57                   ld      d, a
3059  90CA 79                   ld      a, c
3060  90CB E6 01                and     1
3061  90CD 20 01                jr      nz, MartianBulletFireEvaluationOkEven
3062  90CF 0C           	inc 	c							; Increase X pos for display Bullet to have an even x position
3063  90D0              MartianBulletFireEvaluationOkEven:
3064  90D0 7A                   ld      a, d
3065  90D1 CD 9F 91     	call	UpdateMartianBulletPosition
3066  90D4 CD 4A 91     	call	PrintMartianShipBullet
3067  90D7 C9           	ret
3068  90D8              ;------------------------------------------------------------------------
3069  90D8              ; Get first available index in martian Bullets array
3070  90D8              ; Return A=First available index
3071  90D8              ;------------------------------------------------------------------------
3072  90D8              MartianBulletFireEvaluationFirstIndexAvaible:
3073  90D8 C5           	push	bc
3074  90D9 AF           	xor     a
3075  90DA              MartianBulletFireEvaluationFirstIndexAvaibleLoop:
3076  90DA FE 0F        	cp	15
3077  90DC CA F4 90     	jp	z, MartianBulletFireEvaluationFirstIndexAvaibleNoFound
3078  90DF 4F           	ld	c, a
3079  90E0 21 86 98     	ld	hl, MartianBullets
3080  90E3 CD B0 8A     	call	AddAToHL
3081  90E6 7E           	ld	a,(hl)
3082  90E7 FE 00        	cp	0
3083  90E9 CA F1 90     	jp	z, MartianBulletFireEvaluationFirstIndexAvaibleLoopEnd
3084  90EC 79           	ld	a, c
3085  90ED 3C           	inc	a
3086  90EE C3 DA 90     	jp	MartianBulletFireEvaluationFirstIndexAvaibleLoop
3087  90F1              MartianBulletFireEvaluationFirstIndexAvaibleLoopEnd:
3088  90F1 79           	ld	a,c
3089  90F2 C1           	pop	bc
3090  90F3 C9           	ret
3091  90F4              MartianBulletFireEvaluationFirstIndexAvaibleNoFound:
3092  90F4 0E 0F        	ld	c, 15
3093  90F6 C3 F1 90     	jp 	MartianBulletFireEvaluationFirstIndexAvaibleLoopEnd
3094  90F9
3095  90F9              ;------------------------------------------------------------------------
3096  90F9              ; Reset martian Bullets positions
3097  90F9              ;------------------------------------------------------------------------
3098  90F9              ResetMartianBulletsPositions:
3099  90F9 AF           	xor	a			; Reset counter
3100  90FA 21 86 98     	ld	hl, MartianBullets
3101  90FD              ResetMartianBulletsPositionsLoop:
3102  90FD FE 0F        	cp	15
3103  90FF C8           	ret	z 		        ; All positions reset
3104  9100 F5           	push	af
3105  9101 E5           	push	hl
3106  9102 36 00        	ld	(hl), 0
3107  9104 3E 64        	ld	a, 100
3108  9106 CD B0 8A     	call	AddAToHL
3109  9109 36 00        	ld	(hl), 0
3110  910B E1           	pop 	hl
3111  910C F1           	pop 	af
3112  910D 23           	inc	hl
3113  910E 3C           	inc    	a
3114  910F C3 FD 90     	jp	ResetMartianBulletsPositionsLoop
3115  9112
3116  9112              ;------------------------------------------------------------------------
3117  9112              ; Reset martian ship info
3118  9112              ;------------------------------------------------------------------------
3119  9112              ResetMartianInfo:
3120  9112 21 6D 98     	ld	hl, MartianShipsInfo
3121  9115 3E 01        	ld	a, 1
3122  9117              ResetMartianInfoLoop:
3123  9117 FE 19        	cp	25
3124  9119 C8           	ret	z
3125  911A 36 00        	ld	(hl), 0
3126  911C 23           	inc	hl
3127  911D 3C           	inc 	a
3128  911E C3 17 91     	jp	ResetMartianInfoLoop
3129  9121
3130  9121              ;------------------------------------------------------------------------
3131  9121              ; Reset human weapon hide timer
3132  9121              ;------------------------------------------------------------------------
3133  9121              ResetHumanWeaponHideTimer:
3134  9121 E5                   push hl
3135  9122 21 66 98             ld hl, HumanWeaponHideTimer
3136  9125 3E 00                ld a, 0
3137  9127 77                   ld (hl), a
3138  9128 E1                   pop hl
3139  9129 C9                   ret
3140  912A
3141  912A              ;------------------------------------------------------------------------
3142  912A              ; Generate new random number for martian ship Bullet
3143  912A              ; Return A=Generated random number (0<=a<=255)
3144  912A              ;------------------------------------------------------------------------
3145  912A              GenerateNewRandomMartianBulletNumber:
3146  912A C5           	push	bc
3147  912B ED 5F        	ld	a, r
3148  912D 47           	ld	b, a
3149  912E 87           	add	a, a
3150  912F 87           	add	a, a
3151  9130 80           	add	a, b
3152  9131 3C           	inc	a
3153  9132 C1           	pop	bc
3154  9133 C9           	ret
3155  9134
3156  9134
3157  9134
3158  9134              ;------------------------------------------------------------------------
3159  9134              ; Remove martian ship Bullets
3160  9134              ; C: X position,
3161  9134              ; B: Y position
3162  9134              ;------------------------------------------------------------------------
3163  9134              RemoveMartianShipBullets:
3164  9134 78           	ld	a, b
3165  9135 FE 00        	cp	0
3166  9137 C8           	ret	z			; No valid Y position
3167  9138 C5           	push	bc
3168  9139 D5                   push    de
3169  913A 3E 20        	ld	a, 32
3170  913C 50                   ld      d, b
3171  913D 59                   ld      e, c
3172  913E CD C1 8D     	call	PrintRamChar	        ; Print space at Bullet position
3173  9141
3174  9141 1C           	inc	e
3175  9142 3E 20        	ld	a, 32			; Print space at Bullet position (X+1)
3176  9144 CD C1 8D     	call	PrintRamChar
3177  9147 D1                   pop     de
3178  9148 C1           	pop	bc
3179  9149 C9           	ret
3180  914A              ;------------------------------------------------------------------------
3181  914A              ; Print martian ship Bullet
3182  914A              ; A: Array position
3183  914A              ;------------------------------------------------------------------------
3184  914A              PrintMartianShipBullet:
3185  914A C5           	push	bc
3186  914B F5           	push	af
3187  914C 21 50 99             ld      hl, TempValue
3188  914F 77                   ld      (hl), a
3189  9150 21 86 98     	ld	hl, MartianBullets
3190  9153 CD B0 8A     	call	AddAToHL
3191  9156 4E           	ld	c,(hl)				; Get X position
3192  9157 F1           	pop 	af
3193  9158 C6 64        	add	a, 100
3194  915A 21 86 98     	ld	hl, MartianBullets
3195  915D CD B0 8A     	call	AddAToHL
3196  9160 46           	ld	b,(hl)				; Get Y position
3197  9161 78           	ld	a, b
3198  9162 FE 00        	cp	0
3199  9164 CA 9D 91     	jp	z, PrintMartianShipBulletEnd      ; No valid Y position
3200  9167 D5                   push    de
3201  9168
3202  9168 50                   ld      d,b
3203  9169 59                   ld      e,c
3204  916A 15                   dec     d
3205  916B 3E 20                ld      a, 32
3206  916D CD C1 8D             call   PrintRamChar
3207  9170 1C                   inc     e
3208  9171 3E 20                ld      a, 32
3209  9173 CD C1 8D             call   PrintRamChar
3210  9176 1D                   dec e
3211  9177 14                   inc d
3212  9178
3213  9178 3E C1        	ld	a, SPRT_MARTIAN_BULLET
3214  917A CD C1 8D     	call	PrintRamChar
3215  917D 1C           	inc	e
3216  917E 3E C2        	ld	a, SPRT_MARTIAN_BULLET+1
3217  9180 CD C1 8D     	call	PrintRamChar
3218  9183
3219  9183 21 50 99             ld      hl, TempValue
3220  9186 7E                   ld      a, (hl)
3221  9187 21 86 98             ld	hl, MartianBullets
3222  918A CD B0 8A     	call	AddAToHL
3223  918D 7E           	ld	a,(hl)				; Get X position
3224  918E FE 00                cp      0
3225  9190 C2 9C 91             jp      nz, PrintMartianShipBulletContinue
3226  9193 3E 20                ld      a, 32
3227  9195 CD C1 8D             call    PrintRamChar
3228  9198 1D                   dec     e
3229  9199 CD C1 8D             call    PrintRamChar
3230  919C              PrintMartianShipBulletContinue:
3231  919C D1                   pop     de
3232  919D              PrintMartianShipBulletEnd:
3233  919D C1           	pop		bc
3234  919E C9           	ret
3235  919F              ;------------------------------------------------------------------------
3236  919F              ; Update martian Bullet position
3237  919F              ; C: X position
3238  919F              ; B: Y position
3239  919F              ; A: Array index
3240  919F              ;------------------------------------------------------------------------
3241  919F              UpdateMartianBulletPosition:
3242  919F F5           	push	af
3243  91A0 21 86 98     	ld	hl, MartianBullets
3244  91A3 CD B0 8A     	call	AddAToHL
3245  91A6 71           	ld	(hl), c			; Save X position
3246  91A7 F1           	pop 	af
3247  91A8 F5           	push	af
3248  91A9 C6 64        	add	a, 100
3249  91AB 21 86 98     	ld	hl, MartianBullets
3250  91AE CD B0 8A     	call	AddAToHL
3251  91B1 70           	ld	(hl), b		        ; Save Y position
3252  91B2 F1           	pop 	af
3253  91B3 C9           	ret
3254  91B4
3255  91B4
3256  91B4
3257  91B4              ;========================================================================
3258  91B4              ; TILE DEFINITIONS
3259  91B4              ;========================================================================
3260  91B4              TilesDef:
3261  91B4 00 00 00 1F          db 0x00,0x00,0x00,0x1F,0x10,0x10,0x10,0x10      ; TileBorderTopLeft - 96
3261  91B8 10 10 10 10
3262  91BC 10 10 10 10          db 0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10      ; TileBorderVerical - 97
3262  91C0 10 10 10 10
3263  91C4 00 00 00 FF          db 0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00      ; TileBorderHorizontal - 98
3263  91C8 00 00 00 00
3264  91CC 00 00 00 F0          db 0x00,0x00,0x00,0xF0,0x10,0x10,0x10,0x10      ; TileBorderTopRight - 99
3264  91D0 10 10 10 10
3265  91D4 10 10 10 1F          db 0x10,0x10,0x10,0x1F,0x00,0x00,0x00,0x00      ; TileBorderBottomLeft - 100
3265  91D8 00 00 00 00
3266  91DC 10 10 10 F0          db 0x10,0x10,0x10,0xF0,0x00,0x00,0x00,0x00      ; TileBorderBottomRight - 101
3266  91E0 00 00 00 00
3267  91E4 88 D8 A9 A8          db 0x88,0xD8,0xA9,0xA8,0x89,0x8A,0x89,0x00      ; TileMartianLabel1 - 102
3267  91E8 89 8A 89 00
3268  91EC 00 00 CB 2C          db 0x00,0x00,0xCB,0x2C,0xE8,0x28,0xE8,0x00      ; TileMartianLabel2 - 103
3268  91F0 E8 28 E8 00
3269  91F4 10 10 38 90          db 0x10,0x10,0x38,0x90,0x10,0x12,0x0C,0x00      ; TileMartianLabel3 - 104
3269  91F8 10 12 0C 00
3270  91FC 40 00 C7 40          db 0x40,0x00,0xC7,0x40,0x47,0x48,0xE7,0x00      ; TileMartianLabel4 - 105
3270  9200 47 48 E7 00
3271  9204 00 00 2C B2          db 0x00,0x00,0x2C,0xB2,0xA2,0xA2,0xA2,0x00      ; TileMartianLabel5 - 106
3271  9208 A2 A2 A2 00
3272  920C 00 00 78 80          db 0x00,0x00,0x78,0x80,0xF0,0x08,0xF0,0x00      ; TileMartianLabel6 - 107
3272  9210 F0 08 F0 00
3273  9214 88 88 8A FA          db 0x88,0x88,0x8A,0xFA,0x8A,0x8A,0x89,0x00      ; TileHumansLabel1 - 108
3273  9218 8A 8A 89 00
3274  921C 00 00 4D 4A          db 0x00,0x00,0x4D,0x4A,0x4A,0x4A,0xAA,0x00      ; TileHumansLabel2 - 109
3274  9220 4A 4A AA 00
3275  9224 00 00 1C 82          db 0x00,0x00,0x1C,0x82,0x9E,0xA2,0x9E,0x00      ; TileHumansLabel3 - 110
3275  9228 9E A2 9E 00
3276  922C 00 00 B1 CA          db 0x00,0x00,0xB1,0xCA,0x8B,0x88,0x8B,0x00      ; TileHumansLabel4 - 111
3276  9230 8B 88 8B 00
3277  9234 00 00 E0 00          db 0x00,0x00,0xE0,0x00,0xC0,0x20,0xC0,0x00      ; TileHumansLabel5 - 112
3277  9238 C0 20 C0 00
3278  923C 03 03 03 03          db 0x03,0x03,0x03,0x03,0x03,0x3F,0x3F,0x3F      ; TileHumanStatic1_1 - 113
3278  9240 03 3F 3F 3F
3279  9244 C0 C0 C0 C0          db 0xC0,0xC0,0xC0,0xC0,0xC0,0xFC,0xFC,0xFC      ; TileHumanStatic1_2 - 114
3279  9248 C0 FC FC FC
3280  924C 33 33 33 33          db 0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33      ; TileHumanStatic2_1 - 115
3280  9250 33 33 33 33
3281  9254 CC CC CC CC          db 0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC      ; TileHumanStatic2_2 - 116
3281  9258 CC CC CC CC
3282  925C 03 03 03 03          db 0x03,0x03,0x03,0x03,0x03,0x1F,0x1F,0x1F      ; TileHumanStatic3_1 - 117
3282  9260 03 1F 1F 1F
3283  9264 C0 C0 C0 C0          db 0xC0,0xC0,0xC0,0xC0,0xC0,0xF8,0xF8,0xF8      ; TileHumanStatic3_2 - 118
3283  9268 C0 F8 F8 F8
3284  926C 0E 0E 0E 0E          db 0x0E,0x0E,0x0E,0x0E,0x06,0x06,0x01,0x19      ; TileHumanRightRunning1_1_1 - 119
3284  9270 06 06 01 19
3285  9274 00 00 00 00          db 0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80      ; TileHumanRightRunning1_1_2 - 120
3285  9278 00 00 80 80
3286  927C 19 07 07 01          db 0x19,0x07,0x07,0x01,0x01,0x01,0x01,0x01      ; TileHumanRightRunning1_2_1 - 121
3286  9280 01 01 01 01
3287  9284 80 80 80 E0          db 0x80,0x80,0x80,0xE0,0xE0,0x98,0x98,0x80      ; TileHumanRightRunning1_2_2 - 122
3287  9288 E0 98 98 80
3288  928C 01 01 06 06          db 0x01,0x01,0x06,0x06,0x06,0x18,0x18,0x18      ; TileHumanRightRunning1_3_1 - 123
3288  9290 06 18 18 18
3289  9294 80 80 60 60          db 0x80,0x80,0x60,0x60,0x18,0x18,0x06,0x06      ; TileHumanRightRunning1_3_2 - 124
3289  9298 18 18 06 06
3290  929C 03 03 03 03          db 0x03,0x03,0x03,0x03,0x01,0x01,0x01,0x01      ; TileHumanRightRunning2_1_1 - 125
3290  92A0 01 01 01 01
3291  92A4 00 00 00 00          db 0x00,0x00,0x00,0x00,0x00,0x98,0x98,0xE0      ; TileHumanRightRunning2_1_2 - 126
3291  92A8 00 98 98 E0
3292  92AC 01 07 07 19          db 0x01,0x07,0x07,0x19,0x19,0x01,0x01,0x01      ; TileHumanRightRunning2_2_1 - 127
3292  92B0 19 01 01 01
3293  92B4 E0 80 80 80          db 0xE0,0x80,0x80,0x80,0x80,0x80,0x80,0x80      ; TileHumanRightRunning2_2_2 - 128
3293  92B8 80 80 80 80
3294  92BC 03 03 0C 0C          db 0x03,0x03,0x0C,0x0C,0x03,0x03,0x00,0x00      ; TileHumanRightRunning2_3_1 - 129
3294  92C0 03 03 00 00
3295  92C4 60 60 00 00          db 0x60,0x60,0x00,0x00,0x00,0x00,0xC0,0xC0      ; TileHumanRightRunning2_3_2 - 130
3295  92C8 00 00 C0 C0
3296  92CC 01 01 01 01          db 0x01,0x01,0x01,0x01,0x00,0x00,0x33,0x33      ; TileHumanRightRunning3_1_1 - 131
3296  92D0 00 00 33 33
3297  92D4 C0 C0 C0 C0          db 0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0x00      ; TileHumanRightRunning3_1_2 - 132
3297  92D8 C0 C0 00 00
3298  92DC 0F 0F 01 01          db 0x0F,0x0F,0x01,0x01,0x01,0x01,0x01,0x01      ; TileHumanRightRunning3_2_1 - 133
3298  92E0 01 01 01 01
3299  92E4 00 00 C0 C0          db 0x00,0x00,0xC0,0xC0,0x30,0x30,0x00,0x00      ; TileHumanRightRunning3_2_2 - 134
3299  92E8 30 30 00 00
3300  92EC 01 01 0C 0C          db 0x01,0x01,0x0C,0x0C,0x0C,0x0C,0x03,0x03      ; TileHumanRightRunning3_3_1 - 135
3300  92F0 0C 0C 03 03
3301  92F4 00 00 C0 C0          db 0x00,0x00,0xC0,0xC0,0xC0,0x30,0x30,0x30      ; TileHumanRightRunning3_3_2 - 136
3301  92F8 C0 30 30 30
3302  92FC 00 00 00 00          db 0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01      ; TileHumanLeftRunning1_1_1 - 137
3302  9300 00 00 01 01
3303  9304 70 70 70 70          db 0x70,0x70,0x70,0x70,0x60,0x60,0x80,0x98      ; TileHumanLeftRunning1_1_2 - 138
3303  9308 60 60 80 98
3304  930C 01 01 01 07          db 0x01,0x01,0x01,0x07,0x07,0x19,0x19,0x01      ; TileHumanLeftRunning1_2_1 - 139
3304  9310 07 19 19 01
3305  9314 98 E0 E0 80          db 0x98,0xE0,0xE0,0x80,0x80,0x80,0x80,0x80      ; TileHumanLeftRunning1_2_2 - 140
3305  9318 80 80 80 80
3306  931C 01 01 06 06          db 0x01,0x01,0x06,0x06,0x18,0x18,0x60,0x60      ; TileHumanLeftRunning1_3_1 - 141
3306  9320 18 18 60 60
3307  9324 80 80 60 60          db 0x80,0x80,0x60,0x60,0x60,0x18,0x18,0x18      ; TileHumanLeftRunning1_3_2 - 142
3307  9328 60 18 18 18
3308  932C 00 00 00 00          db 0x00,0x00,0x00,0x00,0x00,0x19,0x19,0x07      ; TileHumanLeftRunning2_1_1 - 143
3308  9330 00 19 19 07
3309  9334 C0 C0 C0 C0          db 0xC0,0xC0,0xC0,0xC0,0x80,0x80,0x80,0x80      ; TileHumanLeftRunning2_1_2 - 144
3309  9338 80 80 80 80
3310  933C 07 01 01 01          db 0x07,0x01,0x01,0x01,0x01,0x01,0x01,0x01      ; TileHumanLeftRunning2_2_1 - 145
3310  9340 01 01 01 01
3311  9344 80 E0 E0 98          db 0x80,0xE0,0xE0,0x98,0x98,0x80,0x80,0x80      ; TileHumanLeftRunning2_2_2 - 146
3311  9348 98 80 80 80
3312  934C 06 06 00 00          db 0x06,0x06,0x00,0x00,0x00,0x00,0x03,0x03      ; TileHumanLeftRunning2_3_1 - 147
3312  9350 00 00 03 03
3313  9354 C0 C0 30 30          db 0xC0,0xC0,0x30,0x30,0xC0,0xC0,0x00,0x00      ; TileHumanLeftRunning2_3_2 - 148
3313  9358 C0 C0 00 00
3314  935C 03 03 03 03          db 0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00      ; TileHumanLeftRunning3_1_1 - 149
3314  9360 03 03 00 00
3315  9364 80 80 80 80          db 0x80,0x80,0x80,0x80,0x00,0x00,0xCC,0xCC      ; TileHumanLeftRunning3_1_2 - 150
3315  9368 00 00 CC CC
3316  936C 00 00 03 03          db 0x00,0x00,0x03,0x03,0x0C,0x0C,0x00,0x00      ; TileHumanLeftRunning3_2_1 - 151
3316  9370 0C 0C 00 00
3317  9374 F0 F0 80 80          db 0xF0,0xF0,0x80,0x80,0x80,0x80,0x80,0x80      ; TileHumanLeftRunning3_2_2 - 152
3317  9378 80 80 80 80
3318  937C 00 00 03 03          db 0x00,0x00,0x03,0x03,0x03,0x0C,0x0C,0x0C      ; TileHumanLeftRunning3_3_1 - 153
3318  9380 03 0C 0C 0C
3319  9384 80 80 30 30          db 0x80,0x80,0x30,0x30,0x30,0x30,0xC0,0xC0      ; TileHumanLeftRunning3_3_2 - 154
3319  9388 30 30 C0 C0
3320  938C 00 00 00 00          db 0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x03      ; TileHumanJumping1_1_1 - 155
3320  9390 00 03 03 03
3321  9394 00 00 00 00          db 0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0      ; TileHumanJumping1_1_2 - 156
3321  9398 00 C0 C0 C0
3322  939C 03 03 3F 3F          db 0x03,0x03,0x3F,0x3F,0x3F,0x33,0x33,0x33      ; TileHumanJumping1_2_1 - 157
3322  93A0 3F 33 33 33
3323  93A4 C0 C0 FC FC          db 0xC0,0xC0,0xFC,0xFC,0xFC,0xCC,0xCC,0xCC      ; TileHumanJumping1_2_2 - 158
3323  93A8 FC CC CC CC
3324  93AC 03 03 03 1C          db 0x03,0x03,0x03,0x1C,0x1C,0x1C,0x1C,0x1C      ; TileHumanJumping1_3_1 - 159
3324  93B0 1C 1C 1C 1C
3325  93B4 C0 C0 C0 38          db 0xC0,0xC0,0xC0,0x38,0x38,0x38,0x38,0x38      ; TileHumanJumping1_3_2 - 160
3325  93B8 38 38 38 38
3326  93BC 00 00 00 03          db 0x00,0x00,0x00,0x03,0x03,0x03,0x03,0x03      ; TileHumanJumping2_1_1 - 161
3326  93C0 03 03 03 03
3327  93C4 00 00 00 C0          db 0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0      ; TileHumanJumping2_1_2 - 162
3327  93C8 C0 C0 C0 C0
3328  93CC FF FF FF 03          db 0xFF,0xFF,0xFF,0x03,0x03,0x03,0x03,0x03      ; TileHumanJumping2_2_1 - 163
3328  93D0 03 03 03 03
3329  93D4 FF FF FF C0          db 0xFF,0xFF,0xFF,0xC0,0xC0,0xC0,0xC0,0xC0      ; TileHumanJumping2_2_2 - 164
3329  93D8 C0 C0 C0 C0
3330  93DC 03 03 FF FF          db 0x03,0x03,0xFF,0xFF,0xFF,0x00,0x00,0x00      ; TileHumanJumping2_3_1 - 165
3330  93E0 FF 00 00 00
3331  93E4 C0 C0 FF FF          db 0xC0,0xC0,0xFF,0xFF,0xFF,0x00,0x00,0x00      ; TileHumanJumping2_3_2 - 166
3331  93E8 FF 00 00 00
3332  93EC 33 33 33 33          db 0x33,0x33,0x33,0x33,0x33,0x3F,0x3F,0x3F      ; TileHumanJumping3_1_1 - 167
3332  93F0 33 3F 3F 3F
3333  93F4 CC CC CC CC          db 0xCC,0xCC,0xCC,0xCC,0xCC,0xFC,0xFC,0xFC      ; TileHumanJumping3_1_2 - 168
3333  93F8 CC FC FC FC
3334  93FC 03 03 03 03          db 0x03,0x03,0x03,0x03,0x03,0xC3,0xC3,0x3F      ; TileHumanJumping3_2_1 - 169
3334  9400 03 C3 C3 3F
3335  9404 C0 C0 C0 C0          db 0xC0,0xC0,0xC0,0xC0,0xC0,0xC3,0xC3,0xFC      ; TileHumanJumping3_2_2 - 170
3335  9408 C0 C3 C3 FC
3336  940C 3F 3F 00 00          db 0x3F,0x3F,0x00,0x00,0x00,0x00,0x00,0x00      ; TileHumanJumping3_3_1 - 171
3336  9410 00 00 00 00
3337  9414 FC FC 00 00          db 0xFC,0xFC,0x00,0x00,0x00,0x00,0x00,0x00      ; TileHumanJumping3_3_2 - 172
3337  9418 00 00 00 00
3338  941C DF DF C1 C1          db 0xDF,0xDF,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1      ; Tileartian1_A_1_1 - 173
3338  9420 C1 C1 C1 C1
3339  9424 FB FB 83 83          db 0xFB,0xFB,0x83,0x83,0x83,0x83,0x83,0x83      ; Tileartian1_A_1_2 - 174
3339  9428 83 83 83 83
3340  942C C1 C1 C1 C1          db 0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xDF,0xDF      ; Tileartian1_B_1_1 - 175
3340  9430 C1 C1 DF DF
3341  9434 83 83 83 83          db 0x83,0x83,0x83,0x83,0x83,0x83,0xFB,0xFB      ; Tileartian1_B_1_2 - 176
3341  9438 83 83 FB FB
3342  943C E1 E1 E1 1F          db 0xE1,0xE1,0xE1,0x1F,0x1F,0xE1,0xE1,0xE1      ; Tileartian2_A_1_1 - 177
3342  9440 1F E1 E1 E1
3343  9444 C7 C7 C7 F8          db 0xC7,0xC7,0xC7,0xF8,0xF8,0xC7,0xC7,0xC7      ; Tileartian2_A_1_2 - 178
3343  9448 F8 C7 C7 C7
3344  944C 01 01 01 FF          db 0x01,0x01,0x01,0xFF,0xFF,0x01,0x01,0x01      ; Tileartian2_B_1_1 - 179
3344  9450 FF 01 01 01
3345  9454 C0 C0 C0 FF          db 0xC0,0xC0,0xC0,0xFF,0xFF,0xC0,0xC0,0xC0      ; Tileartian2_B_1_2 - 180
3345  9458 FF C0 C0 C0
3346  945C C1 E1 F1 D9          db 0xC1,0xE1,0xF1,0xD9,0xCD,0xC7,0xC3,0xC1      ; Tileartian3_A_1_1 - 181
3346  9460 CD C7 C3 C1
3347  9464 83 87 8F 9B          db 0x83,0x87,0x8F,0x9B,0xB3,0xE3,0xC3,0x83      ; Tileartian3_A_1_2 - 182
3347  9468 B3 E3 C3 83
3348  946C C1 C3 C7 CD          db 0xC1,0xC3,0xC7,0xCD,0xD9,0xF1,0xE1,0xC1      ; Tileartian3_B_1_1 - 183
3348  9470 D9 F1 E1 C1
3349  9474 83 C3 E3 B3          db 0x83,0xC3,0xE3,0xB3,0x9B,0x8F,0x87,0x83      ; Tileartian3_B_2_2 - 184
3349  9478 9B 8F 87 83
3350  947C 00 00 00 00          db 0x00,0x00,0x00,0x00,0x01,0x08,0x00,0x02      ; TileExplosion1 - 185
3350  9480 01 08 00 02
3351  9484 08 00 04 01  	db 0x08,0x00,0x04,0x01,0x10,0x04,0x00,0x24      ; TileExplosion2 - 186
3351  9488 10 04 00 24
3352  948C 00 00 00 00  	db 0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00      ; TileExplosion3 - 187
3352  9490 00 00 20 00
3353  9494 80 00 40 00  	db 0x80,0x00,0x40,0x00,0x20,0x08,0x80,0x20      ; TileExplosion4 - 188
3353  9498 20 08 80 20
3354  949C 03 03 03 03  	db 0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03      ; TileHumanBullet1 - 189
3354  94A0 03 03 03 03
3355  94A4 C0 C0 C0 C0  	db 0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0      ; TileHumanBullet2 - 190
3355  94A8 C0 C0 C0 C0
3356  94AC 00 03 03 03  	db 0x00,0x03,0x03,0x03,0x1F,0x1F,0x1F,0xFF      ; TileHumanWeapon1 - 191
3356  94B0 1F 1F 1F FF
3357  94B4 00 C0 C0 C0  	db 0x00,0xC0,0xC0,0xC0,0xF8,0xF8,0xF8,0xFF      ; TileHumanWeapon2 - 192
3357  94B8 F8 F8 F8 FF
3358  94BC 03 03 03 03          db 0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03      ; TileMartianBullet1 - 193
3358  94C0 03 03 03 03
3359  94C4 C0 C0 C0 C0  	db 0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0      ; TileMartianBullet2 - 194
3359  94C8 C0 C0 C0 C0
3360  94CC
3361  94CC              ;========================================================================
3362  94CC              ; CONSTANTS
3363  94CC              ;========================================================================
3364  94CC              SCR_BASE                        EQU 16384       ; Base address of the Spectrum screen
3365  94CC              ATTR_BASE                       EQU 0x5800      ; Start of the attribute area
3366  94CC              ROM_CHAR_SET_ADDRESS            EQU 0x3D00      ; Start of the ROM character set
3367  94CC              RAM_CHAR_SET_ADDRESS            EQU 40000       ; Start of the RAM character set
3368  94CC              RAM_GAME_MATRIX_ADDRESS         EQU 42000       ; Start of the RAM character set
3369  94CC              SPRT_HUMAN_STATIC               EQU 113         ; ASCII code for the static human sprite
3370  94CC              SPRT_JUMPING_HUMAN_1            EQU 155         ; ASCII code for the jumping human sprite (1)
3371  94CC              SPRT_JUMPING_HUMAN_2            EQU 161         ; ASCII code for the jumping human sprite (2)
3372  94CC              SPRT_JUMPING_HUMAN_3            EQU 167         ; ASCII code for the jumping human sprite (3)
3373  94CC              SPRT_HUMAN_RUNNING_LEFT_POS1    EQU 137         ; ASCII code for the running human sprite (left 1)
3374  94CC              SPRT_HUMAN_RUNNING_LEFT_POS2    EQU 143         ; ASCII code for the running human sprite (left 2)
3375  94CC              SPRT_HUMAN_RUNNING_LEFT_POS3    EQU 149         ; ASCII code for the running human sprite (left 3)
3376  94CC              SPRT_HUMAN_RUNNING_RIGHT_POS1   EQU 119         ; ASCII code for the running human sprite (right 1)
3377  94CC              SPRT_HUMAN_RUNNING_RIGHT_POS2   EQU 125         ; ASCII code for the running human sprite (right 2)
3378  94CC              SPRT_HUMAN_RUNNING_RIGHT_POS3   EQU 131         ; ASCII code for the running human sprite (right 3)
3379  94CC              SPRT_HUMAN_WEAPON               EQU 191         ; ASCII code for the human weapon sprite
3380  94CC              SPRT_MARTIAN_SHIP_1_A:	        EQU 173		; First martian ship nr. 1a character
3381  94CC              SPRT_MARTIAN_SHIP_1_B:	        EQU 175		; First martian ship nr. 1b character
3382  94CC              SPRT_MARTIAN_SHIP_2_A:	        EQU 177		; First martian ship nr. 2a character
3383  94CC              SPRT_MARTIAN_SHIP_2_B:	        EQU 179	        ; First martian ship nr. 2b character
3384  94CC              SPRT_MARTIAN_SHIP_3_A:	        EQU 181		; First martian ship nr. 3a character
3385  94CC              SPRT_MARTIAN_SHIP_3_B:	        EQU 183		; First martian ship nr. 3b character
3386  94CC              SPRT_HUMAN_BULLET               EQU 189         ; ASCII code for the human bullet sprite
3387  94CC              SPRT_MARTIAN_BULLET             EQU 193         ; ASCII code for the martian bullet sprite
3388  94CC              SPRT_EXPLOSION                  EQU 185         ; ASCII code for the explosion sprite
3389  94CC              TILE_BORDER_TOP_LEFT_CORNER     EQU 96          ; ASCII code for the top-left corner of the border
3390  94CC              TILE_BORDER_VERTICAL            EQU 97          ; ASCII code for the vertical border
3391  94CC              TILE_BORDER_HORIZONTAL          EQU 98          ; ASCII code for the horizontal border
3392  94CC              TILE_BORDER_TOP_RIGHT_CORNER    EQU 99          ; ASCII code for the top-right corner of the border
3393  94CC              TILE_BORDER_BOTTOM_LEFT_CORNER  EQU 100         ; ASCII code for the bottom-left corner of the border
3394  94CC              TILE_BORDER_BOTTOM_RIGHT_CORNER EQU 101         ; ASCII code for the bottom-right corner of the border
3395  94CC 4D 41 52 54  TEXT_MARTIAN_WAR                db "MARTIAN WAR",0
3395  94D0 49 41 4E 20
3395  94D4 57 41 52 00
3396  94D8 3D 3D 3D 3D  TEXT_MARTIAN_WAR_UNDERLINE      db "===========",0
3396  94DC 3D 3D 3D 3D
3396  94E0 3D 3D 3D 00
3397  94E4 54 68 65 72  TEXT_PRESENTATION_3_1           db "There is one weapon remaining",0
3397  94E8 65 20 69 73
3397  94EC 20 6F 6E 65
3397  94F0 20 77 65 61
3397  94F4 70 6F 6E 20
3397  94F8 72 65 6D 61
3397  94FC 69 6E 69 6E
3397  9500 67 00
3398  9502 6F 6E 20 45  TEXT_PRESENTATION_4_1           db "on Earth.",0
3398  9506 61 72 74 68
3398  950A 2E 00
3399  950C 54 68 65 72  TEXT_PRESENTATION_6_1           db "There will be martian ships",0
3399  9510 65 20 77 69
3399  9514 6C 6C 20 62
3399  9518 65 20 6D 61
3399  951C 72 74 69 61
3399  9520 6E 20 73 68
3399  9524 69 70 73 00
3400  9528 66 6C 79 69  TEXT_PRESENTATION_7_1           db "flying all over the place and",0
3400  952C 6E 67 20 61
3400  9530 6C 6C 20 6F
3400  9534 76 65 72 20
3400  9538 74 68 65 20
3400  953C 70 6C 61 63
3400  9540 65 20 61 6E
3400  9544 64 00
3401  9546 64 72 6F 70  TEXT_PRESENTATION_8_1           db "dropping Bullets down on you",0
3401  954A 70 69 6E 67
3401  954E 20 42 75 6C
3401  9552 6C 65 74 73
3401  9556 20 64 6F 77
3401  955A 6E 20 6F 6E
3401  955E 20 79 6F 75
3401  9562 00
3402  9563 61 6E 64 20  TEXT_PRESENTATION_9_1           db "and the human population.",0
3402  9567 74 68 65 20
3402  956B 68 75 6D 61
3402  956F 6E 20 70 6F
3402  9573 70 75 6C 61
3402  9577 74 69 6F 6E
3402  957B 2E 00
3403  957D 59 6F 75 72  TEXT_PRESENTATION_10_1           db "Your mission is quite simple.",0
3403  9581 20 6D 69 73
3403  9585 73 69 6F 6E
3403  9589 20 69 73 20
3403  958D 71 75 69 74
3403  9591 65 20 73 69
3403  9595 6D 70 6C 65
3403  9599 2E 00
3404  959B 54 68 65 72  TEXT_PRESENTATION_11_1           db "There are a limited number of",0
3404  959F 65 20 61 72
3404  95A3 65 20 61 20
3404  95A7 6C 69 6D 69
3404  95AB 74 65 64 20
3404  95AF 6E 75 6D 62
3404  95B3 65 72 20 6F
3404  95B7 66 00
3405  95B9 6D 61 72 74  TEXT_PRESENTATION_12_1           db "martian ships and if you",0
3405  95BD 69 61 6E 20
3405  95C1 73 68 69 70
3405  95C5 73 20 61 6E
3405  95C9 64 20 69 66
3405  95CD 20 79 6F 75
3405  95D1 00
3406  95D2 64 65 73 74  TEXT_PRESENTATION_13_1           db "destroy all of them before",0
3406  95D6 72 6F 79 20
3406  95DA 61 6C 6C 20
3406  95DE 6F 66 20 74
3406  95E2 68 65 6D 20
3406  95E6 62 65 66 6F
3406  95EA 72 65 00
3407  95ED 74 68 65 79  TEXT_PRESENTATION_14_1           db "they destroy the whole",0
3407  95F1 20 64 65 73
3407  95F5 74 72 6F 79
3407  95F9 20 74 68 65
3407  95FD 20 77 68 6F
3407  9601 6C 65 00
3408  9604 70 6F 70 75  TEXT_PRESENTATION_15_1           db "population of Earth you win.",0
3408  9608 6C 61 74 69
3408  960C 6F 6E 20 6F
3408  9610 66 20 45 61
3408  9614 72 74 68 20
3408  9618 79 6F 75 20
3408  961C 77 69 6E 2E
3408  9620 00
3409  9621 49 66 20 79  TEXT_PRESENTATION_16_1           db "If your weapon is hit it will",0
3409  9625 6F 75 72 20
3409  9629 77 65 61 70
3409  962D 6F 6E 20 69
3409  9631 73 20 68 69
3409  9635 74 20 69 74
3409  9639 20 77 69 6C
3409  963D 6C 00
3410  963F 68 61 76 65  TEXT_PRESENTATION_17_1           db "have to be repaired and the",0
3410  9643 20 74 6F 20
3410  9647 62 65 20 72
3410  964B 65 70 61 69
3410  964F 72 65 64 20
3410  9653 61 6E 64 20
3410  9657 74 68 65 00
3411  965B 72 65 66 6F  TEXT_PRESENTATION_18_1           db "refore will be unusable for a",0
3411  965F 72 65 20 77
3411  9663 69 6C 6C 20
3411  9667 62 65 20 75
3411  966B 6E 75 73 61
3411  966F 62 6C 65 20
3411  9673 66 6F 72 20
3411  9677 61 00
3412  9679 70 65 72 69  TEXT_PRESENTATION_19_1           db "period of time.",0
3412  967D 6F 64 20 6F
3412  9681 66 20 74 69
3412  9685 6D 65 2E 00
3413  9689 48 49 54 20  TEXT_PRESENTATION_21_3           db "HIT \'RETURN\' TO CONTINUE",0
3413  968D 27 52 45 54
3413  9691 55 52 4E 27
3413  9695 20 54 4F 20
3413  9699 43 4F 4E 54
3413  969D 49 4E 55 45
3413  96A1 00
3414  96A2 32 30 32 35  TEXT_FAUSTO_PRACEK               db "2025 - Fausto Pracek",0
3414  96A6 20 2D 20 46
3414  96AA 61 75 73 74
3414  96AE 6F 20 50 72
3414  96B2 61 63 65 6B
3414  96B6 00
3415  96B7 57 48 41 54  TXT_LEVELS:			db 'WHAT LEVEL WOULD YOU LIKE (1-3)?',0
3415  96BB 20 4C 45 56
3415  96BF 45 4C 20 57
3415  96C3 4F 55 4C 44
3415  96C7 20 59 4F 55
3415  96CB 20 4C 49 4B
3415  96CF 45 20 28 31
3415  96D3 2D 33 29 3F
3415  96D7 00
3416  96D8 31 20 20 2D  TXT_LEVEL_1:			db '1  -  Beginner',0
3416  96DC 20 20 42 65
3416  96E0 67 69 6E 6E
3416  96E4 65 72 00
3417  96E7 32 20 20 2D  TXT_LEVEL_2:			db '2  -  Intermediate',0
3417  96EB 20 20 49 6E
3417  96EF 74 65 72 6D
3417  96F3 65 64 69 61
3417  96F7 74 65 00
3418  96FA 33 20 20 2D  TXT_LEVEL_3:			db '3  -  Advanced',0
3418  96FE 20 20 41 64
3418  9702 76 61 6E 63
3418  9706 65 64 00
3419  9709 54 68 65 20  TXT_KEYS:			db 'The control weapon keys are:',0
3419  970D 63 6F 6E 74
3419  9711 72 6F 6C 20
3419  9715 77 65 61 70
3419  9719 6F 6E 20 6B
3419  971D 65 79 73 20
3419  9721 61 72 65 3A
3419  9725 00
3420  9726 34 20 20 20  TXT_KEY_4:			db '4       Move to left',0
3420  972A 20 20 20 20
3420  972E 4D 6F 76 65
3420  9732 20 74 6F 20
3420  9736 6C 65 66 74
3420  973A 00
3421  973B 35 20 20 20  TXT_KEY_5:			db '5       Stop',0
3421  973F 20 20 20 20
3421  9743 53 74 6F 70
3421  9747 00
3422  9748 36 20 20 20  TXT_KEY_6:			db '6       Move to right',0
3422  974C 20 20 20 20
3422  9750 4D 6F 76 65
3422  9754 20 74 6F 20
3422  9758 72 69 67 68
3422  975C 74 00
3423  975E 53 50 41 43  TXT_KEY_SPACE:			db 'SPACE   Fire a missile',0
3423  9762 45 20 20 20
3423  9766 46 69 72 65
3423  976A 20 61 20 6D
3423  976E 69 73 73 69
3423  9772 6C 65 00
3424  9775 53 4F 52 52  TXT_LOSE_1:			db 'SORRY GUY',0
3424  9779 59 20 47 55
3424  977D 59 00
3425  977F 54 48 45 20  TXT_LOSE_2:			db 'THE MARTIANS HAVE SUCCESSFULLY',0
3425  9783 4D 41 52 54
3425  9787 49 41 4E 53
3425  978B 20 48 41 56
3425  978F 45 20 53 55
3425  9793 43 43 45 53
3425  9797 53 46 55 4C
3425  979B 4C 59 00
3426  979E 44 45 53 54  TXT_LOSE_3:			db 'DESTROYED ALL LIFE ON EARTH!',0
3426  97A2 52 4F 59 45
3426  97A6 44 20 41 4C
3426  97AA 4C 20 4C 49
3426  97AE 46 45 20 4F
3426  97B2 4E 20 45 41
3426  97B6 52 54 48 21
3426  97BA 00
3427  97BB 48 49 54 20  TXT_PLAY_AGAIN:		  	db "HIT  \'RETURN\'  TO PLAY AGAIN",0
3427  97BF 20 27 52 45
3427  97C3 54 55 52 4E
3427  97C7 27 20 20 54
3427  97CB 4F 20 50 4C
3427  97CF 41 59 20 41
3427  97D3 47 41 49 4E
3427  97D7 00
3428  97D8 43 4F 4E 47  TXT_WIN_1: 			db 'CONGRATULATIONS',0
3428  97DC 52 41 54 55
3428  97E0 4C 41 54 49
3428  97E4 4F 4E 53 00
3429  97E8 59 4F 55 20  TXT_WIN_2: 			db 'YOU HAVE SAVED  EARTH FROM THE',0
3429  97EC 48 41 56 45
3429  97F0 20 53 41 56
3429  97F4 45 44 20 20
3429  97F8 45 41 52 54
3429  97FC 48 20 46 52
3429  9800 4F 4D 20 54
3429  9804 48 45 00
3430  9807 4D 41 52 54  TXT_WIN_3: 			db 'MARTIAN  ATTACK!!',0
3430  980B 49 41 4E 20
3430  980F 20 41 54 54
3430  9813 41 43 4B 21
3430  9817 21 00
3431  9819 FE 23 5A 58  KEYBOARD_MAP:                   db #FE,"#","Z","X","C","V"
3431  981D 43 56
3432  981F FD 41 53 44                                  db #FD,"A","S","D","F","G"
3432  9823 46 47
3433  9825 FB 51 57 45                                  db #FB,"Q","W","E","R","T"
3433  9829 52 54
3434  982B F7 31 32 33                                  db #F7,"1","2","3","4","5"
3434  982F 34 35
3435  9831 EF 30 39 38                                  db #EF,"0","9","8","7","6"
3435  9835 37 36
3436  9837 DF 50 4F 49                                  db #DF,"P","O","I","U","Y"
3436  983B 55 59
3437  983D BF 23 4C 4B                                  db #BF,"#","L","K","J","H"
3437  9841 4A 48
3438  9843 7F 20 23 4D                                  db #7F," ","#","M","N","B"
3438  9847 4E 42
3439  9849
3440  9849
3441  9849
3442  9849
3443  9849 48 75 6D 61  TEXT_HUMANS                     db "Humans",0
3443  984D 6E 73 00
3444  9850 4D 61 72 74  TEXT_MARTIANS                   db "Martians",0
3444  9854 69 61 6E 73
3444  9858 00
3445  9859
3446  9859              ;========================================================================
3447  9859              ; VARIABLES
3448  9859              ;========================================================================
3449  9859
3450  9859 00           HumansToDisplay                 db 0
3451  985A 00           HumansLastStaticPosLeft         db 0
3452  985B 00           HumansLastStaticPosRight        db 0
3453  985C 00           Humans                          db 0
3454  985D 00           Martians                        db 0
3455  985E 00 00        HumansDigits                    .byte 0, 0
3456  9860 00 00        MartiansDigits                  .byte 0, 0
3457  9862 00           SelectedLevel                   db 0
3458  9863 00           HumanWeaponPosition             db 0
3459  9864 00           HumanWeaponDirection            db 0
3460  9865 00           HumanWeaponBulletXPosition      db 0
3461  9866 00           HumanWeaponHideTimer            db 0
3462  9867 00           HumanWeaponHideLevelTimer       db 0
3463  9868 00           HumanWeaponBulletYPosition      db 0
3464  9869 00           HumansWeaponBulletMaxTop        db 0
3465  986A 00           MartianShipMaxRight             db 0
3466  986B 00           RandomSeed			db 0
3467  986C 00           MartianShipCollisionIndex       db 0
3468  986D 00 00 00 00  MartianShipsInfo		.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0		; Bullet frequency ratio, number of displayd ships, XPos1, Xpos2, XPos3, XPos4, YPos1, YPos2, YPos3, YPos4, Direction 1, Direction 2, Direction 3, Direction 4, Direction changed 1, Direction changed 2, Direction changed 3, Direction changed 4, Type 1, Type 2, Type 3, Type 4, Refreshing ship, Ship speed timer, Ship speed timer counter
3468  9871 00 00 00 00
3468  9875 00 00 00 00
3468  9879 00 00 00 00
3468  987D 00 00 00 00
3468  9881 00 00 00 00
3468  9885 00
3469  9886              MartianBullets:														; 15 X positions, 15 Y positions, speed, speed counter
3470  9886 00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
3470  988A 00 00 00 00
3470  988E 00 00 00 00
3470  9892 00 00 00 00
3470  9896 00 00 00 00
3470  989A 00 00 00 00
3470  989E 00 00 00 00
3470  98A2 00 00 00 00
3470  98A6 00 00 00 00
3470  98AA 00 00 00 00
3470  98AE 00 00 00 00
3470  98B2 00 00 00 00
3470  98B6 00 00 00 00
3470  98BA 00 00 00 00
3470  98BE 00 00 00 00
3470  98C2 00 00 00 00
3470  98C6 00 00 00 00
3470  98CA 00 00 00 00
3470  98CE 00 00 00 00
3470  98D2 00 00 00 00
3470  98D6 00 00 00 00
3470  98DA 00 00 00 00
3470  98DE 00 00 00 00
3470  98E2 00 00 00 00
3470  98E6 00 00 00 00
3471  98EA 00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
3471  98EE 00 00 00 00
3471  98F2 00 00 00 00
3471  98F6 00 00 00 00
3471  98FA 00 00 00 00
3471  98FE 00 00 00 00
3471  9902 00 00 00 00
3471  9906 00 00 00 00
3471  990A 00 00 00 00
3471  990E 00 00 00 00
3471  9912 00 00 00 00
3471  9916 00 00 00 00
3471  991A 00 00 00 00
3471  991E 00 00 00 00
3471  9922 00 00 00 00
3471  9926 00 00 00 00
3471  992A 00 00 00 00
3471  992E 00 00 00 00
3471  9932 00 00 00 00
3471  9936 00 00 00 00
3471  993A 00 00 00 00
3471  993E 00 00 00 00
3471  9942 00 00 00 00
3471  9946 00 00 00 00
3471  994A 00 00 00 00
3472  994E 00           CurrentMartianBullet               db 0
3473  994F 00           SpriteCollisionStaticHumanPosition db 0
3474  9950 00           TempValue                        db 0
3475  9951 00           CurrentJumpingHuman             db 0
3476  9952 EF BE        RandomSeed16                     DEFW 0xBEEF
3477  9954                      SAVESNA "martian.sna", Start
3478  9954
# file closed: martian.asm
